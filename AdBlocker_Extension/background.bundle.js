/*! For license information please see background.bundle.js.LICENSE.txt */
(()=>{var e={219:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var s={},r={};function i(e,t){var n,a,i;return t?(i=0<=(e>>>=0)&&e<256)&&(a=r[e])?a:(n=l(e,(0|e)<0?-1:0,!0),i&&(r[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(a=s[e])?a:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return v}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,a){return new n(e,t,a)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),r=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));r=r.mul(d).add(o(h))}else r=(r=r.mul(s)).add(o(h))}return r.unsigned=t,r}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var b=i(0,!0);n.UZERO=b;var y=i(1);n.ONE=y;var x=i(1,!0);n.UONE=x;var k=i(-1);n.NEG_ONE=k;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var v=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=v;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),r=this,i="";;){var l=r.div(s),c=(r.sub(l.mul(s)).toInt()>>>0).toString(e);if((r=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(y)},S.neg=S.negate,S.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=r+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,r=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,y=0,x=0;return y+=(x+=i*p)>>>16,b+=(y+=r*p)>>>16,y&=65535,b+=(y+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=r*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+s*d+r*c+i*u,l((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,r;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;r=b}else{if(this.eq(I))return e.eq(y)||e.eq(k)?I:e.eq(I)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:k:(s=this.sub(e.mul(n)),r=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=y),r=r.add(d),s=s.sub(p)}return r},S.div=S.divide,S.modulo=function(e){return a(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},464:(e,t,n)=>{var a=n(241),s=n(480),r=n(150),i=n(420),o=n(346),l=n(868),u=n(808);u.alea=a,u.xor128=s,u.xorwow=r,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},241:function(e,t,n){var a;!function(e,s){function r(e){var t,n=this,a=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new r(e),a=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.alea=o}(0,e=n.nmd(e),n.amdD)},868:function(e,t,n){var a;!function(e,s){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.tychei=o}(0,e=n.nmd(e),n.amdD)},480:function(e,t,n){var a;!function(e,s){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xor128=o}(0,e=n.nmd(e),n.amdD)},346:function(e,t,n){var a;!function(e,s){function r(e){var t=this;t.next=function(){var e,n,a=t.w,s=t.X,r=t.i;return t.w=a=a+1640531527|0,n=s[r+34&127],e=s[r=r+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[r]=n^e,t.i=r,n+(a^a>>>16)|0},function(e,t){var n,a,s,r,i,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),s=0,r=-32;r<l;++r)t&&(a^=t.charCodeAt((r+32)%t.length)),0===r&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,r>=0&&(i=i+1640531527|0,s=0==(n=o[127&r]^=a+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,r=512;r>0;--r)a=o[s+34&127],n=o[s=s+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[s]=a^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.X&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},420:function(e,t,n){var a;!function(e,s){function r(e){var t=this;t.next=function(){var e,n,a=t.x,s=t.i;return e=a[s],n=(e^=e>>>7)^e<<24,n^=(e=a[s+1&7])^e>>>10,n^=(e=a[s+3&7])^e>>>3,n^=(e=a[s+4&7])^e<<7,e=a[s+7&7],n^=(e^=e<<13)^e<<9,a[s]=n,t.i=s+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.x&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},150:function(e,t,n){var a;!function(e,s){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new r(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&i(a,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},808:function(e,t,n){var a;!function(s,r,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var a=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(r)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,y(r)]}}():e,3),a),p=new f(a),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),r),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,a=this,s=0,r=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[r=d&r+e[s%n]+(t=i[s])],i[r]=t;(a.g=function(e){for(var t,n=0,s=a.i,r=a.j,i=a.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[r=d&r+t])+(i[r]=t)];return a.i=s,a.j=r,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],s=typeof e;if(t&&"object"==s)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==s?e:e+"\0"}function b(e,t){for(var n,a=e+"",s=0;s<a.length;)t[d&s]=d&(n^=19*t[d&s])+a.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),r),e.exports){e.exports=p;try{o=n(713)}catch(e){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!=typeof self?self:this,[],Math)},378:()=>{},389:()=>{},217:()=>{},99:()=>{},234:()=>{},713:()=>{}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var r=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>yi,computeFlatOffset:()=>Ai,computeOutShape:()=>ki,getNormalizedAxes:()=>Si,isSliceContinous:()=>Ri,maskToAxes:()=>xi,parseSliceParams:()=>Fi,sliceInfo:()=>Di,startForAxis:()=>Ti,startIndicesWithElidedDims:()=>Ci,stopForAxis:()=>Ei,stopIndicesWithElidedDims:()=>$i,stridesForAxis:()=>Ni,stridesWithElidedDims:()=>wi});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Xc,computeOutShape:()=>Kc,segOpComputeOptimalWindowSize:()=>qc});var a={};n.r(a),n.d(a,{ERF_A1:()=>hc,ERF_A2:()=>dc,ERF_A3:()=>pc,ERF_A4:()=>fc,ERF_A5:()=>mc,ERF_P:()=>cc,PARALLELIZE_THRESHOLD:()=>Yu,RowPartitionType:()=>Gu,SELU_SCALE:()=>uc,SELU_SCALEALPHA:()=>lc,applyActivation:()=>Jl,assertAndGetBroadcastShape:()=>ti,assertAxesAreInnerMostDims:()=>jo,assertParamsConsistent:()=>Vu,assignToTypedArray:()=>wc,axesAreInnerMostDims:()=>Bo,calculateShapes:()=>oc,checkEinsumDimSizes:()=>Rc,checkPadOnDimRoundingMode:()=>Zi,combineLocations:()=>Wo,combineRaggedTensorToTensorShapes:()=>Hu,complexWithEvenIndex:()=>yc,complexWithOddIndex:()=>xc,computeConv2DInfo:()=>Wi,computeConv3DInfo:()=>Ui,computeDefaultPad:()=>Vi,computeDilation2DInfo:()=>Mi,computeOptimalWindowSize:()=>Ju,computeOutAndReduceShapes:()=>Uo,computeOutShape:()=>ju,computePool2DInfo:()=>Pi,computePool3DInfo:()=>Bi,convertConv2DDataFormat:()=>Ji,decodeEinsumEquation:()=>Tc,eitherStridesOrDilationsAreOne:()=>Xi,expandShapeToKeepDim:()=>Vo,exponent:()=>Ic,exponents:()=>vc,fromStringArrayToUint8:()=>Jc,fromUint8ToStringArray:()=>Yc,getAxesPermutation:()=>Go,getBroadcastDims:()=>Qr,getComplexWithIndex:()=>kc,getEinsumComputePath:()=>Ac,getEinsumPermutation:()=>Ec,getFusedBiasGradient:()=>Yl,getFusedDyActivation:()=>Xl,getImageCenter:()=>Zu,getInnerMostAxes:()=>qo,getPermuted:()=>ec,getRaggedRank:()=>Ku,getReductionAxes:()=>ei,getReshaped:()=>Qu,getReshapedPermuted:()=>tc,getRowPartitionTypesHelper:()=>qu,getSliceBeginCoords:()=>nc,getSliceSize:()=>ac,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>zc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Oc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Lc,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Bc,getSparseReshapeInputOutputMismatchErrorMessage:()=>Uc,getSparseReshapeInputOutputMultipleErrorMessage:()=>Wc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Mc,getSparseReshapeNegativeOutputDimErrorMessage:()=>Pc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Hc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Vc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>jc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Gc,getUndoAxesPermutation:()=>Ho,isIdentityPermutation:()=>Fc,log:()=>ga,mergeRealAndImagArrays:()=>gc,prepareAndValidate:()=>sc,prepareSplitSize:()=>_c,segment_util:()=>t,shouldFuse:()=>Zl,slice_util:()=>e,splitRealAndImagArrays:()=>bc,stridesOrDilationsArePositive:()=>Yi,tupleValuesAreOne:()=>Ki,upcastType:()=>fs,validateDefaultValueShape:()=>Xu,validateInput:()=>ic,validateUpdateShape:()=>rc,warn:()=>ma});var s={};function r(e,t){let n=0,a=e.length,s=!1;if(!t){if(e.startsWith("data:"))return null;for(;n<e.length&&e.charCodeAt(n)<=32;)n+=1;for(;a>n+1&&e.charCodeAt(a-1)<=32;)a-=1;if(47===e.charCodeAt(n)&&47===e.charCodeAt(n+1))n+=2;else{const t=e.indexOf(":/",n);if(-1!==t){const a=t-n,s=e.charCodeAt(n),r=e.charCodeAt(n+1),i=e.charCodeAt(n+2),o=e.charCodeAt(n+3),l=e.charCodeAt(n+4);if(5===a&&104===s&&116===r&&116===i&&112===o&&115===l);else if(4===a&&104===s&&116===r&&116===i&&112===o);else if(3===a&&119===s&&115===r&&115===i);else if(2===a&&119===s&&115===r);else for(let a=n;a<t;a+=1){const t=32|e.charCodeAt(a);if(!(t>=97&&t<=122||t>=48&&t<=57||46===t||45===t||43===t))return null}for(n=t+2;47===e.charCodeAt(n);)n+=1}}let t=-1,r=-1,i=-1;for(let o=n;o<a;o+=1){const n=e.charCodeAt(o);if(35===n||47===n||63===n){a=o;break}64===n?t=o:93===n?r=o:58===n?i=o:n>=65&&n<=90&&(s=!0)}if(-1!==t&&t>n&&t<a&&(n=t+1),91===e.charCodeAt(n))return-1!==r?e.slice(n+1,r).toLowerCase():null;-1!==i&&i>n&&i<a&&(a=i)}for(;a>n+1&&46===e.charCodeAt(a-1);)a-=1;const r=0!==n||a!==e.length?e.slice(n,a):e;return s?r.toLowerCase():r}function i(e){return e>=97&&e<=122||e>=48&&e<=57||e>127}function o(e){if(e.length>255)return!1;if(0===e.length)return!1;if(!i(e.charCodeAt(0))&&46!==e.charCodeAt(0)&&95!==e.charCodeAt(0))return!1;let t=-1,n=-1;const a=e.length;for(let s=0;s<a;s+=1){const a=e.charCodeAt(s);if(46===a){if(s-t>64||46===n||45===n||95===n)return!1;t=s}else if(!i(a)&&45!==a&&95!==a)return!1;n=a}return a-t-1<=63&&45!==n}n.r(s),n.d(s,{mx:()=>$k,XI:()=>yw,Nk:()=>xw,f6:()=>ww,ct:()=>wk,YG:()=>Sw,hH:()=>Rw,z3:()=>fv,sG:()=>Cv,uM:()=>Rv,vS:()=>qv,qB:()=>tI,GG:()=>aI,lg:()=>lI,rq:()=>rI,cu:()=>wI,WR:()=>yI,GE:()=>SI,px:()=>$I,jC:()=>WI,He:()=>jI,hE:()=>eS,BF:()=>iv,Dk:()=>cS,cl:()=>yS,_B:()=>AS,ub:()=>_S,_f:()=>LS,Ku:()=>VS,qy:()=>GS,Zy:()=>aC,bu:()=>iC,zv:()=>dk,dH:()=>zk,HS:()=>fw,yH:()=>$C,l3:()=>TC,z9:()=>RC,x6:()=>zC,_m:()=>UC,eW:()=>HC,GK:()=>XC,SP:()=>ZC,yr:()=>e$,dl:()=>Ov,Dw:()=>i$,xT:()=>c$,_X:()=>Uk,wz:()=>b$});const l=function({allowIcannDomains:e=!0,allowPrivateDomains:t=!1,detectIp:n=!0,extractHostname:a=!0,mixedInputs:s=!0,validHosts:r=null,validateHostname:i=!0}){return{allowIcannDomains:e,allowPrivateDomains:t,detectIp:n,extractHostname:a,mixedInputs:s,validHosts:r,validateHostname:i}}({});const u=function(){const e=[1,{}],t=[2,{}],n=[0,{city:e}];return[0,{ck:[0,{www:e}],jp:[0,{kawasaki:n,kitakyushu:n,kobe:n,nagoya:n,sapporo:n,sendai:n,yokohama:n}],dev:[0,{hrsn:[0,{psl:[0,{wc:[0,{ignored:t,sub:[0,{ignored:t}]}]}]}]}]}]}(),c=function(){const e=[1,{}],t=[2,{}],n=[1,{com:e,edu:e,gov:e,net:e,org:e}],a=[1,{com:e,edu:e,gov:e,mil:e,net:e,org:e}],s=[0,{"*":t}],r=[0,{relay:t}],i=[2,{id:t}],o=[1,{gov:e}],l=[0,{"transfer-webapp":t}],u=[0,{notebook:t,studio:t}],c=[0,{labeling:t,notebook:t,studio:t}],h=[0,{notebook:t}],d=[0,{labeling:t,notebook:t,"notebook-fips":t,studio:t}],p=[0,{notebook:t,"notebook-fips":t,studio:t,"studio-fips":t}],f=[0,{"*":e}],m=[1,{co:t}],g=[0,{objects:t}],b=[2,{nodes:t}],y=[0,{my:s}],x=[0,{s3:t,"s3-accesspoint":t,"s3-website":t}],k=[0,{s3:t,"s3-accesspoint":t}],w=[0,{direct:t}],v=[0,{"webview-assets":t}],I=[0,{vfs:t,"webview-assets":t}],S=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-object-lambda":t,"s3-website":t,"aws-cloud9":v,cloud9:I}],C=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:k,s3:t,"s3-accesspoint":t,"s3-object-lambda":t,"s3-website":t,"aws-cloud9":v,cloud9:I}],$=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-object-lambda":t,"s3-website":t,"analytics-gateway":t,"aws-cloud9":v,cloud9:I}],N=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-object-lambda":t,"s3-website":t}],T=[0,{s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-fips":t,"s3-website":t}],E=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:T,s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-fips":t,"s3-object-lambda":t,"s3-website":t,"aws-cloud9":v,cloud9:I}],R=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:T,s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-deprecated":t,"s3-fips":t,"s3-object-lambda":t,"s3-website":t,"analytics-gateway":t,"aws-cloud9":v,cloud9:I}],A=[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:[0,{s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-fips":t}],s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-fips":t,"s3-object-lambda":t,"s3-website":t}],F=[0,{auth:t}],D=[0,{auth:t,"auth-fips":t}],_=[0,{apps:t}],z=[0,{paas:t}],O=[2,{eu:t}],L=[0,{app:t}],M=[0,{site:t}],P=[1,{com:e,edu:e,net:e,org:e}],B=[0,{j:t}],W=[0,{dyn:t}],U=[1,{co:e,com:e,edu:e,gov:e,net:e,org:e}],V=[0,{p:t}],j=[0,{user:t}],G=[0,{shop:t}],H=[0,{cust:t,reservd:t}],q=[0,{cust:t}],K=[0,{s3:t}],X=[1,{biz:e,com:e,edu:e,gov:e,info:e,net:e,org:e}],Y=[1,{framer:t}],J=[0,{forgot:t}],Z=[0,{cdn:t}],Q=[1,{gs:e}],ee=[0,{nes:e}],te=[1,{k12:e,cc:e,lib:e}],ne=[1,{cc:e,lib:e}];return[0,{ac:[1,{com:e,edu:e,gov:e,mil:e,net:e,org:e,drr:t,feedback:t,forms:t}],ad:e,ae:[1,{ac:e,co:e,gov:e,mil:e,net:e,org:e,sch:e}],aero:[1,{airline:e,airport:e,"accident-investigation":e,"accident-prevention":e,aerobatic:e,aeroclub:e,aerodrome:e,agents:e,"air-surveillance":e,"air-traffic-control":e,aircraft:e,airtraffic:e,ambulance:e,association:e,author:e,ballooning:e,broker:e,caa:e,cargo:e,catering:e,certification:e,championship:e,charter:e,civilaviation:e,club:e,conference:e,consultant:e,consulting:e,control:e,council:e,crew:e,design:e,dgca:e,educator:e,emergency:e,engine:e,engineer:e,entertainment:e,equipment:e,exchange:e,express:e,federation:e,flight:e,freight:e,fuel:e,gliding:e,government:e,groundhandling:e,group:e,hanggliding:e,homebuilt:e,insurance:e,journal:e,journalist:e,leasing:e,logistics:e,magazine:e,maintenance:e,marketplace:e,media:e,microlight:e,modelling:e,navigation:e,parachuting:e,paragliding:e,"passenger-association":e,pilot:e,press:e,production:e,recreation:e,repbody:e,res:e,research:e,rotorcraft:e,safety:e,scientist:e,services:e,show:e,skydiving:e,software:e,student:e,taxi:e,trader:e,trading:e,trainer:e,union:e,workinggroup:e,works:e}],af:n,ag:[1,{co:e,com:e,net:e,nom:e,org:e}],ai:[1,{com:e,net:e,off:e,org:e,uwu:t,framer:t}],al:a,am:[1,{co:e,com:e,commune:e,net:e,org:e,radio:t}],ao:[1,{co:e,ed:e,edu:e,gov:e,gv:e,it:e,og:e,org:e,pb:e}],aq:e,ar:[1,{bet:e,com:e,coop:e,edu:e,gob:e,gov:e,int:e,mil:e,musica:e,mutual:e,net:e,org:e,senasa:e,tur:e}],arpa:[1,{e164:e,home:e,"in-addr":e,ip6:e,iris:e,uri:e,urn:e}],as:o,asia:[1,{cloudns:t,daemon:t,dix:t}],at:[1,{ac:[1,{sth:e}],co:e,gv:e,or:e,funkfeuer:[0,{wien:t}],futurecms:[0,{"*":t,ex:s,in:s}],futurehosting:t,futuremailing:t,ortsinfo:[0,{ex:s,kunden:s}],biz:t,info:t,"123webseite":t,priv:t,myspreadshop:t,"12hp":t,"2ix":t,"4lima":t,"lima-city":t}],au:[1,{asn:e,com:[1,{cloudlets:[0,{mel:t}],myspreadshop:t}],edu:[1,{act:e,catholic:e,nsw:[1,{schools:e}],nt:e,qld:e,sa:e,tas:e,vic:e,wa:e}],gov:[1,{qld:e,sa:e,tas:e,vic:e,wa:e}],id:e,net:e,org:e,conf:e,oz:e,act:e,nsw:e,nt:e,qld:e,sa:e,tas:e,vic:e,wa:e}],aw:[1,{com:e}],ax:e,az:[1,{biz:e,co:e,com:e,edu:e,gov:e,info:e,int:e,mil:e,name:e,net:e,org:e,pp:e,pro:e}],ba:[1,{com:e,edu:e,gov:e,mil:e,net:e,org:e,rs:t}],bb:[1,{biz:e,co:e,com:e,edu:e,gov:e,info:e,net:e,org:e,store:e,tv:e}],bd:f,be:[1,{ac:e,cloudns:t,webhosting:t,interhostsolutions:[0,{cloud:t}],kuleuven:[0,{ezproxy:t}],"123website":t,myspreadshop:t,transurl:s}],bf:o,bg:[1,{0:e,1:e,2:e,3:e,4:e,5:e,6:e,7:e,8:e,9:e,a:e,b:e,c:e,d:e,e,f:e,g:e,h:e,i:e,j:e,k:e,l:e,m:e,n:e,o:e,p:e,q:e,r:e,s:e,t:e,u:e,v:e,w:e,x:e,y:e,z:e,barsy:t}],bh:n,bi:[1,{co:e,com:e,edu:e,or:e,org:e}],biz:[1,{activetrail:t,"cloud-ip":t,cloudns:t,jozi:t,dyndns:t,"for-better":t,"for-more":t,"for-some":t,"for-the":t,selfip:t,webhop:t,orx:t,mmafan:t,myftp:t,"no-ip":t,dscloud:t}],bj:[1,{africa:e,agro:e,architectes:e,assur:e,avocats:e,co:e,com:e,eco:e,econo:e,edu:e,info:e,loisirs:e,money:e,net:e,org:e,ote:e,restaurant:e,resto:e,tourism:e,univ:e}],bm:n,bn:[1,{com:e,edu:e,gov:e,net:e,org:e,co:t}],bo:[1,{com:e,edu:e,gob:e,int:e,mil:e,net:e,org:e,tv:e,web:e,academia:e,agro:e,arte:e,blog:e,bolivia:e,ciencia:e,cooperativa:e,democracia:e,deporte:e,ecologia:e,economia:e,empresa:e,indigena:e,industria:e,info:e,medicina:e,movimiento:e,musica:e,natural:e,nombre:e,noticias:e,patria:e,plurinacional:e,politica:e,profesional:e,pueblo:e,revista:e,salud:e,tecnologia:e,tksat:e,transporte:e,wiki:e}],br:[1,{"9guacu":e,abc:e,adm:e,adv:e,agr:e,aju:e,am:e,anani:e,aparecida:e,app:e,arq:e,art:e,ato:e,b:e,barueri:e,belem:e,bet:e,bhz:e,bib:e,bio:e,blog:e,bmd:e,boavista:e,bsb:e,campinagrande:e,campinas:e,caxias:e,cim:e,cng:e,cnt:e,com:[1,{simplesite:t}],contagem:e,coop:e,coz:e,cri:e,cuiaba:e,curitiba:e,def:e,des:e,det:e,dev:e,ecn:e,eco:e,edu:e,emp:e,enf:e,eng:e,esp:e,etc:e,eti:e,far:e,feira:e,flog:e,floripa:e,fm:e,fnd:e,fortal:e,fot:e,foz:e,fst:e,g12:e,geo:e,ggf:e,goiania:e,gov:[1,{ac:e,al:e,am:e,ap:e,ba:e,ce:e,df:e,es:e,go:e,ma:e,mg:e,ms:e,mt:e,pa:e,pb:e,pe:e,pi:e,pr:e,rj:e,rn:e,ro:e,rr:e,rs:e,sc:e,se:e,sp:e,to:e}],gru:e,imb:e,ind:e,inf:e,jab:e,jampa:e,jdf:e,joinville:e,jor:e,jus:e,leg:[1,{ac:t,al:t,am:t,ap:t,ba:t,ce:t,df:t,es:t,go:t,ma:t,mg:t,ms:t,mt:t,pa:t,pb:t,pe:t,pi:t,pr:t,rj:t,rn:t,ro:t,rr:t,rs:t,sc:t,se:t,sp:t,to:t}],leilao:e,lel:e,log:e,londrina:e,macapa:e,maceio:e,manaus:e,maringa:e,mat:e,med:e,mil:e,morena:e,mp:e,mus:e,natal:e,net:e,niteroi:e,nom:f,not:e,ntr:e,odo:e,ong:e,org:e,osasco:e,palmas:e,poa:e,ppg:e,pro:e,psc:e,psi:e,pvh:e,qsl:e,radio:e,rec:e,recife:e,rep:e,ribeirao:e,rio:e,riobranco:e,riopreto:e,salvador:e,sampa:e,santamaria:e,santoandre:e,saobernardo:e,saogonca:e,seg:e,sjc:e,slg:e,slz:e,sorocaba:e,srv:e,taxi:e,tc:e,tec:e,teo:e,the:e,tmp:e,trd:e,tur:e,tv:e,udi:e,vet:e,vix:e,vlog:e,wiki:e,zlg:e}],bs:[1,{com:e,edu:e,gov:e,net:e,org:e,we:t}],bt:n,bv:e,bw:[1,{ac:e,co:e,gov:e,net:e,org:e}],by:[1,{gov:e,mil:e,com:e,of:e,mediatech:t}],bz:[1,{co:e,com:e,edu:e,gov:e,net:e,org:e,za:t,mydns:t,gsj:t}],ca:[1,{ab:e,bc:e,mb:e,nb:e,nf:e,nl:e,ns:e,nt:e,nu:e,on:e,pe:e,qc:e,sk:e,yk:e,gc:e,barsy:t,awdev:s,co:t,"no-ip":t,myspreadshop:t,box:t}],cat:e,cc:[1,{cleverapps:t,cloudns:t,ftpaccess:t,"game-server":t,myphotos:t,scrapping:t,twmail:t,csx:t,fantasyleague:t,spawn:[0,{instances:t}]}],cd:o,cf:e,cg:e,ch:[1,{square7:t,cloudns:t,cloudscale:[0,{cust:t,lpg:g,rma:g}],flow:[0,{ae:[0,{alp1:t}],appengine:t}],"linkyard-cloud":t,gotdns:t,dnsking:t,"123website":t,myspreadshop:t,firenet:[0,{"*":t,svc:s}],"12hp":t,"2ix":t,"4lima":t,"lima-city":t}],ci:[1,{ac:e,"xn--aroport-bya":e,aéroport:e,asso:e,co:e,com:e,ed:e,edu:e,go:e,gouv:e,int:e,net:e,or:e,org:e}],ck:f,cl:[1,{co:e,gob:e,gov:e,mil:e,cloudns:t}],cm:[1,{co:e,com:e,gov:e,net:e}],cn:[1,{ac:e,com:[1,{amazonaws:[0,{"cn-north-1":[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-deprecated":t,"s3-object-lambda":t,"s3-website":t}],"cn-northwest-1":[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:k,s3:t,"s3-accesspoint":t,"s3-object-lambda":t,"s3-website":t}],compute:s,airflow:[0,{"cn-north-1":s,"cn-northwest-1":s}],eb:[0,{"cn-north-1":t,"cn-northwest-1":t}],elb:s}],sagemaker:[0,{"cn-north-1":u,"cn-northwest-1":u}]}],edu:e,gov:e,mil:e,net:e,org:e,"xn--55qx5d":e,公司:e,"xn--od0alg":e,網絡:e,"xn--io0a7i":e,网络:e,ah:e,bj:e,cq:e,fj:e,gd:e,gs:e,gx:e,gz:e,ha:e,hb:e,he:e,hi:e,hk:e,hl:e,hn:e,jl:e,js:e,jx:e,ln:e,mo:e,nm:e,nx:e,qh:e,sc:e,sd:e,sh:[1,{as:t}],sn:e,sx:e,tj:e,tw:e,xj:e,xz:e,yn:e,zj:e,"canva-apps":t,canvasite:y,myqnapcloud:t,quickconnect:w}],co:[1,{com:e,edu:e,gov:e,mil:e,net:e,nom:e,org:e,carrd:t,crd:t,otap:s,leadpages:t,lpages:t,mypi:t,xmit:s,firewalledreplit:i,repl:i,supabase:t}],com:[1,{a2hosted:t,cpserver:t,adobeaemcloud:[2,{dev:s}],africa:t,airkitapps:t,"airkitapps-au":t,aivencloud:t,kasserver:t,amazonaws:[0,{"af-south-1":S,"ap-east-1":C,"ap-northeast-1":$,"ap-northeast-2":$,"ap-northeast-3":S,"ap-south-1":$,"ap-south-2":N,"ap-southeast-1":$,"ap-southeast-2":$,"ap-southeast-3":N,"ap-southeast-4":N,"ap-southeast-5":[0,{"execute-api":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-deprecated":t,"s3-object-lambda":t,"s3-website":t}],"ca-central-1":E,"ca-west-1":[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:T,s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-fips":t,"s3-object-lambda":t,"s3-website":t}],"eu-central-1":$,"eu-central-2":N,"eu-north-1":C,"eu-south-1":S,"eu-south-2":N,"eu-west-1":[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-deprecated":t,"s3-object-lambda":t,"s3-website":t,"analytics-gateway":t,"aws-cloud9":v,cloud9:I}],"eu-west-2":C,"eu-west-3":S,"il-central-1":[0,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:x,s3:t,"s3-accesspoint":t,"s3-object-lambda":t,"s3-website":t,"aws-cloud9":v,cloud9:[0,{vfs:t}]}],"me-central-1":N,"me-south-1":C,"sa-east-1":S,"us-east-1":[2,{"execute-api":t,"emrappui-prod":t,"emrnotebooks-prod":t,"emrstudio-prod":t,dualstack:T,s3:t,"s3-accesspoint":t,"s3-accesspoint-fips":t,"s3-deprecated":t,"s3-fips":t,"s3-object-lambda":t,"s3-website":t,"analytics-gateway":t,"aws-cloud9":v,cloud9:I}],"us-east-2":R,"us-gov-east-1":A,"us-gov-west-1":A,"us-west-1":E,"us-west-2":R,compute:s,"compute-1":s,airflow:[0,{"af-south-1":s,"ap-east-1":s,"ap-northeast-1":s,"ap-northeast-2":s,"ap-northeast-3":s,"ap-south-1":s,"ap-south-2":s,"ap-southeast-1":s,"ap-southeast-2":s,"ap-southeast-3":s,"ap-southeast-4":s,"ca-central-1":s,"ca-west-1":s,"eu-central-1":s,"eu-central-2":s,"eu-north-1":s,"eu-south-1":s,"eu-south-2":s,"eu-west-1":s,"eu-west-2":s,"eu-west-3":s,"il-central-1":s,"me-central-1":s,"me-south-1":s,"sa-east-1":s,"us-east-1":s,"us-east-2":s,"us-west-1":s,"us-west-2":s}],s3:t,"s3-1":t,"s3-ap-east-1":t,"s3-ap-northeast-1":t,"s3-ap-northeast-2":t,"s3-ap-northeast-3":t,"s3-ap-south-1":t,"s3-ap-southeast-1":t,"s3-ap-southeast-2":t,"s3-ca-central-1":t,"s3-eu-central-1":t,"s3-eu-north-1":t,"s3-eu-west-1":t,"s3-eu-west-2":t,"s3-eu-west-3":t,"s3-external-1":t,"s3-fips-us-gov-east-1":t,"s3-fips-us-gov-west-1":t,"s3-global":[0,{accesspoint:[0,{mrap:t}]}],"s3-me-south-1":t,"s3-sa-east-1":t,"s3-us-east-2":t,"s3-us-gov-east-1":t,"s3-us-gov-west-1":t,"s3-us-west-1":t,"s3-us-west-2":t,"s3-website-ap-northeast-1":t,"s3-website-ap-southeast-1":t,"s3-website-ap-southeast-2":t,"s3-website-eu-west-1":t,"s3-website-sa-east-1":t,"s3-website-us-east-1":t,"s3-website-us-gov-west-1":t,"s3-website-us-west-1":t,"s3-website-us-west-2":t,elb:s}],amazoncognito:[0,{"af-south-1":F,"ap-east-1":F,"ap-northeast-1":F,"ap-northeast-2":F,"ap-northeast-3":F,"ap-south-1":F,"ap-south-2":F,"ap-southeast-1":F,"ap-southeast-2":F,"ap-southeast-3":F,"ap-southeast-4":F,"ca-central-1":F,"ca-west-1":F,"eu-central-1":F,"eu-central-2":F,"eu-north-1":F,"eu-south-1":F,"eu-south-2":F,"eu-west-1":F,"eu-west-2":F,"eu-west-3":F,"il-central-1":F,"me-central-1":F,"me-south-1":F,"sa-east-1":F,"us-east-1":D,"us-east-2":D,"us-gov-west-1":[0,{"auth-fips":t}],"us-west-1":D,"us-west-2":D}],amplifyapp:t,awsapprunner:s,awsapps:t,elasticbeanstalk:[2,{"af-south-1":t,"ap-east-1":t,"ap-northeast-1":t,"ap-northeast-2":t,"ap-northeast-3":t,"ap-south-1":t,"ap-southeast-1":t,"ap-southeast-2":t,"ap-southeast-3":t,"ca-central-1":t,"eu-central-1":t,"eu-north-1":t,"eu-south-1":t,"eu-west-1":t,"eu-west-2":t,"eu-west-3":t,"il-central-1":t,"me-south-1":t,"sa-east-1":t,"us-east-1":t,"us-east-2":t,"us-gov-east-1":t,"us-gov-west-1":t,"us-west-1":t,"us-west-2":t}],awsglobalaccelerator:t,siiites:t,appspacehosted:t,appspaceusercontent:t,"on-aptible":t,myasustor:t,"balena-devices":t,boutir:t,bplaced:t,cafjs:t,"canva-apps":t,"cdn77-storage":t,br:t,cn:t,de:t,eu:t,jpn:t,mex:t,ru:t,sa:t,uk:t,us:t,za:t,"clever-cloud":[0,{services:s}],dnsabr:t,"ip-ddns":t,jdevcloud:t,wpdevcloud:t,"cf-ipfs":t,"cloudflare-ipfs":t,trycloudflare:t,co:t,builtwithdark:t,datadetect:[0,{demo:t,instance:t}],dattolocal:t,dattorelay:t,dattoweb:t,mydatto:t,digitaloceanspaces:s,discordsays:t,discordsez:t,drayddns:t,dreamhosters:t,durumis:t,mydrobo:t,blogdns:t,cechire:t,dnsalias:t,dnsdojo:t,doesntexist:t,dontexist:t,doomdns:t,"dyn-o-saur":t,dynalias:t,"dyndns-at-home":t,"dyndns-at-work":t,"dyndns-blog":t,"dyndns-free":t,"dyndns-home":t,"dyndns-ip":t,"dyndns-mail":t,"dyndns-office":t,"dyndns-pics":t,"dyndns-remote":t,"dyndns-server":t,"dyndns-web":t,"dyndns-wiki":t,"dyndns-work":t,"est-a-la-maison":t,"est-a-la-masion":t,"est-le-patron":t,"est-mon-blogueur":t,"from-ak":t,"from-al":t,"from-ar":t,"from-ca":t,"from-ct":t,"from-dc":t,"from-de":t,"from-fl":t,"from-ga":t,"from-hi":t,"from-ia":t,"from-id":t,"from-il":t,"from-in":t,"from-ks":t,"from-ky":t,"from-ma":t,"from-md":t,"from-mi":t,"from-mn":t,"from-mo":t,"from-ms":t,"from-mt":t,"from-nc":t,"from-nd":t,"from-ne":t,"from-nh":t,"from-nj":t,"from-nm":t,"from-nv":t,"from-oh":t,"from-ok":t,"from-or":t,"from-pa":t,"from-pr":t,"from-ri":t,"from-sc":t,"from-sd":t,"from-tn":t,"from-tx":t,"from-ut":t,"from-va":t,"from-vt":t,"from-wa":t,"from-wi":t,"from-wv":t,"from-wy":t,getmyip:t,gotdns:t,"hobby-site":t,homelinux:t,homeunix:t,iamallama:t,"is-a-anarchist":t,"is-a-blogger":t,"is-a-bookkeeper":t,"is-a-bulls-fan":t,"is-a-caterer":t,"is-a-chef":t,"is-a-conservative":t,"is-a-cpa":t,"is-a-cubicle-slave":t,"is-a-democrat":t,"is-a-designer":t,"is-a-doctor":t,"is-a-financialadvisor":t,"is-a-geek":t,"is-a-green":t,"is-a-guru":t,"is-a-hard-worker":t,"is-a-hunter":t,"is-a-landscaper":t,"is-a-lawyer":t,"is-a-liberal":t,"is-a-libertarian":t,"is-a-llama":t,"is-a-musician":t,"is-a-nascarfan":t,"is-a-nurse":t,"is-a-painter":t,"is-a-personaltrainer":t,"is-a-photographer":t,"is-a-player":t,"is-a-republican":t,"is-a-rockstar":t,"is-a-socialist":t,"is-a-student":t,"is-a-teacher":t,"is-a-techie":t,"is-a-therapist":t,"is-an-accountant":t,"is-an-actor":t,"is-an-actress":t,"is-an-anarchist":t,"is-an-artist":t,"is-an-engineer":t,"is-an-entertainer":t,"is-certified":t,"is-gone":t,"is-into-anime":t,"is-into-cars":t,"is-into-cartoons":t,"is-into-games":t,"is-leet":t,"is-not-certified":t,"is-slick":t,"is-uberleet":t,"is-with-theband":t,"isa-geek":t,"isa-hockeynut":t,issmarterthanyou:t,"likes-pie":t,likescandy:t,"neat-url":t,"saves-the-whales":t,selfip:t,"sells-for-less":t,"sells-for-u":t,servebbs:t,"simple-url":t,"space-to-rent":t,"teaches-yoga":t,writesthisblog:t,ddnsfree:t,ddnsgeek:t,giize:t,gleeze:t,kozow:t,loseyourip:t,ooguy:t,theworkpc:t,mytuleap:t,"tuleap-partners":t,encoreapi:t,evennode:[0,{"eu-1":t,"eu-2":t,"eu-3":t,"eu-4":t,"us-1":t,"us-2":t,"us-3":t,"us-4":t}],onfabrica:t,"fastly-edge":t,"fastly-terrarium":t,"fastvps-server":t,mydobiss:t,firebaseapp:t,fldrv:t,forgeblocks:t,framercanvas:t,"freebox-os":t,freeboxos:t,freemyip:t,aliases121:t,gentapps:t,gentlentapis:t,githubusercontent:t,"0emm":s,appspot:[2,{r:s}],blogspot:t,codespot:t,googleapis:t,googlecode:t,pagespeedmobilizer:t,withgoogle:t,withyoutube:t,grayjayleagues:t,hatenablog:t,hatenadiary:t,herokuapp:t,gr:t,smushcdn:t,wphostedmail:t,wpmucdn:t,pixolino:t,"apps-1and1":t,"live-website":t,dopaas:t,"hosted-by-previder":z,hosteur:[0,{"rag-cloud":t,"rag-cloud-ch":t}],"ik-server":[0,{jcloud:t,"jcloud-ver-jpc":t}],jelastic:[0,{demo:t}],massivegrid:z,wafaicloud:[0,{jed:t,ryd:t}],webadorsite:t,joyent:[0,{cns:s}],lpusercontent:t,linode:[0,{members:t,nodebalancer:s}],linodeobjects:s,linodeusercontent:[0,{ip:t}],barsycenter:t,barsyonline:t,modelscape:t,mwcloudnonprod:t,polyspace:t,mazeplay:t,miniserver:t,atmeta:t,fbsbx:_,meteorapp:O,routingthecloud:t,mydbserver:t,hostedpi:t,"mythic-beasts":[0,{caracal:t,customer:t,fentiger:t,lynx:t,ocelot:t,oncilla:t,onza:t,sphinx:t,vs:t,x:t,yali:t}],nospamproxy:[0,{cloud:[2,{o365:t}]}],"4u":t,nfshost:t,"3utilities":t,blogsyte:t,ciscofreak:t,damnserver:t,ddnsking:t,ditchyourip:t,dnsiskinky:t,dynns:t,geekgalaxy:t,"health-carereform":t,homesecuritymac:t,homesecuritypc:t,myactivedirectory:t,mysecuritycamera:t,myvnc:t,"net-freaks":t,onthewifi:t,point2this:t,quicksytes:t,securitytactics:t,servebeer:t,servecounterstrike:t,serveexchange:t,serveftp:t,servegame:t,servehalflife:t,servehttp:t,servehumour:t,serveirc:t,servemp3:t,servep2p:t,servepics:t,servequake:t,servesarcasm:t,stufftoread:t,unusualperson:t,workisboring:t,myiphost:t,observableusercontent:[0,{static:t}],simplesite:t,orsites:t,operaunite:t,"customer-oci":[0,{"*":t,oci:s,ocp:s,ocs:s}],oraclecloudapps:s,oraclegovcloudapps:s,"authgear-staging":t,authgearapps:t,skygearapp:t,outsystemscloud:t,ownprovider:t,pgfog:t,pagexl:t,gotpantheon:t,paywhirl:s,upsunapp:t,"postman-echo":t,prgmr:[0,{xen:t}],pythonanywhere:O,qa2:t,"alpha-myqnapcloud":t,"dev-myqnapcloud":t,mycloudnas:t,mynascloud:t,myqnapcloud:t,qualifioapp:t,ladesk:t,qbuser:t,quipelements:s,rackmaze:t,"readthedocs-hosted":t,rhcloud:t,onrender:t,render:L,"subsc-pay":t,"180r":t,dojin:t,sakuratan:t,sakuraweb:t,x0:t,code:[0,{builder:s,"dev-builder":s,"stg-builder":s}],salesforce:[0,{platform:[0,{"code-builder-stg":[0,{test:[0,{"001":s}]}]}]}],logoip:t,scrysec:t,"firewall-gateway":t,myshopblocks:t,myshopify:t,shopitsite:t,"1kapp":t,appchizi:t,applinzi:t,sinaapp:t,vipsinaapp:t,streamlitapp:t,"try-snowplow":t,"playstation-cloud":t,myspreadshop:t,"w-corp-staticblitz":t,"w-credentialless-staticblitz":t,"w-staticblitz":t,"stackhero-network":t,stdlib:[0,{api:t}],strapiapp:[2,{media:t}],"streak-link":t,streaklinks:t,streakusercontent:t,"temp-dns":t,dsmynas:t,familyds:t,mytabit:t,taveusercontent:t,"tb-hosting":M,reservd:t,thingdustdata:t,"townnews-staging":t,typeform:[0,{pro:t}],hk:t,it:t,vultrobjects:s,wafflecell:t,hotelwithflight:t,"reserve-online":t,cprapid:t,pleskns:t,remotewd:t,wiardweb:[0,{pages:t}],wixsite:t,wixstudio:t,messwithdns:t,"woltlab-demo":t,wpenginepowered:[2,{js:t}],xnbay:[2,{u2:t,"u2-local":t}],yolasite:t}],coop:e,cr:[1,{ac:e,co:e,ed:e,fi:e,go:e,or:e,sa:e}],cu:[1,{com:e,edu:e,gob:e,inf:e,nat:e,net:e,org:e}],cv:[1,{com:e,edu:e,id:e,int:e,net:e,nome:e,org:e,publ:e}],cw:P,cx:[1,{gov:e,cloudns:t,ath:t,info:t,assessments:t,calculators:t,funnels:t,paynow:t,quizzes:t,researched:t,tests:t}],cy:[1,{ac:e,biz:e,com:[1,{scaleforce:B}],ekloges:e,gov:e,ltd:e,mil:e,net:e,org:e,press:e,pro:e,tm:e}],cz:[1,{contentproxy9:[0,{rsc:t}],realm:t,e4:t,co:t,metacentrum:[0,{cloud:s,custom:t}],muni:[0,{cloud:[0,{flt:t,usr:t}]}]}],de:[1,{bplaced:t,square7:t,com:t,cosidns:W,dnsupdater:t,"dynamisches-dns":t,"internet-dns":t,"l-o-g-i-n":t,ddnss:[2,{dyn:t,dyndns:t}],"dyn-ip24":t,dyndns1:t,"home-webserver":[2,{dyn:t}],"myhome-server":t,dnshome:t,fuettertdasnetz:t,isteingeek:t,istmein:t,lebtimnetz:t,leitungsen:t,traeumtgerade:t,frusky:s,goip:t,"xn--gnstigbestellen-zvb":t,günstigbestellen:t,"xn--gnstigliefern-wob":t,günstigliefern:t,"hs-heilbronn":[0,{it:[0,{pages:t,"pages-research":t}]}],"dyn-berlin":t,"in-berlin":t,"in-brb":t,"in-butter":t,"in-dsl":t,"in-vpn":t,iservschule:t,"mein-iserv":t,schulplattform:t,schulserver:t,"test-iserv":t,keymachine:t,"git-repos":t,"lcube-server":t,"svn-repos":t,barsy:t,webspaceconfig:t,"123webseite":t,rub:t,"ruhr-uni-bochum":[2,{noc:[0,{io:t}]}],logoip:t,"firewall-gateway":t,"my-gateway":t,"my-router":t,spdns:t,speedpartner:[0,{customer:t}],myspreadshop:t,"taifun-dns":t,"12hp":t,"2ix":t,"4lima":t,"lima-city":t,"dd-dns":t,"dray-dns":t,draydns:t,"dyn-vpn":t,dynvpn:t,"mein-vigor":t,"my-vigor":t,"my-wan":t,"syno-ds":t,"synology-diskstation":t,"synology-ds":t,uberspace:s,"virtual-user":t,virtualuser:t,"community-pro":t,diskussionsbereich:t}],dj:e,dk:[1,{biz:t,co:t,firm:t,reg:t,store:t,"123hjemmeside":t,myspreadshop:t}],dm:U,do:[1,{art:e,com:e,edu:e,gob:e,gov:e,mil:e,net:e,org:e,sld:e,web:e}],dz:[1,{art:e,asso:e,com:e,edu:e,gov:e,net:e,org:e,pol:e,soc:e,tm:e}],ec:[1,{com:e,edu:e,fin:e,gob:e,gov:e,info:e,k12:e,med:e,mil:e,net:e,org:e,pro:e,base:t,official:t}],edu:[1,{rit:[0,{"git-pages":t}]}],ee:[1,{aip:e,com:e,edu:e,fie:e,gov:e,lib:e,med:e,org:e,pri:e,riik:e}],eg:[1,{ac:e,com:e,edu:e,eun:e,gov:e,info:e,me:e,mil:e,name:e,net:e,org:e,sci:e,sport:e,tv:e}],er:f,es:[1,{com:e,edu:e,gob:e,nom:e,org:e,"123miweb":t,myspreadshop:t}],et:[1,{biz:e,com:e,edu:e,gov:e,info:e,name:e,net:e,org:e}],eu:[1,{airkitapps:t,cloudns:t,dogado:[0,{jelastic:t}],barsy:t,spdns:t,transurl:s,diskstation:t}],fi:[1,{aland:e,dy:t,"xn--hkkinen-5wa":t,häkkinen:t,iki:t,cloudplatform:[0,{fi:t}],datacenter:[0,{demo:t,paas:t}],kapsi:t,"123kotisivu":t,myspreadshop:t}],fj:[1,{ac:e,biz:e,com:e,gov:e,info:e,mil:e,name:e,net:e,org:e,pro:e}],fk:f,fm:[1,{com:e,edu:e,net:e,org:e,radio:t,user:s}],fo:e,fr:[1,{asso:e,com:e,gouv:e,nom:e,prd:e,tm:e,avoues:e,cci:e,greta:e,"huissier-justice":e,"en-root":t,"fbx-os":t,fbxos:t,"freebox-os":t,freeboxos:t,goupile:t,"123siteweb":t,"on-web":t,"chirurgiens-dentistes-en-france":t,dedibox:t,aeroport:t,avocat:t,chambagri:t,"chirurgiens-dentistes":t,"experts-comptables":t,medecin:t,notaires:t,pharmacien:t,port:t,veterinaire:t,myspreadshop:t,ynh:t}],ga:e,gb:e,gd:[1,{edu:e,gov:e}],ge:[1,{com:e,edu:e,gov:e,net:e,org:e,pvt:e,school:e}],gf:e,gg:[1,{co:e,net:e,org:e,botdash:t,kaas:t,stackit:t,panel:[2,{daemon:t}]}],gh:[1,{com:e,edu:e,gov:e,mil:e,org:e}],gi:[1,{com:e,edu:e,gov:e,ltd:e,mod:e,org:e}],gl:[1,{co:e,com:e,edu:e,net:e,org:e,biz:t}],gm:e,gn:[1,{ac:e,com:e,edu:e,gov:e,net:e,org:e}],gov:e,gp:[1,{asso:e,com:e,edu:e,mobi:e,net:e,org:e}],gq:e,gr:[1,{com:e,edu:e,gov:e,net:e,org:e,barsy:t,simplesite:t}],gs:e,gt:[1,{com:e,edu:e,gob:e,ind:e,mil:e,net:e,org:e}],gu:[1,{com:e,edu:e,gov:e,guam:e,info:e,net:e,org:e,web:e}],gw:e,gy:U,hk:[1,{com:e,edu:e,gov:e,idv:e,net:e,org:e,"xn--ciqpn":e,个人:e,"xn--gmqw5a":e,個人:e,"xn--55qx5d":e,公司:e,"xn--mxtq1m":e,政府:e,"xn--lcvr32d":e,敎育:e,"xn--wcvs22d":e,教育:e,"xn--gmq050i":e,箇人:e,"xn--uc0atv":e,組織:e,"xn--uc0ay4a":e,組织:e,"xn--od0alg":e,網絡:e,"xn--zf0avx":e,網络:e,"xn--mk0axi":e,组織:e,"xn--tn0ag":e,组织:e,"xn--od0aq3b":e,网絡:e,"xn--io0a7i":e,网络:e,inc:t,ltd:t}],hm:e,hn:[1,{com:e,edu:e,gob:e,mil:e,net:e,org:e}],hr:[1,{com:e,from:e,iz:e,name:e,brendly:G}],ht:[1,{adult:e,art:e,asso:e,com:e,coop:e,edu:e,firm:e,gouv:e,info:e,med:e,net:e,org:e,perso:e,pol:e,pro:e,rel:e,shop:e,rt:t}],hu:[1,{2e3:e,agrar:e,bolt:e,casino:e,city:e,co:e,erotica:e,erotika:e,film:e,forum:e,games:e,hotel:e,info:e,ingatlan:e,jogasz:e,konyvelo:e,lakas:e,media:e,news:e,org:e,priv:e,reklam:e,sex:e,shop:e,sport:e,suli:e,szex:e,tm:e,tozsde:e,utazas:e,video:e}],id:[1,{ac:e,biz:e,co:e,desa:e,go:e,mil:e,my:e,net:e,or:e,ponpes:e,sch:e,web:e}],ie:[1,{gov:e,myspreadshop:t}],il:[1,{ac:e,co:[1,{ravpage:t,mytabit:t,tabitorder:t}],gov:e,idf:e,k12:e,muni:e,net:e,org:e}],"xn--4dbrk0ce":[1,{"xn--4dbgdty6c":e,"xn--5dbhl8d":e,"xn--8dbq2a":e,"xn--hebda8b":e}],ישראל:[1,{אקדמיה:e,ישוב:e,צהל:e,ממשל:e}],im:[1,{ac:e,co:[1,{ltd:e,plc:e}],com:e,net:e,org:e,tt:e,tv:e}],in:[1,{"5g":e,"6g":e,ac:e,ai:e,am:e,bihar:e,biz:e,business:e,ca:e,cn:e,co:e,com:e,coop:e,cs:e,delhi:e,dr:e,edu:e,er:e,firm:e,gen:e,gov:e,gujarat:e,ind:e,info:e,int:e,internet:e,io:e,me:e,mil:e,net:e,nic:e,org:e,pg:e,post:e,pro:e,res:e,travel:e,tv:e,uk:e,up:e,us:e,cloudns:t,barsy:t,web:t,supabase:t}],info:[1,{cloudns:t,"dynamic-dns":t,"barrel-of-knowledge":t,"barrell-of-knowledge":t,dyndns:t,"for-our":t,"groks-the":t,"groks-this":t,"here-for-more":t,knowsitall:t,selfip:t,webhop:t,barsy:t,mayfirst:t,mittwald:t,mittwaldserver:t,typo3server:t,dvrcam:t,ilovecollege:t,"no-ip":t,forumz:t,nsupdate:t,dnsupdate:t,"v-info":t}],int:[1,{eu:e}],io:[1,{2038:t,co:e,com:e,edu:e,gov:e,mil:e,net:e,nom:e,org:e,"on-acorn":s,myaddr:t,apigee:t,"b-data":t,beagleboard:t,bitbucket:t,bluebite:t,boxfuse:t,brave:[0,{s}],browsersafetymark:t,bigv:[0,{uk0:t}],cleverapps:t,cloudbeesusercontent:t,dappnode:[0,{dyndns:t}],darklang:t,definima:t,dedyn:t,"fh-muenster":t,shw:t,forgerock:[0,{id:t}],github:t,gitlab:t,lolipop:t,"hasura-app":t,hostyhosting:t,hypernode:t,moonscale:s,beebyte:z,beebyteapp:[0,{sekd1:t}],jele:t,webthings:t,loginline:t,barsy:t,azurecontainer:s,ngrok:[2,{ap:t,au:t,eu:t,in:t,jp:t,sa:t,us:t}],nodeart:[0,{stage:t}],pantheonsite:t,pstmn:[2,{mock:t}],protonet:t,qcx:[2,{sys:s}],qoto:t,vaporcloud:t,myrdbx:t,"rb-hosting":M,"on-k3s":s,"on-rio":s,readthedocs:t,resindevice:t,resinstaging:[0,{devices:t}],hzc:t,sandcats:t,scrypted:[0,{client:t}],"mo-siemens":t,lair:_,stolos:s,musician:t,utwente:t,edugit:t,telebit:t,thingdust:[0,{dev:H,disrec:H,prod:q,testing:H}],tickets:t,webflow:t,webflowtest:t,editorx:t,wixstudio:t,basicserver:t,virtualserver:t}],iq:a,ir:[1,{ac:e,co:e,gov:e,id:e,net:e,org:e,sch:e,"xn--mgba3a4f16a":e,ایران:e,"xn--mgba3a4fra":e,ايران:e,arvanedge:t}],is:e,it:[1,{edu:e,gov:e,abr:e,abruzzo:e,"aosta-valley":e,aostavalley:e,bas:e,basilicata:e,cal:e,calabria:e,cam:e,campania:e,"emilia-romagna":e,emiliaromagna:e,emr:e,"friuli-v-giulia":e,"friuli-ve-giulia":e,"friuli-vegiulia":e,"friuli-venezia-giulia":e,"friuli-veneziagiulia":e,"friuli-vgiulia":e,"friuliv-giulia":e,"friulive-giulia":e,friulivegiulia:e,"friulivenezia-giulia":e,friuliveneziagiulia:e,friulivgiulia:e,fvg:e,laz:e,lazio:e,lig:e,liguria:e,lom:e,lombardia:e,lombardy:e,lucania:e,mar:e,marche:e,mol:e,molise:e,piedmont:e,piemonte:e,pmn:e,pug:e,puglia:e,sar:e,sardegna:e,sardinia:e,sic:e,sicilia:e,sicily:e,taa:e,tos:e,toscana:e,"trentin-sud-tirol":e,"xn--trentin-sd-tirol-rzb":e,"trentin-süd-tirol":e,"trentin-sudtirol":e,"xn--trentin-sdtirol-7vb":e,"trentin-südtirol":e,"trentin-sued-tirol":e,"trentin-suedtirol":e,trentino:e,"trentino-a-adige":e,"trentino-aadige":e,"trentino-alto-adige":e,"trentino-altoadige":e,"trentino-s-tirol":e,"trentino-stirol":e,"trentino-sud-tirol":e,"xn--trentino-sd-tirol-c3b":e,"trentino-süd-tirol":e,"trentino-sudtirol":e,"xn--trentino-sdtirol-szb":e,"trentino-südtirol":e,"trentino-sued-tirol":e,"trentino-suedtirol":e,"trentinoa-adige":e,trentinoaadige:e,"trentinoalto-adige":e,trentinoaltoadige:e,"trentinos-tirol":e,trentinostirol:e,"trentinosud-tirol":e,"xn--trentinosd-tirol-rzb":e,"trentinosüd-tirol":e,trentinosudtirol:e,"xn--trentinosdtirol-7vb":e,trentinosüdtirol:e,"trentinosued-tirol":e,trentinosuedtirol:e,"trentinsud-tirol":e,"xn--trentinsd-tirol-6vb":e,"trentinsüd-tirol":e,trentinsudtirol:e,"xn--trentinsdtirol-nsb":e,trentinsüdtirol:e,"trentinsued-tirol":e,trentinsuedtirol:e,tuscany:e,umb:e,umbria:e,"val-d-aosta":e,"val-daosta":e,"vald-aosta":e,valdaosta:e,"valle-aosta":e,"valle-d-aosta":e,"valle-daosta":e,valleaosta:e,"valled-aosta":e,valledaosta:e,"vallee-aoste":e,"xn--valle-aoste-ebb":e,"vallée-aoste":e,"vallee-d-aoste":e,"xn--valle-d-aoste-ehb":e,"vallée-d-aoste":e,valleeaoste:e,"xn--valleaoste-e7a":e,valléeaoste:e,valleedaoste:e,"xn--valledaoste-ebb":e,valléedaoste:e,vao:e,vda:e,ven:e,veneto:e,ag:e,agrigento:e,al:e,alessandria:e,"alto-adige":e,altoadige:e,an:e,ancona:e,"andria-barletta-trani":e,"andria-trani-barletta":e,andriabarlettatrani:e,andriatranibarletta:e,ao:e,aosta:e,aoste:e,ap:e,aq:e,aquila:e,ar:e,arezzo:e,"ascoli-piceno":e,ascolipiceno:e,asti:e,at:e,av:e,avellino:e,ba:e,balsan:e,"balsan-sudtirol":e,"xn--balsan-sdtirol-nsb":e,"balsan-südtirol":e,"balsan-suedtirol":e,bari:e,"barletta-trani-andria":e,barlettatraniandria:e,belluno:e,benevento:e,bergamo:e,bg:e,bi:e,biella:e,bl:e,bn:e,bo:e,bologna:e,bolzano:e,"bolzano-altoadige":e,bozen:e,"bozen-sudtirol":e,"xn--bozen-sdtirol-2ob":e,"bozen-südtirol":e,"bozen-suedtirol":e,br:e,brescia:e,brindisi:e,bs:e,bt:e,bulsan:e,"bulsan-sudtirol":e,"xn--bulsan-sdtirol-nsb":e,"bulsan-südtirol":e,"bulsan-suedtirol":e,bz:e,ca:e,cagliari:e,caltanissetta:e,"campidano-medio":e,campidanomedio:e,campobasso:e,"carbonia-iglesias":e,carboniaiglesias:e,"carrara-massa":e,carraramassa:e,caserta:e,catania:e,catanzaro:e,cb:e,ce:e,"cesena-forli":e,"xn--cesena-forl-mcb":e,"cesena-forlì":e,cesenaforli:e,"xn--cesenaforl-i8a":e,cesenaforlì:e,ch:e,chieti:e,ci:e,cl:e,cn:e,co:e,como:e,cosenza:e,cr:e,cremona:e,crotone:e,cs:e,ct:e,cuneo:e,cz:e,"dell-ogliastra":e,dellogliastra:e,en:e,enna:e,fc:e,fe:e,fermo:e,ferrara:e,fg:e,fi:e,firenze:e,florence:e,fm:e,foggia:e,"forli-cesena":e,"xn--forl-cesena-fcb":e,"forlì-cesena":e,forlicesena:e,"xn--forlcesena-c8a":e,forlìcesena:e,fr:e,frosinone:e,ge:e,genoa:e,genova:e,go:e,gorizia:e,gr:e,grosseto:e,"iglesias-carbonia":e,iglesiascarbonia:e,im:e,imperia:e,is:e,isernia:e,kr:e,"la-spezia":e,laquila:e,laspezia:e,latina:e,lc:e,le:e,lecce:e,lecco:e,li:e,livorno:e,lo:e,lodi:e,lt:e,lu:e,lucca:e,macerata:e,mantova:e,"massa-carrara":e,massacarrara:e,matera:e,mb:e,mc:e,me:e,"medio-campidano":e,mediocampidano:e,messina:e,mi:e,milan:e,milano:e,mn:e,mo:e,modena:e,monza:e,"monza-brianza":e,"monza-e-della-brianza":e,monzabrianza:e,monzaebrianza:e,monzaedellabrianza:e,ms:e,mt:e,na:e,naples:e,napoli:e,no:e,novara:e,nu:e,nuoro:e,og:e,ogliastra:e,"olbia-tempio":e,olbiatempio:e,or:e,oristano:e,ot:e,pa:e,padova:e,padua:e,palermo:e,parma:e,pavia:e,pc:e,pd:e,pe:e,perugia:e,"pesaro-urbino":e,pesarourbino:e,pescara:e,pg:e,pi:e,piacenza:e,pisa:e,pistoia:e,pn:e,po:e,pordenone:e,potenza:e,pr:e,prato:e,pt:e,pu:e,pv:e,pz:e,ra:e,ragusa:e,ravenna:e,rc:e,re:e,"reggio-calabria":e,"reggio-emilia":e,reggiocalabria:e,reggioemilia:e,rg:e,ri:e,rieti:e,rimini:e,rm:e,rn:e,ro:e,roma:e,rome:e,rovigo:e,sa:e,salerno:e,sassari:e,savona:e,si:e,siena:e,siracusa:e,so:e,sondrio:e,sp:e,sr:e,ss:e,"xn--sdtirol-n2a":e,südtirol:e,suedtirol:e,sv:e,ta:e,taranto:e,te:e,"tempio-olbia":e,tempioolbia:e,teramo:e,terni:e,tn:e,to:e,torino:e,tp:e,tr:e,"trani-andria-barletta":e,"trani-barletta-andria":e,traniandriabarletta:e,tranibarlettaandria:e,trapani:e,trento:e,treviso:e,trieste:e,ts:e,turin:e,tv:e,ud:e,udine:e,"urbino-pesaro":e,urbinopesaro:e,va:e,varese:e,vb:e,vc:e,ve:e,venezia:e,venice:e,verbania:e,vercelli:e,verona:e,vi:e,"vibo-valentia":e,vibovalentia:e,vicenza:e,viterbo:e,vr:e,vs:e,vt:e,vv:e,"12chars":t,ibxos:t,iliadboxos:t,neen:[0,{jc:t}],"123homepage":t,"16-b":t,"32-b":t,"64-b":t,myspreadshop:t,syncloud:t}],je:[1,{co:e,net:e,org:e,of:t}],jm:f,jo:[1,{agri:e,ai:e,com:e,edu:e,eng:e,fm:e,gov:e,mil:e,net:e,org:e,per:e,phd:e,sch:e,tv:e}],jobs:e,jp:[1,{ac:e,ad:e,co:e,ed:e,go:e,gr:e,lg:e,ne:[1,{aseinet:j,gehirn:t,ivory:t,"mail-box":t,mints:t,mokuren:t,opal:t,sakura:t,sumomo:t,topaz:t}],or:e,aichi:[1,{aisai:e,ama:e,anjo:e,asuke:e,chiryu:e,chita:e,fuso:e,gamagori:e,handa:e,hazu:e,hekinan:e,higashiura:e,ichinomiya:e,inazawa:e,inuyama:e,isshiki:e,iwakura:e,kanie:e,kariya:e,kasugai:e,kira:e,kiyosu:e,komaki:e,konan:e,kota:e,mihama:e,miyoshi:e,nishio:e,nisshin:e,obu:e,oguchi:e,oharu:e,okazaki:e,owariasahi:e,seto:e,shikatsu:e,shinshiro:e,shitara:e,tahara:e,takahama:e,tobishima:e,toei:e,togo:e,tokai:e,tokoname:e,toyoake:e,toyohashi:e,toyokawa:e,toyone:e,toyota:e,tsushima:e,yatomi:e}],akita:[1,{akita:e,daisen:e,fujisato:e,gojome:e,hachirogata:e,happou:e,higashinaruse:e,honjo:e,honjyo:e,ikawa:e,kamikoani:e,kamioka:e,katagami:e,kazuno:e,kitaakita:e,kosaka:e,kyowa:e,misato:e,mitane:e,moriyoshi:e,nikaho:e,noshiro:e,odate:e,oga:e,ogata:e,semboku:e,yokote:e,yurihonjo:e}],aomori:[1,{aomori:e,gonohe:e,hachinohe:e,hashikami:e,hiranai:e,hirosaki:e,itayanagi:e,kuroishi:e,misawa:e,mutsu:e,nakadomari:e,noheji:e,oirase:e,owani:e,rokunohe:e,sannohe:e,shichinohe:e,shingo:e,takko:e,towada:e,tsugaru:e,tsuruta:e}],chiba:[1,{abiko:e,asahi:e,chonan:e,chosei:e,choshi:e,chuo:e,funabashi:e,futtsu:e,hanamigawa:e,ichihara:e,ichikawa:e,ichinomiya:e,inzai:e,isumi:e,kamagaya:e,kamogawa:e,kashiwa:e,katori:e,katsuura:e,kimitsu:e,kisarazu:e,kozaki:e,kujukuri:e,kyonan:e,matsudo:e,midori:e,mihama:e,minamiboso:e,mobara:e,mutsuzawa:e,nagara:e,nagareyama:e,narashino:e,narita:e,noda:e,oamishirasato:e,omigawa:e,onjuku:e,otaki:e,sakae:e,sakura:e,shimofusa:e,shirako:e,shiroi:e,shisui:e,sodegaura:e,sosa:e,tako:e,tateyama:e,togane:e,tohnosho:e,tomisato:e,urayasu:e,yachimata:e,yachiyo:e,yokaichiba:e,yokoshibahikari:e,yotsukaido:e}],ehime:[1,{ainan:e,honai:e,ikata:e,imabari:e,iyo:e,kamijima:e,kihoku:e,kumakogen:e,masaki:e,matsuno:e,matsuyama:e,namikata:e,niihama:e,ozu:e,saijo:e,seiyo:e,shikokuchuo:e,tobe:e,toon:e,uchiko:e,uwajima:e,yawatahama:e}],fukui:[1,{echizen:e,eiheiji:e,fukui:e,ikeda:e,katsuyama:e,mihama:e,minamiechizen:e,obama:e,ohi:e,ono:e,sabae:e,sakai:e,takahama:e,tsuruga:e,wakasa:e}],fukuoka:[1,{ashiya:e,buzen:e,chikugo:e,chikuho:e,chikujo:e,chikushino:e,chikuzen:e,chuo:e,dazaifu:e,fukuchi:e,hakata:e,higashi:e,hirokawa:e,hisayama:e,iizuka:e,inatsuki:e,kaho:e,kasuga:e,kasuya:e,kawara:e,keisen:e,koga:e,kurate:e,kurogi:e,kurume:e,minami:e,miyako:e,miyama:e,miyawaka:e,mizumaki:e,munakata:e,nakagawa:e,nakama:e,nishi:e,nogata:e,ogori:e,okagaki:e,okawa:e,oki:e,omuta:e,onga:e,onojo:e,oto:e,saigawa:e,sasaguri:e,shingu:e,shinyoshitomi:e,shonai:e,soeda:e,sue:e,tachiarai:e,tagawa:e,takata:e,toho:e,toyotsu:e,tsuiki:e,ukiha:e,umi:e,usui:e,yamada:e,yame:e,yanagawa:e,yukuhashi:e}],fukushima:[1,{aizubange:e,aizumisato:e,aizuwakamatsu:e,asakawa:e,bandai:e,date:e,fukushima:e,furudono:e,futaba:e,hanawa:e,higashi:e,hirata:e,hirono:e,iitate:e,inawashiro:e,ishikawa:e,iwaki:e,izumizaki:e,kagamiishi:e,kaneyama:e,kawamata:e,kitakata:e,kitashiobara:e,koori:e,koriyama:e,kunimi:e,miharu:e,mishima:e,namie:e,nango:e,nishiaizu:e,nishigo:e,okuma:e,omotego:e,ono:e,otama:e,samegawa:e,shimogo:e,shirakawa:e,showa:e,soma:e,sukagawa:e,taishin:e,tamakawa:e,tanagura:e,tenei:e,yabuki:e,yamato:e,yamatsuri:e,yanaizu:e,yugawa:e}],gifu:[1,{anpachi:e,ena:e,gifu:e,ginan:e,godo:e,gujo:e,hashima:e,hichiso:e,hida:e,higashishirakawa:e,ibigawa:e,ikeda:e,kakamigahara:e,kani:e,kasahara:e,kasamatsu:e,kawaue:e,kitagata:e,mino:e,minokamo:e,mitake:e,mizunami:e,motosu:e,nakatsugawa:e,ogaki:e,sakahogi:e,seki:e,sekigahara:e,shirakawa:e,tajimi:e,takayama:e,tarui:e,toki:e,tomika:e,wanouchi:e,yamagata:e,yaotsu:e,yoro:e}],gunma:[1,{annaka:e,chiyoda:e,fujioka:e,higashiagatsuma:e,isesaki:e,itakura:e,kanna:e,kanra:e,katashina:e,kawaba:e,kiryu:e,kusatsu:e,maebashi:e,meiwa:e,midori:e,minakami:e,naganohara:e,nakanojo:e,nanmoku:e,numata:e,oizumi:e,ora:e,ota:e,shibukawa:e,shimonita:e,shinto:e,showa:e,takasaki:e,takayama:e,tamamura:e,tatebayashi:e,tomioka:e,tsukiyono:e,tsumagoi:e,ueno:e,yoshioka:e}],hiroshima:[1,{asaminami:e,daiwa:e,etajima:e,fuchu:e,fukuyama:e,hatsukaichi:e,higashihiroshima:e,hongo:e,jinsekikogen:e,kaita:e,kui:e,kumano:e,kure:e,mihara:e,miyoshi:e,naka:e,onomichi:e,osakikamijima:e,otake:e,saka:e,sera:e,seranishi:e,shinichi:e,shobara:e,takehara:e}],hokkaido:[1,{abashiri:e,abira:e,aibetsu:e,akabira:e,akkeshi:e,asahikawa:e,ashibetsu:e,ashoro:e,assabu:e,atsuma:e,bibai:e,biei:e,bifuka:e,bihoro:e,biratori:e,chippubetsu:e,chitose:e,date:e,ebetsu:e,embetsu:e,eniwa:e,erimo:e,esan:e,esashi:e,fukagawa:e,fukushima:e,furano:e,furubira:e,haboro:e,hakodate:e,hamatonbetsu:e,hidaka:e,higashikagura:e,higashikawa:e,hiroo:e,hokuryu:e,hokuto:e,honbetsu:e,horokanai:e,horonobe:e,ikeda:e,imakane:e,ishikari:e,iwamizawa:e,iwanai:e,kamifurano:e,kamikawa:e,kamishihoro:e,kamisunagawa:e,kamoenai:e,kayabe:e,kembuchi:e,kikonai:e,kimobetsu:e,kitahiroshima:e,kitami:e,kiyosato:e,koshimizu:e,kunneppu:e,kuriyama:e,kuromatsunai:e,kushiro:e,kutchan:e,kyowa:e,mashike:e,matsumae:e,mikasa:e,minamifurano:e,mombetsu:e,moseushi:e,mukawa:e,muroran:e,naie:e,nakagawa:e,nakasatsunai:e,nakatombetsu:e,nanae:e,nanporo:e,nayoro:e,nemuro:e,niikappu:e,niki:e,nishiokoppe:e,noboribetsu:e,numata:e,obihiro:e,obira:e,oketo:e,okoppe:e,otaru:e,otobe:e,otofuke:e,otoineppu:e,oumu:e,ozora:e,pippu:e,rankoshi:e,rebun:e,rikubetsu:e,rishiri:e,rishirifuji:e,saroma:e,sarufutsu:e,shakotan:e,shari:e,shibecha:e,shibetsu:e,shikabe:e,shikaoi:e,shimamaki:e,shimizu:e,shimokawa:e,shinshinotsu:e,shintoku:e,shiranuka:e,shiraoi:e,shiriuchi:e,sobetsu:e,sunagawa:e,taiki:e,takasu:e,takikawa:e,takinoue:e,teshikaga:e,tobetsu:e,tohma:e,tomakomai:e,tomari:e,toya:e,toyako:e,toyotomi:e,toyoura:e,tsubetsu:e,tsukigata:e,urakawa:e,urausu:e,uryu:e,utashinai:e,wakkanai:e,wassamu:e,yakumo:e,yoichi:e}],hyogo:[1,{aioi:e,akashi:e,ako:e,amagasaki:e,aogaki:e,asago:e,ashiya:e,awaji:e,fukusaki:e,goshiki:e,harima:e,himeji:e,ichikawa:e,inagawa:e,itami:e,kakogawa:e,kamigori:e,kamikawa:e,kasai:e,kasuga:e,kawanishi:e,miki:e,minamiawaji:e,nishinomiya:e,nishiwaki:e,ono:e,sanda:e,sannan:e,sasayama:e,sayo:e,shingu:e,shinonsen:e,shiso:e,sumoto:e,taishi:e,taka:e,takarazuka:e,takasago:e,takino:e,tamba:e,tatsuno:e,toyooka:e,yabu:e,yashiro:e,yoka:e,yokawa:e}],ibaraki:[1,{ami:e,asahi:e,bando:e,chikusei:e,daigo:e,fujishiro:e,hitachi:e,hitachinaka:e,hitachiomiya:e,hitachiota:e,ibaraki:e,ina:e,inashiki:e,itako:e,iwama:e,joso:e,kamisu:e,kasama:e,kashima:e,kasumigaura:e,koga:e,miho:e,mito:e,moriya:e,naka:e,namegata:e,oarai:e,ogawa:e,omitama:e,ryugasaki:e,sakai:e,sakuragawa:e,shimodate:e,shimotsuma:e,shirosato:e,sowa:e,suifu:e,takahagi:e,tamatsukuri:e,tokai:e,tomobe:e,tone:e,toride:e,tsuchiura:e,tsukuba:e,uchihara:e,ushiku:e,yachiyo:e,yamagata:e,yawara:e,yuki:e}],ishikawa:[1,{anamizu:e,hakui:e,hakusan:e,kaga:e,kahoku:e,kanazawa:e,kawakita:e,komatsu:e,nakanoto:e,nanao:e,nomi:e,nonoichi:e,noto:e,shika:e,suzu:e,tsubata:e,tsurugi:e,uchinada:e,wajima:e}],iwate:[1,{fudai:e,fujisawa:e,hanamaki:e,hiraizumi:e,hirono:e,ichinohe:e,ichinoseki:e,iwaizumi:e,iwate:e,joboji:e,kamaishi:e,kanegasaki:e,karumai:e,kawai:e,kitakami:e,kuji:e,kunohe:e,kuzumaki:e,miyako:e,mizusawa:e,morioka:e,ninohe:e,noda:e,ofunato:e,oshu:e,otsuchi:e,rikuzentakata:e,shiwa:e,shizukuishi:e,sumita:e,tanohata:e,tono:e,yahaba:e,yamada:e}],kagawa:[1,{ayagawa:e,higashikagawa:e,kanonji:e,kotohira:e,manno:e,marugame:e,mitoyo:e,naoshima:e,sanuki:e,tadotsu:e,takamatsu:e,tonosho:e,uchinomi:e,utazu:e,zentsuji:e}],kagoshima:[1,{akune:e,amami:e,hioki:e,isa:e,isen:e,izumi:e,kagoshima:e,kanoya:e,kawanabe:e,kinko:e,kouyama:e,makurazaki:e,matsumoto:e,minamitane:e,nakatane:e,nishinoomote:e,satsumasendai:e,soo:e,tarumizu:e,yusui:e}],kanagawa:[1,{aikawa:e,atsugi:e,ayase:e,chigasaki:e,ebina:e,fujisawa:e,hadano:e,hakone:e,hiratsuka:e,isehara:e,kaisei:e,kamakura:e,kiyokawa:e,matsuda:e,minamiashigara:e,miura:e,nakai:e,ninomiya:e,odawara:e,oi:e,oiso:e,sagamihara:e,samukawa:e,tsukui:e,yamakita:e,yamato:e,yokosuka:e,yugawara:e,zama:e,zushi:e}],kochi:[1,{aki:e,geisei:e,hidaka:e,higashitsuno:e,ino:e,kagami:e,kami:e,kitagawa:e,kochi:e,mihara:e,motoyama:e,muroto:e,nahari:e,nakamura:e,nankoku:e,nishitosa:e,niyodogawa:e,ochi:e,okawa:e,otoyo:e,otsuki:e,sakawa:e,sukumo:e,susaki:e,tosa:e,tosashimizu:e,toyo:e,tsuno:e,umaji:e,yasuda:e,yusuhara:e}],kumamoto:[1,{amakusa:e,arao:e,aso:e,choyo:e,gyokuto:e,kamiamakusa:e,kikuchi:e,kumamoto:e,mashiki:e,mifune:e,minamata:e,minamioguni:e,nagasu:e,nishihara:e,oguni:e,ozu:e,sumoto:e,takamori:e,uki:e,uto:e,yamaga:e,yamato:e,yatsushiro:e}],kyoto:[1,{ayabe:e,fukuchiyama:e,higashiyama:e,ide:e,ine:e,joyo:e,kameoka:e,kamo:e,kita:e,kizu:e,kumiyama:e,kyotamba:e,kyotanabe:e,kyotango:e,maizuru:e,minami:e,minamiyamashiro:e,miyazu:e,muko:e,nagaokakyo:e,nakagyo:e,nantan:e,oyamazaki:e,sakyo:e,seika:e,tanabe:e,uji:e,ujitawara:e,wazuka:e,yamashina:e,yawata:e}],mie:[1,{asahi:e,inabe:e,ise:e,kameyama:e,kawagoe:e,kiho:e,kisosaki:e,kiwa:e,komono:e,kumano:e,kuwana:e,matsusaka:e,meiwa:e,mihama:e,minamiise:e,misugi:e,miyama:e,nabari:e,shima:e,suzuka:e,tado:e,taiki:e,taki:e,tamaki:e,toba:e,tsu:e,udono:e,ureshino:e,watarai:e,yokkaichi:e}],miyagi:[1,{furukawa:e,higashimatsushima:e,ishinomaki:e,iwanuma:e,kakuda:e,kami:e,kawasaki:e,marumori:e,matsushima:e,minamisanriku:e,misato:e,murata:e,natori:e,ogawara:e,ohira:e,onagawa:e,osaki:e,rifu:e,semine:e,shibata:e,shichikashuku:e,shikama:e,shiogama:e,shiroishi:e,tagajo:e,taiwa:e,tome:e,tomiya:e,wakuya:e,watari:e,yamamoto:e,zao:e}],miyazaki:[1,{aya:e,ebino:e,gokase:e,hyuga:e,kadogawa:e,kawaminami:e,kijo:e,kitagawa:e,kitakata:e,kitaura:e,kobayashi:e,kunitomi:e,kushima:e,mimata:e,miyakonojo:e,miyazaki:e,morotsuka:e,nichinan:e,nishimera:e,nobeoka:e,saito:e,shiiba:e,shintomi:e,takaharu:e,takanabe:e,takazaki:e,tsuno:e}],nagano:[1,{achi:e,agematsu:e,anan:e,aoki:e,asahi:e,azumino:e,chikuhoku:e,chikuma:e,chino:e,fujimi:e,hakuba:e,hara:e,hiraya:e,iida:e,iijima:e,iiyama:e,iizuna:e,ikeda:e,ikusaka:e,ina:e,karuizawa:e,kawakami:e,kiso:e,kisofukushima:e,kitaaiki:e,komagane:e,komoro:e,matsukawa:e,matsumoto:e,miasa:e,minamiaiki:e,minamimaki:e,minamiminowa:e,minowa:e,miyada:e,miyota:e,mochizuki:e,nagano:e,nagawa:e,nagiso:e,nakagawa:e,nakano:e,nozawaonsen:e,obuse:e,ogawa:e,okaya:e,omachi:e,omi:e,ookuwa:e,ooshika:e,otaki:e,otari:e,sakae:e,sakaki:e,saku:e,sakuho:e,shimosuwa:e,shinanomachi:e,shiojiri:e,suwa:e,suzaka:e,takagi:e,takamori:e,takayama:e,tateshina:e,tatsuno:e,togakushi:e,togura:e,tomi:e,ueda:e,wada:e,yamagata:e,yamanouchi:e,yasaka:e,yasuoka:e}],nagasaki:[1,{chijiwa:e,futsu:e,goto:e,hasami:e,hirado:e,iki:e,isahaya:e,kawatana:e,kuchinotsu:e,matsuura:e,nagasaki:e,obama:e,omura:e,oseto:e,saikai:e,sasebo:e,seihi:e,shimabara:e,shinkamigoto:e,togitsu:e,tsushima:e,unzen:e}],nara:[1,{ando:e,gose:e,heguri:e,higashiyoshino:e,ikaruga:e,ikoma:e,kamikitayama:e,kanmaki:e,kashiba:e,kashihara:e,katsuragi:e,kawai:e,kawakami:e,kawanishi:e,koryo:e,kurotaki:e,mitsue:e,miyake:e,nara:e,nosegawa:e,oji:e,ouda:e,oyodo:e,sakurai:e,sango:e,shimoichi:e,shimokitayama:e,shinjo:e,soni:e,takatori:e,tawaramoto:e,tenkawa:e,tenri:e,uda:e,yamatokoriyama:e,yamatotakada:e,yamazoe:e,yoshino:e}],niigata:[1,{aga:e,agano:e,gosen:e,itoigawa:e,izumozaki:e,joetsu:e,kamo:e,kariwa:e,kashiwazaki:e,minamiuonuma:e,mitsuke:e,muika:e,murakami:e,myoko:e,nagaoka:e,niigata:e,ojiya:e,omi:e,sado:e,sanjo:e,seiro:e,seirou:e,sekikawa:e,shibata:e,tagami:e,tainai:e,tochio:e,tokamachi:e,tsubame:e,tsunan:e,uonuma:e,yahiko:e,yoita:e,yuzawa:e}],oita:[1,{beppu:e,bungoono:e,bungotakada:e,hasama:e,hiji:e,himeshima:e,hita:e,kamitsue:e,kokonoe:e,kuju:e,kunisaki:e,kusu:e,oita:e,saiki:e,taketa:e,tsukumi:e,usa:e,usuki:e,yufu:e}],okayama:[1,{akaiwa:e,asakuchi:e,bizen:e,hayashima:e,ibara:e,kagamino:e,kasaoka:e,kibichuo:e,kumenan:e,kurashiki:e,maniwa:e,misaki:e,nagi:e,niimi:e,nishiawakura:e,okayama:e,satosho:e,setouchi:e,shinjo:e,shoo:e,soja:e,takahashi:e,tamano:e,tsuyama:e,wake:e,yakage:e}],okinawa:[1,{aguni:e,ginowan:e,ginoza:e,gushikami:e,haebaru:e,higashi:e,hirara:e,iheya:e,ishigaki:e,ishikawa:e,itoman:e,izena:e,kadena:e,kin:e,kitadaito:e,kitanakagusuku:e,kumejima:e,kunigami:e,minamidaito:e,motobu:e,nago:e,naha:e,nakagusuku:e,nakijin:e,nanjo:e,nishihara:e,ogimi:e,okinawa:e,onna:e,shimoji:e,taketomi:e,tarama:e,tokashiki:e,tomigusuku:e,tonaki:e,urasoe:e,uruma:e,yaese:e,yomitan:e,yonabaru:e,yonaguni:e,zamami:e}],osaka:[1,{abeno:e,chihayaakasaka:e,chuo:e,daito:e,fujiidera:e,habikino:e,hannan:e,higashiosaka:e,higashisumiyoshi:e,higashiyodogawa:e,hirakata:e,ibaraki:e,ikeda:e,izumi:e,izumiotsu:e,izumisano:e,kadoma:e,kaizuka:e,kanan:e,kashiwara:e,katano:e,kawachinagano:e,kishiwada:e,kita:e,kumatori:e,matsubara:e,minato:e,minoh:e,misaki:e,moriguchi:e,neyagawa:e,nishi:e,nose:e,osakasayama:e,sakai:e,sayama:e,sennan:e,settsu:e,shijonawate:e,shimamoto:e,suita:e,tadaoka:e,taishi:e,tajiri:e,takaishi:e,takatsuki:e,tondabayashi:e,toyonaka:e,toyono:e,yao:e}],saga:[1,{ariake:e,arita:e,fukudomi:e,genkai:e,hamatama:e,hizen:e,imari:e,kamimine:e,kanzaki:e,karatsu:e,kashima:e,kitagata:e,kitahata:e,kiyama:e,kouhoku:e,kyuragi:e,nishiarita:e,ogi:e,omachi:e,ouchi:e,saga:e,shiroishi:e,taku:e,tara:e,tosu:e,yoshinogari:e}],saitama:[1,{arakawa:e,asaka:e,chichibu:e,fujimi:e,fujimino:e,fukaya:e,hanno:e,hanyu:e,hasuda:e,hatogaya:e,hatoyama:e,hidaka:e,higashichichibu:e,higashimatsuyama:e,honjo:e,ina:e,iruma:e,iwatsuki:e,kamiizumi:e,kamikawa:e,kamisato:e,kasukabe:e,kawagoe:e,kawaguchi:e,kawajima:e,kazo:e,kitamoto:e,koshigaya:e,kounosu:e,kuki:e,kumagaya:e,matsubushi:e,minano:e,misato:e,miyashiro:e,miyoshi:e,moroyama:e,nagatoro:e,namegawa:e,niiza:e,ogano:e,ogawa:e,ogose:e,okegawa:e,omiya:e,otaki:e,ranzan:e,ryokami:e,saitama:e,sakado:e,satte:e,sayama:e,shiki:e,shiraoka:e,soka:e,sugito:e,toda:e,tokigawa:e,tokorozawa:e,tsurugashima:e,urawa:e,warabi:e,yashio:e,yokoze:e,yono:e,yorii:e,yoshida:e,yoshikawa:e,yoshimi:e}],shiga:[1,{aisho:e,gamo:e,higashiomi:e,hikone:e,koka:e,konan:e,kosei:e,koto:e,kusatsu:e,maibara:e,moriyama:e,nagahama:e,nishiazai:e,notogawa:e,omihachiman:e,otsu:e,ritto:e,ryuoh:e,takashima:e,takatsuki:e,torahime:e,toyosato:e,yasu:e}],shimane:[1,{akagi:e,ama:e,gotsu:e,hamada:e,higashiizumo:e,hikawa:e,hikimi:e,izumo:e,kakinoki:e,masuda:e,matsue:e,misato:e,nishinoshima:e,ohda:e,okinoshima:e,okuizumo:e,shimane:e,tamayu:e,tsuwano:e,unnan:e,yakumo:e,yasugi:e,yatsuka:e}],shizuoka:[1,{arai:e,atami:e,fuji:e,fujieda:e,fujikawa:e,fujinomiya:e,fukuroi:e,gotemba:e,haibara:e,hamamatsu:e,higashiizu:e,ito:e,iwata:e,izu:e,izunokuni:e,kakegawa:e,kannami:e,kawanehon:e,kawazu:e,kikugawa:e,kosai:e,makinohara:e,matsuzaki:e,minamiizu:e,mishima:e,morimachi:e,nishiizu:e,numazu:e,omaezaki:e,shimada:e,shimizu:e,shimoda:e,shizuoka:e,susono:e,yaizu:e,yoshida:e}],tochigi:[1,{ashikaga:e,bato:e,haga:e,ichikai:e,iwafune:e,kaminokawa:e,kanuma:e,karasuyama:e,kuroiso:e,mashiko:e,mibu:e,moka:e,motegi:e,nasu:e,nasushiobara:e,nikko:e,nishikata:e,nogi:e,ohira:e,ohtawara:e,oyama:e,sakura:e,sano:e,shimotsuke:e,shioya:e,takanezawa:e,tochigi:e,tsuga:e,ujiie:e,utsunomiya:e,yaita:e}],tokushima:[1,{aizumi:e,anan:e,ichiba:e,itano:e,kainan:e,komatsushima:e,matsushige:e,mima:e,minami:e,miyoshi:e,mugi:e,nakagawa:e,naruto:e,sanagochi:e,shishikui:e,tokushima:e,wajiki:e}],tokyo:[1,{adachi:e,akiruno:e,akishima:e,aogashima:e,arakawa:e,bunkyo:e,chiyoda:e,chofu:e,chuo:e,edogawa:e,fuchu:e,fussa:e,hachijo:e,hachioji:e,hamura:e,higashikurume:e,higashimurayama:e,higashiyamato:e,hino:e,hinode:e,hinohara:e,inagi:e,itabashi:e,katsushika:e,kita:e,kiyose:e,kodaira:e,koganei:e,kokubunji:e,komae:e,koto:e,kouzushima:e,kunitachi:e,machida:e,meguro:e,minato:e,mitaka:e,mizuho:e,musashimurayama:e,musashino:e,nakano:e,nerima:e,ogasawara:e,okutama:e,ome:e,oshima:e,ota:e,setagaya:e,shibuya:e,shinagawa:e,shinjuku:e,suginami:e,sumida:e,tachikawa:e,taito:e,tama:e,toshima:e}],tottori:[1,{chizu:e,hino:e,kawahara:e,koge:e,kotoura:e,misasa:e,nanbu:e,nichinan:e,sakaiminato:e,tottori:e,wakasa:e,yazu:e,yonago:e}],toyama:[1,{asahi:e,fuchu:e,fukumitsu:e,funahashi:e,himi:e,imizu:e,inami:e,johana:e,kamiichi:e,kurobe:e,nakaniikawa:e,namerikawa:e,nanto:e,nyuzen:e,oyabe:e,taira:e,takaoka:e,tateyama:e,toga:e,tonami:e,toyama:e,unazuki:e,uozu:e,yamada:e}],wakayama:[1,{arida:e,aridagawa:e,gobo:e,hashimoto:e,hidaka:e,hirogawa:e,inami:e,iwade:e,kainan:e,kamitonda:e,katsuragi:e,kimino:e,kinokawa:e,kitayama:e,koya:e,koza:e,kozagawa:e,kudoyama:e,kushimoto:e,mihama:e,misato:e,nachikatsuura:e,shingu:e,shirahama:e,taiji:e,tanabe:e,wakayama:e,yuasa:e,yura:e}],yamagata:[1,{asahi:e,funagata:e,higashine:e,iide:e,kahoku:e,kaminoyama:e,kaneyama:e,kawanishi:e,mamurogawa:e,mikawa:e,murayama:e,nagai:e,nakayama:e,nanyo:e,nishikawa:e,obanazawa:e,oe:e,oguni:e,ohkura:e,oishida:e,sagae:e,sakata:e,sakegawa:e,shinjo:e,shirataka:e,shonai:e,takahata:e,tendo:e,tozawa:e,tsuruoka:e,yamagata:e,yamanobe:e,yonezawa:e,yuza:e}],yamaguchi:[1,{abu:e,hagi:e,hikari:e,hofu:e,iwakuni:e,kudamatsu:e,mitou:e,nagato:e,oshima:e,shimonoseki:e,shunan:e,tabuse:e,tokuyama:e,toyota:e,ube:e,yuu:e}],yamanashi:[1,{chuo:e,doshi:e,fuefuki:e,fujikawa:e,fujikawaguchiko:e,fujiyoshida:e,hayakawa:e,hokuto:e,ichikawamisato:e,kai:e,kofu:e,koshu:e,kosuge:e,"minami-alps":e,minobu:e,nakamichi:e,nanbu:e,narusawa:e,nirasaki:e,nishikatsura:e,oshino:e,otsuki:e,showa:e,tabayama:e,tsuru:e,uenohara:e,yamanakako:e,yamanashi:e}],"xn--ehqz56n":e,三重:e,"xn--1lqs03n":e,京都:e,"xn--qqqt11m":e,佐賀:e,"xn--f6qx53a":e,兵庫:e,"xn--djrs72d6uy":e,北海道:e,"xn--mkru45i":e,千葉:e,"xn--0trq7p7nn":e,和歌山:e,"xn--5js045d":e,埼玉:e,"xn--kbrq7o":e,大分:e,"xn--pssu33l":e,大阪:e,"xn--ntsq17g":e,奈良:e,"xn--uisz3g":e,宮城:e,"xn--6btw5a":e,宮崎:e,"xn--1ctwo":e,富山:e,"xn--6orx2r":e,山口:e,"xn--rht61e":e,山形:e,"xn--rht27z":e,山梨:e,"xn--nit225k":e,岐阜:e,"xn--rht3d":e,岡山:e,"xn--djty4k":e,岩手:e,"xn--klty5x":e,島根:e,"xn--kltx9a":e,広島:e,"xn--kltp7d":e,徳島:e,"xn--c3s14m":e,愛媛:e,"xn--vgu402c":e,愛知:e,"xn--efvn9s":e,新潟:e,"xn--1lqs71d":e,東京:e,"xn--4pvxs":e,栃木:e,"xn--uuwu58a":e,沖縄:e,"xn--zbx025d":e,滋賀:e,"xn--8pvr4u":e,熊本:e,"xn--5rtp49c":e,石川:e,"xn--ntso0iqx3a":e,神奈川:e,"xn--elqq16h":e,福井:e,"xn--4it168d":e,福岡:e,"xn--klt787d":e,福島:e,"xn--rny31h":e,秋田:e,"xn--7t0a264c":e,群馬:e,"xn--uist22h":e,茨城:e,"xn--8ltr62k":e,長崎:e,"xn--2m4a15e":e,長野:e,"xn--32vp30h":e,青森:e,"xn--4it797k":e,静岡:e,"xn--5rtq34k":e,香川:e,"xn--k7yn95e":e,高知:e,"xn--tor131o":e,鳥取:e,"xn--d5qv7z876c":e,鹿児島:e,kawasaki:f,kitakyushu:f,kobe:f,nagoya:f,sapporo:f,sendai:f,yokohama:f,buyshop:t,fashionstore:t,handcrafted:t,kawaiishop:t,supersale:t,theshop:t,"0am":t,"0g0":t,"0j0":t,"0t0":t,mydns:t,pgw:t,wjg:t,usercontent:t,angry:t,babyblue:t,babymilk:t,backdrop:t,bambina:t,bitter:t,blush:t,boo:t,boy:t,boyfriend:t,but:t,candypop:t,capoo:t,catfood:t,cheap:t,chicappa:t,chillout:t,chips:t,chowder:t,chu:t,ciao:t,cocotte:t,coolblog:t,cranky:t,cutegirl:t,daa:t,deca:t,deci:t,digick:t,egoism:t,fakefur:t,fem:t,flier:t,floppy:t,fool:t,frenchkiss:t,girlfriend:t,girly:t,gloomy:t,gonna:t,greater:t,hacca:t,heavy:t,her:t,hiho:t,hippy:t,holy:t,hungry:t,icurus:t,itigo:t,jellybean:t,kikirara:t,kill:t,kilo:t,kuron:t,littlestar:t,lolipopmc:t,lolitapunk:t,lomo:t,lovepop:t,lovesick:t,main:t,mods:t,mond:t,mongolian:t,moo:t,namaste:t,nikita:t,nobushi:t,noor:t,oops:t,parallel:t,parasite:t,pecori:t,peewee:t,penne:t,pepper:t,perma:t,pigboat:t,pinoko:t,punyu:t,pupu:t,pussycat:t,pya:t,raindrop:t,readymade:t,sadist:t,schoolbus:t,secret:t,staba:t,stripper:t,sub:t,sunnyday:t,thick:t,tonkotsu:t,under:t,upper:t,velvet:t,verse:t,versus:t,vivian:t,watson:t,weblike:t,whitesnow:t,zombie:t,hateblo:t,hatenablog:t,hatenadiary:t,"2-d":t,bona:t,crap:t,daynight:t,eek:t,flop:t,halfmoon:t,jeez:t,matrix:t,mimoza:t,netgamers:t,nyanta:t,o0o0:t,rdy:t,rgr:t,rulez:t,sakurastorage:[0,{isk01:K,isk02:K}],saloon:t,sblo:t,skr:t,tank:t,"uh-oh":t,undo:t,webaccel:[0,{rs:t,user:t}],websozai:t,xii:t}],ke:[1,{ac:e,co:e,go:e,info:e,me:e,mobi:e,ne:e,or:e,sc:e}],kg:[1,{com:e,edu:e,gov:e,mil:e,net:e,org:e,us:t}],kh:f,ki:X,km:[1,{ass:e,com:e,edu:e,gov:e,mil:e,nom:e,org:e,prd:e,tm:e,asso:e,coop:e,gouv:e,medecin:e,notaires:e,pharmaciens:e,presse:e,veterinaire:e}],kn:[1,{edu:e,gov:e,net:e,org:e}],kp:[1,{com:e,edu:e,gov:e,org:e,rep:e,tra:e}],kr:[1,{ac:e,co:e,es:e,go:e,hs:e,kg:e,mil:e,ms:e,ne:e,or:e,pe:e,re:e,sc:e,busan:e,chungbuk:e,chungnam:e,daegu:e,daejeon:e,gangwon:e,gwangju:e,gyeongbuk:e,gyeonggi:e,gyeongnam:e,incheon:e,jeju:e,jeonbuk:e,jeonnam:e,seoul:e,ulsan:e}],kw:[1,{com:e,edu:e,emb:e,gov:e,ind:e,net:e,org:e}],ky:P,kz:[1,{com:e,edu:e,gov:e,mil:e,net:e,org:e,jcloud:t}],la:[1,{com:e,edu:e,gov:e,info:e,int:e,net:e,org:e,per:e,bnr:t}],lb:n,lc:[1,{co:e,com:e,edu:e,gov:e,net:e,org:e,oy:t}],li:e,lk:[1,{ac:e,assn:e,com:e,edu:e,gov:e,grp:e,hotel:e,int:e,ltd:e,net:e,ngo:e,org:e,sch:e,soc:e,web:e}],lr:n,ls:[1,{ac:e,biz:e,co:e,edu:e,gov:e,info:e,net:e,org:e,sc:e}],lt:o,lu:[1,{"123website":t}],lv:[1,{asn:e,com:e,conf:e,edu:e,gov:e,id:e,mil:e,net:e,org:e}],ly:[1,{com:e,edu:e,gov:e,id:e,med:e,net:e,org:e,plc:e,sch:e}],ma:[1,{ac:e,co:e,gov:e,net:e,org:e,press:e}],mc:[1,{asso:e,tm:e}],md:[1,{ir:t}],me:[1,{ac:e,co:e,edu:e,gov:e,its:e,net:e,org:e,priv:e,c66:t,craft:t,edgestack:t,filegear:t,glitch:t,"filegear-sg":t,lohmus:t,barsy:t,mcdir:t,brasilia:t,ddns:t,dnsfor:t,hopto:t,loginto:t,noip:t,webhop:t,soundcast:t,tcp4:t,vp4:t,diskstation:t,dscloud:t,i234:t,myds:t,synology:t,transip:M,nohost:t}],mg:[1,{co:e,com:e,edu:e,gov:e,mil:e,nom:e,org:e,prd:e}],mh:e,mil:e,mk:[1,{com:e,edu:e,gov:e,inf:e,name:e,net:e,org:e}],ml:[1,{com:e,edu:e,gouv:e,gov:e,net:e,org:e,presse:e}],mm:f,mn:[1,{edu:e,gov:e,org:e,nyc:t}],mo:n,mobi:[1,{barsy:t,dscloud:t}],mp:[1,{ju:t}],mq:e,mr:o,ms:[1,{com:e,edu:e,gov:e,net:e,org:e,minisite:t}],mt:P,mu:[1,{ac:e,co:e,com:e,gov:e,net:e,or:e,org:e}],museum:e,mv:[1,{aero:e,biz:e,com:e,coop:e,edu:e,gov:e,info:e,int:e,mil:e,museum:e,name:e,net:e,org:e,pro:e}],mw:[1,{ac:e,biz:e,co:e,com:e,coop:e,edu:e,gov:e,int:e,net:e,org:e}],mx:[1,{com:e,edu:e,gob:e,net:e,org:e}],my:[1,{biz:e,com:e,edu:e,gov:e,mil:e,name:e,net:e,org:e}],mz:[1,{ac:e,adv:e,co:e,edu:e,gov:e,mil:e,net:e,org:e}],na:[1,{alt:e,co:e,com:e,gov:e,net:e,org:e}],name:[1,{her:J,his:J}],nc:[1,{asso:e,nom:e}],ne:e,net:[1,{adobeaemcloud:t,"adobeio-static":t,adobeioruntime:t,akadns:t,akamai:t,"akamai-staging":t,akamaiedge:t,"akamaiedge-staging":t,akamaihd:t,"akamaihd-staging":t,akamaiorigin:t,"akamaiorigin-staging":t,akamaized:t,"akamaized-staging":t,edgekey:t,"edgekey-staging":t,edgesuite:t,"edgesuite-staging":t,alwaysdata:t,myamaze:t,cloudfront:t,appudo:t,"atlassian-dev":[0,{prod:Z}],myfritz:t,onavstack:t,shopselect:t,blackbaudcdn:t,boomla:t,bplaced:t,square7:t,cdn77:[0,{r:t}],"cdn77-ssl":t,gb:t,hu:t,jp:t,se:t,uk:t,clickrising:t,"ddns-ip":t,"dns-cloud":t,"dns-dynamic":t,cloudaccess:t,cloudflare:[2,{cdn:t}],cloudflareanycast:Z,cloudflarecn:Z,cloudflareglobal:Z,ctfcloud:t,"feste-ip":t,"knx-server":t,"static-access":t,cryptonomic:s,dattolocal:t,mydatto:t,debian:t,definima:t,"at-band-camp":t,blogdns:t,"broke-it":t,buyshouses:t,dnsalias:t,dnsdojo:t,"does-it":t,dontexist:t,dynalias:t,dynathome:t,endofinternet:t,"from-az":t,"from-co":t,"from-la":t,"from-ny":t,"gets-it":t,"ham-radio-op":t,homeftp:t,homeip:t,homelinux:t,homeunix:t,"in-the-band":t,"is-a-chef":t,"is-a-geek":t,"isa-geek":t,"kicks-ass":t,"office-on-the":t,podzone:t,"scrapper-site":t,selfip:t,"sells-it":t,servebbs:t,serveftp:t,thruhere:t,webhop:t,casacam:t,dynu:t,dynv6:t,twmail:t,ru:t,channelsdvr:[2,{u:t}],fastly:[0,{freetls:t,map:t,prod:[0,{a:t,global:t}],ssl:[0,{a:t,b:t,global:t}]}],fastlylb:[2,{map:t}],edgeapp:t,"keyword-on":t,"live-on":t,"server-on":t,"cdn-edges":t,heteml:t,cloudfunctions:t,"grafana-dev":t,iobb:t,moonscale:t,"in-dsl":t,"in-vpn":t,botdash:t,"apps-1and1":t,ipifony:t,cloudjiffy:[2,{"fra1-de":t,"west1-us":t}],elastx:[0,{"jls-sto1":t,"jls-sto2":t,"jls-sto3":t}],massivegrid:[0,{paas:[0,{"fr-1":t,"lon-1":t,"lon-2":t,"ny-1":t,"ny-2":t,"sg-1":t}]}],saveincloud:[0,{jelastic:t,"nordeste-idc":t}],scaleforce:B,kinghost:t,uni5:t,krellian:t,ggff:t,localcert:t,localhostcert:t,barsy:t,memset:t,"azure-api":t,"azure-mobile":t,azureedge:t,azurefd:t,azurestaticapps:[2,{1:t,2:t,3:t,4:t,5:t,6:t,7:t,centralus:t,eastasia:t,eastus2:t,westeurope:t,westus2:t}],azurewebsites:t,cloudapp:t,trafficmanager:t,windows:[0,{core:[0,{blob:t}],servicebus:t}],mynetname:[0,{sn:t}],routingthecloud:t,bounceme:t,ddns:t,"eating-organic":t,mydissent:t,myeffect:t,mymediapc:t,mypsx:t,mysecuritycamera:t,nhlfan:t,"no-ip":t,pgafan:t,privatizehealthinsurance:t,redirectme:t,serveblog:t,serveminecraft:t,sytes:t,dnsup:t,hicam:t,"now-dns":t,ownip:t,vpndns:t,cloudycluster:t,ovh:[0,{hosting:s,webpaas:s}],rackmaze:t,myradweb:t,in:t,"subsc-pay":t,squares:t,schokokeks:t,"firewall-gateway":t,seidat:t,senseering:t,siteleaf:t,mafelo:t,myspreadshop:t,"vps-host":[2,{jelastic:[0,{atl:t,njs:t,ric:t}]}],srcf:[0,{soc:t,user:t}],supabase:t,dsmynas:t,familyds:t,ts:[2,{c:s}],torproject:[2,{pages:t}],vusercontent:t,"reserve-online":t,"community-pro":t,meinforum:t,yandexcloud:[2,{storage:t,website:t}],za:t}],nf:[1,{arts:e,com:e,firm:e,info:e,net:e,other:e,per:e,rec:e,store:e,web:e}],ng:[1,{com:e,edu:e,gov:e,i:e,mil:e,mobi:e,name:e,net:e,org:e,sch:e,biz:[2,{co:t,dl:t,go:t,lg:t,on:t}],col:t,firm:t,gen:t,ltd:t,ngo:t,plc:t}],ni:[1,{ac:e,biz:e,co:e,com:e,edu:e,gob:e,in:e,info:e,int:e,mil:e,net:e,nom:e,org:e,web:e}],nl:[1,{co:t,"hosting-cluster":t,gov:t,khplay:t,"123website":t,myspreadshop:t,transurl:s,cistron:t,demon:t}],no:[1,{fhs:e,folkebibl:e,fylkesbibl:e,idrett:e,museum:e,priv:e,vgs:e,dep:e,herad:e,kommune:e,mil:e,stat:e,aa:Q,ah:Q,bu:Q,fm:Q,hl:Q,hm:Q,"jan-mayen":Q,mr:Q,nl:Q,nt:Q,of:Q,ol:Q,oslo:Q,rl:Q,sf:Q,st:Q,svalbard:Q,tm:Q,tr:Q,va:Q,vf:Q,akrehamn:e,"xn--krehamn-dxa":e,åkrehamn:e,algard:e,"xn--lgrd-poac":e,ålgård:e,arna:e,bronnoysund:e,"xn--brnnysund-m8ac":e,brønnøysund:e,brumunddal:e,bryne:e,drobak:e,"xn--drbak-wua":e,drøbak:e,egersund:e,fetsund:e,floro:e,"xn--flor-jra":e,florø:e,fredrikstad:e,hokksund:e,honefoss:e,"xn--hnefoss-q1a":e,hønefoss:e,jessheim:e,jorpeland:e,"xn--jrpeland-54a":e,jørpeland:e,kirkenes:e,kopervik:e,krokstadelva:e,langevag:e,"xn--langevg-jxa":e,langevåg:e,leirvik:e,mjondalen:e,"xn--mjndalen-64a":e,mjøndalen:e,"mo-i-rana":e,mosjoen:e,"xn--mosjen-eya":e,mosjøen:e,nesoddtangen:e,orkanger:e,osoyro:e,"xn--osyro-wua":e,osøyro:e,raholt:e,"xn--rholt-mra":e,råholt:e,sandnessjoen:e,"xn--sandnessjen-ogb":e,sandnessjøen:e,skedsmokorset:e,slattum:e,spjelkavik:e,stathelle:e,stavern:e,stjordalshalsen:e,"xn--stjrdalshalsen-sqb":e,stjørdalshalsen:e,tananger:e,tranby:e,vossevangen:e,aarborte:e,aejrie:e,afjord:e,"xn--fjord-lra":e,åfjord:e,agdenes:e,akershus:ee,aknoluokta:e,"xn--koluokta-7ya57h":e,ákŋoluokta:e,al:e,"xn--l-1fa":e,ål:e,alaheadju:e,"xn--laheadju-7ya":e,álaheadju:e,alesund:e,"xn--lesund-hua":e,ålesund:e,alstahaug:e,alta:e,"xn--lt-liac":e,áltá:e,alvdal:e,amli:e,"xn--mli-tla":e,åmli:e,amot:e,"xn--mot-tla":e,åmot:e,andasuolo:e,andebu:e,andoy:e,"xn--andy-ira":e,andøy:e,ardal:e,"xn--rdal-poa":e,årdal:e,aremark:e,arendal:e,"xn--s-1fa":e,ås:e,aseral:e,"xn--seral-lra":e,åseral:e,asker:e,askim:e,askoy:e,"xn--asky-ira":e,askøy:e,askvoll:e,asnes:e,"xn--snes-poa":e,åsnes:e,audnedaln:e,aukra:e,aure:e,aurland:e,"aurskog-holand":e,"xn--aurskog-hland-jnb":e,"aurskog-høland":e,austevoll:e,austrheim:e,averoy:e,"xn--avery-yua":e,averøy:e,badaddja:e,"xn--bdddj-mrabd":e,bådåddjå:e,"xn--brum-voa":e,bærum:e,bahcavuotna:e,"xn--bhcavuotna-s4a":e,báhcavuotna:e,bahccavuotna:e,"xn--bhccavuotna-k7a":e,báhccavuotna:e,baidar:e,"xn--bidr-5nac":e,báidár:e,bajddar:e,"xn--bjddar-pta":e,bájddar:e,balat:e,"xn--blt-elab":e,bálát:e,balestrand:e,ballangen:e,balsfjord:e,bamble:e,bardu:e,barum:e,batsfjord:e,"xn--btsfjord-9za":e,båtsfjord:e,bearalvahki:e,"xn--bearalvhki-y4a":e,bearalváhki:e,beardu:e,beiarn:e,berg:e,bergen:e,berlevag:e,"xn--berlevg-jxa":e,berlevåg:e,bievat:e,"xn--bievt-0qa":e,bievát:e,bindal:e,birkenes:e,bjarkoy:e,"xn--bjarky-fya":e,bjarkøy:e,bjerkreim:e,bjugn:e,bodo:e,"xn--bod-2na":e,bodø:e,bokn:e,bomlo:e,"xn--bmlo-gra":e,bømlo:e,bremanger:e,bronnoy:e,"xn--brnny-wuac":e,brønnøy:e,budejju:e,buskerud:ee,bygland:e,bykle:e,cahcesuolo:e,"xn--hcesuolo-7ya35b":e,čáhcesuolo:e,davvenjarga:e,"xn--davvenjrga-y4a":e,davvenjárga:e,davvesiida:e,deatnu:e,dielddanuorri:e,divtasvuodna:e,divttasvuotna:e,donna:e,"xn--dnna-gra":e,dønna:e,dovre:e,drammen:e,drangedal:e,dyroy:e,"xn--dyry-ira":e,dyrøy:e,eid:e,eidfjord:e,eidsberg:e,eidskog:e,eidsvoll:e,eigersund:e,elverum:e,enebakk:e,engerdal:e,etne:e,etnedal:e,evenassi:e,"xn--eveni-0qa01ga":e,evenášši:e,evenes:e,"evje-og-hornnes":e,farsund:e,fauske:e,fedje:e,fet:e,finnoy:e,"xn--finny-yua":e,finnøy:e,fitjar:e,fjaler:e,fjell:e,fla:e,"xn--fl-zia":e,flå:e,flakstad:e,flatanger:e,flekkefjord:e,flesberg:e,flora:e,folldal:e,forde:e,"xn--frde-gra":e,førde:e,forsand:e,fosnes:e,"xn--frna-woa":e,fræna:e,frana:e,frei:e,frogn:e,froland:e,frosta:e,froya:e,"xn--frya-hra":e,frøya:e,fuoisku:e,fuossko:e,fusa:e,fyresdal:e,gaivuotna:e,"xn--givuotna-8ya":e,gáivuotna:e,galsa:e,"xn--gls-elac":e,gálsá:e,gamvik:e,gangaviika:e,"xn--ggaviika-8ya47h":e,gáŋgaviika:e,gaular:e,gausdal:e,giehtavuoatna:e,gildeskal:e,"xn--gildeskl-g0a":e,gildeskål:e,giske:e,gjemnes:e,gjerdrum:e,gjerstad:e,gjesdal:e,gjovik:e,"xn--gjvik-wua":e,gjøvik:e,gloppen:e,gol:e,gran:e,grane:e,granvin:e,gratangen:e,grimstad:e,grong:e,grue:e,gulen:e,guovdageaidnu:e,ha:e,"xn--h-2fa":e,hå:e,habmer:e,"xn--hbmer-xqa":e,hábmer:e,hadsel:e,"xn--hgebostad-g3a":e,hægebostad:e,hagebostad:e,halden:e,halsa:e,hamar:e,hamaroy:e,hammarfeasta:e,"xn--hmmrfeasta-s4ac":e,hámmárfeasta:e,hammerfest:e,hapmir:e,"xn--hpmir-xqa":e,hápmir:e,haram:e,hareid:e,harstad:e,hasvik:e,hattfjelldal:e,haugesund:e,hedmark:[0,{os:e,valer:e,"xn--vler-qoa":e,våler:e}],hemne:e,hemnes:e,hemsedal:e,hitra:e,hjartdal:e,hjelmeland:e,hobol:e,"xn--hobl-ira":e,hobøl:e,hof:e,hol:e,hole:e,holmestrand:e,holtalen:e,"xn--holtlen-hxa":e,holtålen:e,hordaland:[0,{os:e}],hornindal:e,horten:e,hoyanger:e,"xn--hyanger-q1a":e,høyanger:e,hoylandet:e,"xn--hylandet-54a":e,høylandet:e,hurdal:e,hurum:e,hvaler:e,hyllestad:e,ibestad:e,inderoy:e,"xn--indery-fya":e,inderøy:e,iveland:e,ivgu:e,jevnaker:e,jolster:e,"xn--jlster-bya":e,jølster:e,jondal:e,kafjord:e,"xn--kfjord-iua":e,kåfjord:e,karasjohka:e,"xn--krjohka-hwab49j":e,kárášjohka:e,karasjok:e,karlsoy:e,karmoy:e,"xn--karmy-yua":e,karmøy:e,kautokeino:e,klabu:e,"xn--klbu-woa":e,klæbu:e,klepp:e,kongsberg:e,kongsvinger:e,kraanghke:e,"xn--kranghke-b0a":e,kråanghke:e,kragero:e,"xn--krager-gya":e,kragerø:e,kristiansand:e,kristiansund:e,krodsherad:e,"xn--krdsherad-m8a":e,krødsherad:e,"xn--kvfjord-nxa":e,kvæfjord:e,"xn--kvnangen-k0a":e,kvænangen:e,kvafjord:e,kvalsund:e,kvam:e,kvanangen:e,kvinesdal:e,kvinnherad:e,kviteseid:e,kvitsoy:e,"xn--kvitsy-fya":e,kvitsøy:e,laakesvuemie:e,"xn--lrdal-sra":e,lærdal:e,lahppi:e,"xn--lhppi-xqa":e,láhppi:e,lardal:e,larvik:e,lavagis:e,lavangen:e,leangaviika:e,"xn--leagaviika-52b":e,leaŋgaviika:e,lebesby:e,leikanger:e,leirfjord:e,leka:e,leksvik:e,lenvik:e,lerdal:e,lesja:e,levanger:e,lier:e,lierne:e,lillehammer:e,lillesand:e,lindas:e,"xn--linds-pra":e,lindås:e,lindesnes:e,loabat:e,"xn--loabt-0qa":e,loabát:e,lodingen:e,"xn--ldingen-q1a":e,lødingen:e,lom:e,loppa:e,lorenskog:e,"xn--lrenskog-54a":e,lørenskog:e,loten:e,"xn--lten-gra":e,løten:e,lund:e,lunner:e,luroy:e,"xn--lury-ira":e,lurøy:e,luster:e,lyngdal:e,lyngen:e,malatvuopmi:e,"xn--mlatvuopmi-s4a":e,málatvuopmi:e,malselv:e,"xn--mlselv-iua":e,målselv:e,malvik:e,mandal:e,marker:e,marnardal:e,masfjorden:e,masoy:e,"xn--msy-ula0h":e,måsøy:e,"matta-varjjat":e,"xn--mtta-vrjjat-k7af":e,"mátta-várjjat":e,meland:e,meldal:e,melhus:e,meloy:e,"xn--mely-ira":e,meløy:e,meraker:e,"xn--merker-kua":e,meråker:e,midsund:e,"midtre-gauldal":e,moareke:e,"xn--moreke-jua":e,moåreke:e,modalen:e,modum:e,molde:e,"more-og-romsdal":[0,{heroy:e,sande:e}],"xn--mre-og-romsdal-qqb":[0,{"xn--hery-ira":e,sande:e}],"møre-og-romsdal":[0,{herøy:e,sande:e}],moskenes:e,moss:e,mosvik:e,muosat:e,"xn--muost-0qa":e,muosát:e,naamesjevuemie:e,"xn--nmesjevuemie-tcba":e,nååmesjevuemie:e,"xn--nry-yla5g":e,nærøy:e,namdalseid:e,namsos:e,namsskogan:e,nannestad:e,naroy:e,narviika:e,narvik:e,naustdal:e,navuotna:e,"xn--nvuotna-hwa":e,návuotna:e,"nedre-eiker":e,nesna:e,nesodden:e,nesseby:e,nesset:e,nissedal:e,nittedal:e,"nord-aurdal":e,"nord-fron":e,"nord-odal":e,norddal:e,nordkapp:e,nordland:[0,{bo:e,"xn--b-5ga":e,bø:e,heroy:e,"xn--hery-ira":e,herøy:e}],"nordre-land":e,nordreisa:e,"nore-og-uvdal":e,notodden:e,notteroy:e,"xn--nttery-byae":e,nøtterøy:e,odda:e,oksnes:e,"xn--ksnes-uua":e,øksnes:e,omasvuotna:e,oppdal:e,oppegard:e,"xn--oppegrd-ixa":e,oppegård:e,orkdal:e,orland:e,"xn--rland-uua":e,ørland:e,orskog:e,"xn--rskog-uua":e,ørskog:e,orsta:e,"xn--rsta-fra":e,ørsta:e,osen:e,osteroy:e,"xn--ostery-fya":e,osterøy:e,ostfold:[0,{valer:e}],"xn--stfold-9xa":[0,{"xn--vler-qoa":e}],østfold:[0,{våler:e}],"ostre-toten":e,"xn--stre-toten-zcb":e,"østre-toten":e,overhalla:e,"ovre-eiker":e,"xn--vre-eiker-k8a":e,"øvre-eiker":e,oyer:e,"xn--yer-zna":e,øyer:e,oygarden:e,"xn--ygarden-p1a":e,øygarden:e,"oystre-slidre":e,"xn--ystre-slidre-ujb":e,"øystre-slidre":e,porsanger:e,porsangu:e,"xn--porsgu-sta26f":e,porsáŋgu:e,porsgrunn:e,rade:e,"xn--rde-ula":e,råde:e,radoy:e,"xn--rady-ira":e,radøy:e,"xn--rlingen-mxa":e,rælingen:e,rahkkeravju:e,"xn--rhkkervju-01af":e,ráhkkerávju:e,raisa:e,"xn--risa-5na":e,ráisa:e,rakkestad:e,ralingen:e,rana:e,randaberg:e,rauma:e,rendalen:e,rennebu:e,rennesoy:e,"xn--rennesy-v1a":e,rennesøy:e,rindal:e,ringebu:e,ringerike:e,ringsaker:e,risor:e,"xn--risr-ira":e,risør:e,rissa:e,roan:e,rodoy:e,"xn--rdy-0nab":e,rødøy:e,rollag:e,romsa:e,romskog:e,"xn--rmskog-bya":e,rømskog:e,roros:e,"xn--rros-gra":e,røros:e,rost:e,"xn--rst-0na":e,røst:e,royken:e,"xn--ryken-vua":e,røyken:e,royrvik:e,"xn--ryrvik-bya":e,røyrvik:e,ruovat:e,rygge:e,salangen:e,salat:e,"xn--slat-5na":e,sálat:e,"xn--slt-elab":e,sálát:e,saltdal:e,samnanger:e,sandefjord:e,sandnes:e,sandoy:e,"xn--sandy-yua":e,sandøy:e,sarpsborg:e,sauda:e,sauherad:e,sel:e,selbu:e,selje:e,seljord:e,siellak:e,sigdal:e,siljan:e,sirdal:e,skanit:e,"xn--sknit-yqa":e,skánit:e,skanland:e,"xn--sknland-fxa":e,skånland:e,skaun:e,skedsmo:e,ski:e,skien:e,skierva:e,"xn--skierv-uta":e,skiervá:e,skiptvet:e,skjak:e,"xn--skjk-soa":e,skjåk:e,skjervoy:e,"xn--skjervy-v1a":e,skjervøy:e,skodje:e,smola:e,"xn--smla-hra":e,smøla:e,snaase:e,"xn--snase-nra":e,snåase:e,snasa:e,"xn--snsa-roa":e,snåsa:e,snillfjord:e,snoasa:e,sogndal:e,sogne:e,"xn--sgne-gra":e,søgne:e,sokndal:e,sola:e,solund:e,somna:e,"xn--smna-gra":e,sømna:e,"sondre-land":e,"xn--sndre-land-0cb":e,"søndre-land":e,songdalen:e,"sor-aurdal":e,"xn--sr-aurdal-l8a":e,"sør-aurdal":e,"sor-fron":e,"xn--sr-fron-q1a":e,"sør-fron":e,"sor-odal":e,"xn--sr-odal-q1a":e,"sør-odal":e,"sor-varanger":e,"xn--sr-varanger-ggb":e,"sør-varanger":e,sorfold:e,"xn--srfold-bya":e,sørfold:e,sorreisa:e,"xn--srreisa-q1a":e,sørreisa:e,sortland:e,sorum:e,"xn--srum-gra":e,sørum:e,spydeberg:e,stange:e,stavanger:e,steigen:e,steinkjer:e,stjordal:e,"xn--stjrdal-s1a":e,stjørdal:e,stokke:e,"stor-elvdal":e,stord:e,stordal:e,storfjord:e,strand:e,stranda:e,stryn:e,sula:e,suldal:e,sund:e,sunndal:e,surnadal:e,sveio:e,svelvik:e,sykkylven:e,tana:e,telemark:[0,{bo:e,"xn--b-5ga":e,bø:e}],time:e,tingvoll:e,tinn:e,tjeldsund:e,tjome:e,"xn--tjme-hra":e,tjøme:e,tokke:e,tolga:e,tonsberg:e,"xn--tnsberg-q1a":e,tønsberg:e,torsken:e,"xn--trna-woa":e,træna:e,trana:e,tranoy:e,"xn--trany-yua":e,tranøy:e,troandin:e,trogstad:e,"xn--trgstad-r1a":e,trøgstad:e,tromsa:e,tromso:e,"xn--troms-zua":e,tromsø:e,trondheim:e,trysil:e,tvedestrand:e,tydal:e,tynset:e,tysfjord:e,tysnes:e,"xn--tysvr-vra":e,tysvær:e,tysvar:e,ullensaker:e,ullensvang:e,ulvik:e,unjarga:e,"xn--unjrga-rta":e,unjárga:e,utsira:e,vaapste:e,vadso:e,"xn--vads-jra":e,vadsø:e,"xn--vry-yla5g":e,værøy:e,vaga:e,"xn--vg-yiab":e,vågå:e,vagan:e,"xn--vgan-qoa":e,vågan:e,vagsoy:e,"xn--vgsy-qoa0j":e,vågsøy:e,vaksdal:e,valle:e,vang:e,vanylven:e,vardo:e,"xn--vard-jra":e,vardø:e,varggat:e,"xn--vrggt-xqad":e,várggát:e,varoy:e,vefsn:e,vega:e,vegarshei:e,"xn--vegrshei-c0a":e,vegårshei:e,vennesla:e,verdal:e,verran:e,vestby:e,vestfold:[0,{sande:e}],vestnes:e,"vestre-slidre":e,"vestre-toten":e,vestvagoy:e,"xn--vestvgy-ixa6o":e,vestvågøy:e,vevelstad:e,vik:e,vikna:e,vindafjord:e,voagat:e,volda:e,voss:e,co:t,"123hjemmeside":t,myspreadshop:t}],np:f,nr:X,nu:[1,{merseine:t,mine:t,shacknet:t,enterprisecloud:t}],nz:[1,{ac:e,co:e,cri:e,geek:e,gen:e,govt:e,health:e,iwi:e,kiwi:e,maori:e,"xn--mori-qsa":e,māori:e,mil:e,net:e,org:e,parliament:e,school:e,cloudns:t}],om:[1,{co:e,com:e,edu:e,gov:e,med:e,museum:e,net:e,org:e,pro:e}],onion:e,org:[1,{altervista:t,pimienta:t,poivron:t,potager:t,sweetpepper:t,cdn77:[0,{c:t,rsc:t}],"cdn77-secure":[0,{origin:[0,{ssl:t}]}],ae:t,cloudns:t,"ip-dynamic":t,ddnss:t,duckdns:t,tunk:t,blogdns:t,blogsite:t,boldlygoingnowhere:t,dnsalias:t,dnsdojo:t,doesntexist:t,dontexist:t,doomdns:t,dvrdns:t,dynalias:t,dyndns:[2,{go:t,home:t}],endofinternet:t,endoftheinternet:t,"from-me":t,"game-host":t,gotdns:t,"hobby-site":t,homedns:t,homeftp:t,homelinux:t,homeunix:t,"is-a-bruinsfan":t,"is-a-candidate":t,"is-a-celticsfan":t,"is-a-chef":t,"is-a-geek":t,"is-a-knight":t,"is-a-linux-user":t,"is-a-patsfan":t,"is-a-soxfan":t,"is-found":t,"is-lost":t,"is-saved":t,"is-very-bad":t,"is-very-evil":t,"is-very-good":t,"is-very-nice":t,"is-very-sweet":t,"isa-geek":t,"kicks-ass":t,misconfused:t,podzone:t,readmyblog:t,selfip:t,sellsyourhome:t,servebbs:t,serveftp:t,servegame:t,"stuff-4-sale":t,webhop:t,accesscam:t,camdvr:t,freeddns:t,mywire:t,webredirect:t,twmail:t,eu:[2,{al:t,asso:t,at:t,au:t,be:t,bg:t,ca:t,cd:t,ch:t,cn:t,cy:t,cz:t,de:t,dk:t,edu:t,ee:t,es:t,fi:t,fr:t,gr:t,hr:t,hu:t,ie:t,il:t,in:t,int:t,is:t,it:t,jp:t,kr:t,lt:t,lu:t,lv:t,me:t,mk:t,mt:t,my:t,net:t,ng:t,nl:t,no:t,nz:t,pl:t,pt:t,ro:t,ru:t,se:t,si:t,sk:t,tr:t,uk:t,us:t}],fedorainfracloud:t,fedorapeople:t,fedoraproject:[0,{cloud:t,os:L,stg:[0,{os:L}]}],freedesktop:t,hatenadiary:t,hepforge:t,"in-dsl":t,"in-vpn":t,js:t,barsy:t,mayfirst:t,routingthecloud:t,bmoattachments:t,"cable-modem":t,collegefan:t,couchpotatofries:t,hopto:t,mlbfan:t,myftp:t,mysecuritycamera:t,nflfan:t,"no-ip":t,"read-books":t,ufcfan:t,zapto:t,dynserv:t,"now-dns":t,"is-local":t,httpbin:t,pubtls:t,jpn:t,"my-firewall":t,myfirewall:t,spdns:t,"small-web":t,dsmynas:t,familyds:t,teckids:K,tuxfamily:t,diskstation:t,hk:t,us:t,toolforge:t,wmcloud:t,wmflabs:t,za:t}],pa:[1,{abo:e,ac:e,com:e,edu:e,gob:e,ing:e,med:e,net:e,nom:e,org:e,sld:e}],pe:[1,{com:e,edu:e,gob:e,mil:e,net:e,nom:e,org:e}],pf:[1,{com:e,edu:e,org:e}],pg:f,ph:[1,{com:e,edu:e,gov:e,i:e,mil:e,net:e,ngo:e,org:e,cloudns:t}],pk:[1,{ac:e,biz:e,com:e,edu:e,fam:e,gkp:e,gob:e,gog:e,gok:e,gop:e,gos:e,gov:e,net:e,org:e,web:e}],pl:[1,{com:e,net:e,org:e,agro:e,aid:e,atm:e,auto:e,biz:e,edu:e,gmina:e,gsm:e,info:e,mail:e,media:e,miasta:e,mil:e,nieruchomosci:e,nom:e,pc:e,powiat:e,priv:e,realestate:e,rel:e,sex:e,shop:e,sklep:e,sos:e,szkola:e,targi:e,tm:e,tourism:e,travel:e,turystyka:e,gov:[1,{ap:e,griw:e,ic:e,is:e,kmpsp:e,konsulat:e,kppsp:e,kwp:e,kwpsp:e,mup:e,mw:e,oia:e,oirm:e,oke:e,oow:e,oschr:e,oum:e,pa:e,pinb:e,piw:e,po:e,pr:e,psp:e,psse:e,pup:e,rzgw:e,sa:e,sdn:e,sko:e,so:e,sr:e,starostwo:e,ug:e,ugim:e,um:e,umig:e,upow:e,uppo:e,us:e,uw:e,uzs:e,wif:e,wiih:e,winb:e,wios:e,witd:e,wiw:e,wkz:e,wsa:e,wskr:e,wsse:e,wuoz:e,wzmiuw:e,zp:e,zpisdn:e}],augustow:e,"babia-gora":e,bedzin:e,beskidy:e,bialowieza:e,bialystok:e,bielawa:e,bieszczady:e,boleslawiec:e,bydgoszcz:e,bytom:e,cieszyn:e,czeladz:e,czest:e,dlugoleka:e,elblag:e,elk:e,glogow:e,gniezno:e,gorlice:e,grajewo:e,ilawa:e,jaworzno:e,"jelenia-gora":e,jgora:e,kalisz:e,karpacz:e,kartuzy:e,kaszuby:e,katowice:e,"kazimierz-dolny":e,kepno:e,ketrzyn:e,klodzko:e,kobierzyce:e,kolobrzeg:e,konin:e,konskowola:e,kutno:e,lapy:e,lebork:e,legnica:e,lezajsk:e,limanowa:e,lomza:e,lowicz:e,lubin:e,lukow:e,malbork:e,malopolska:e,mazowsze:e,mazury:e,mielec:e,mielno:e,mragowo:e,naklo:e,nowaruda:e,nysa:e,olawa:e,olecko:e,olkusz:e,olsztyn:e,opoczno:e,opole:e,ostroda:e,ostroleka:e,ostrowiec:e,ostrowwlkp:e,pila:e,pisz:e,podhale:e,podlasie:e,polkowice:e,pomorskie:e,pomorze:e,prochowice:e,pruszkow:e,przeworsk:e,pulawy:e,radom:e,"rawa-maz":e,rybnik:e,rzeszow:e,sanok:e,sejny:e,skoczow:e,slask:e,slupsk:e,sosnowiec:e,"stalowa-wola":e,starachowice:e,stargard:e,suwalki:e,swidnica:e,swiebodzin:e,swinoujscie:e,szczecin:e,szczytno:e,tarnobrzeg:e,tgory:e,turek:e,tychy:e,ustka:e,walbrzych:e,warmia:e,warszawa:e,waw:e,wegrow:e,wielun:e,wlocl:e,wloclawek:e,wodzislaw:e,wolomin:e,wroclaw:e,zachpomor:e,zagan:e,zarow:e,zgora:e,zgorzelec:e,art:t,gliwice:t,krakow:t,poznan:t,wroc:t,zakopane:t,beep:t,"ecommerce-shop":t,cfolks:t,dfirma:t,dkonto:t,you2:t,shoparena:t,homesklep:t,sdscloud:t,unicloud:t,lodz:t,pabianice:t,plock:t,sieradz:t,skierniewice:t,zgierz:t,krasnik:t,leczna:t,lubartow:t,lublin:t,poniatowa:t,swidnik:t,co:t,torun:t,simplesite:t,myspreadshop:t,gda:t,gdansk:t,gdynia:t,med:t,sopot:t,bielsko:t}],pm:[1,{own:t,name:t}],pn:[1,{co:e,edu:e,gov:e,net:e,org:e}],post:e,pr:[1,{biz:e,com:e,edu:e,gov:e,info:e,isla:e,name:e,net:e,org:e,pro:e,ac:e,est:e,prof:e}],pro:[1,{aaa:e,aca:e,acct:e,avocat:e,bar:e,cpa:e,eng:e,jur:e,law:e,med:e,recht:e,"12chars":t,cloudns:t,barsy:t,ngrok:t}],ps:[1,{com:e,edu:e,gov:e,net:e,org:e,plo:e,sec:e}],pt:[1,{com:e,edu:e,gov:e,int:e,net:e,nome:e,org:e,publ:e,"123paginaweb":t}],pw:[1,{gov:e,cloudns:t,x443:t}],py:[1,{com:e,coop:e,edu:e,gov:e,mil:e,net:e,org:e}],qa:[1,{com:e,edu:e,gov:e,mil:e,name:e,net:e,org:e,sch:e}],re:[1,{asso:e,com:e,netlib:t,can:t}],ro:[1,{arts:e,com:e,firm:e,info:e,nom:e,nt:e,org:e,rec:e,store:e,tm:e,www:e,co:t,shop:t,barsy:t}],rs:[1,{ac:e,co:e,edu:e,gov:e,in:e,org:e,brendly:G,barsy:t,ox:t}],ru:[1,{ac:t,edu:t,gov:t,int:t,mil:t,eurodir:t,adygeya:t,bashkiria:t,bir:t,cbg:t,com:t,dagestan:t,grozny:t,kalmykia:t,kustanai:t,marine:t,mordovia:t,msk:t,mytis:t,nalchik:t,nov:t,pyatigorsk:t,spb:t,vladikavkaz:t,vladimir:t,na4u:t,mircloud:t,myjino:[2,{hosting:s,landing:s,spectrum:s,vps:s}],cldmail:[0,{hb:t}],mcdir:[2,{vps:t}],mcpre:t,net:t,org:t,pp:t,lk3:t,ras:t}],rw:[1,{ac:e,co:e,coop:e,gov:e,mil:e,net:e,org:e}],sa:[1,{com:e,edu:e,gov:e,med:e,net:e,org:e,pub:e,sch:e}],sb:n,sc:n,sd:[1,{com:e,edu:e,gov:e,info:e,med:e,net:e,org:e,tv:e}],se:[1,{a:e,ac:e,b:e,bd:e,brand:e,c:e,d:e,e,f:e,fh:e,fhsk:e,fhv:e,g:e,h:e,i:e,k:e,komforb:e,kommunalforbund:e,komvux:e,l:e,lanbib:e,m:e,n:e,naturbruksgymn:e,o:e,org:e,p:e,parti:e,pp:e,press:e,r:e,s:e,t:e,tm:e,u:e,w:e,x:e,y:e,z:e,com:t,iopsys:t,"123minsida":t,itcouldbewor:t,myspreadshop:t}],sg:[1,{com:e,edu:e,gov:e,net:e,org:e,enscaled:t}],sh:[1,{com:e,gov:e,mil:e,net:e,org:e,hashbang:t,botda:t,platform:[0,{ent:t,eu:t,us:t}],now:t}],si:[1,{f5:t,gitapp:t,gitpage:t}],sj:e,sk:e,sl:n,sm:e,sn:[1,{art:e,com:e,edu:e,gouv:e,org:e,perso:e,univ:e}],so:[1,{com:e,edu:e,gov:e,me:e,net:e,org:e,surveys:t}],sr:e,ss:[1,{biz:e,co:e,com:e,edu:e,gov:e,me:e,net:e,org:e,sch:e}],st:[1,{co:e,com:e,consulado:e,edu:e,embaixada:e,mil:e,net:e,org:e,principe:e,saotome:e,store:e,helioho:t,kirara:t,noho:t}],su:[1,{abkhazia:t,adygeya:t,aktyubinsk:t,arkhangelsk:t,armenia:t,ashgabad:t,azerbaijan:t,balashov:t,bashkiria:t,bryansk:t,bukhara:t,chimkent:t,dagestan:t,"east-kazakhstan":t,exnet:t,georgia:t,grozny:t,ivanovo:t,jambyl:t,kalmykia:t,kaluga:t,karacol:t,karaganda:t,karelia:t,khakassia:t,krasnodar:t,kurgan:t,kustanai:t,lenug:t,mangyshlak:t,mordovia:t,msk:t,murmansk:t,nalchik:t,navoi:t,"north-kazakhstan":t,nov:t,obninsk:t,penza:t,pokrovsk:t,sochi:t,spb:t,tashkent:t,termez:t,togliatti:t,troitsk:t,tselinograd:t,tula:t,tuva:t,vladikavkaz:t,vladimir:t,vologda:t}],sv:[1,{com:e,edu:e,gob:e,org:e,red:e}],sx:o,sy:a,sz:[1,{ac:e,co:e,org:e}],tc:e,td:e,tel:e,tf:[1,{sch:t}],tg:e,th:[1,{ac:e,co:e,go:e,in:e,mi:e,net:e,or:e,online:t,shop:t}],tj:[1,{ac:e,biz:e,co:e,com:e,edu:e,go:e,gov:e,int:e,mil:e,name:e,net:e,nic:e,org:e,test:e,web:e}],tk:e,tl:o,tm:[1,{co:e,com:e,edu:e,gov:e,mil:e,net:e,nom:e,org:e}],tn:[1,{com:e,ens:e,fin:e,gov:e,ind:e,info:e,intl:e,mincom:e,nat:e,net:e,org:e,perso:e,tourism:e,orangecloud:t}],to:[1,{611:t,com:e,edu:e,gov:e,mil:e,net:e,org:e,oya:t,x0:t,quickconnect:w,vpnplus:t}],tr:[1,{av:e,bbs:e,bel:e,biz:e,com:e,dr:e,edu:e,gen:e,gov:e,info:e,k12:e,kep:e,mil:e,name:e,net:e,org:e,pol:e,tel:e,tsk:e,tv:e,web:e,nc:o}],tt:[1,{biz:e,co:e,com:e,edu:e,gov:e,info:e,mil:e,name:e,net:e,org:e,pro:e}],tv:[1,{"better-than":t,dyndns:t,"on-the-web":t,"worse-than":t,from:t,sakura:t}],tw:[1,{club:e,com:[1,{mymailer:t}],ebiz:e,edu:e,game:e,gov:e,idv:e,mil:e,net:e,org:e,url:t,mydns:t}],tz:[1,{ac:e,co:e,go:e,hotel:e,info:e,me:e,mil:e,mobi:e,ne:e,or:e,sc:e,tv:e}],ua:[1,{com:e,edu:e,gov:e,in:e,net:e,org:e,cherkassy:e,cherkasy:e,chernigov:e,chernihiv:e,chernivtsi:e,chernovtsy:e,ck:e,cn:e,cr:e,crimea:e,cv:e,dn:e,dnepropetrovsk:e,dnipropetrovsk:e,donetsk:e,dp:e,if:e,"ivano-frankivsk":e,kh:e,kharkiv:e,kharkov:e,kherson:e,khmelnitskiy:e,khmelnytskyi:e,kiev:e,kirovograd:e,km:e,kr:e,kropyvnytskyi:e,krym:e,ks:e,kv:e,kyiv:e,lg:e,lt:e,lugansk:e,luhansk:e,lutsk:e,lv:e,lviv:e,mk:e,mykolaiv:e,nikolaev:e,od:e,odesa:e,odessa:e,pl:e,poltava:e,rivne:e,rovno:e,rv:e,sb:e,sebastopol:e,sevastopol:e,sm:e,sumy:e,te:e,ternopil:e,uz:e,uzhgorod:e,uzhhorod:e,vinnica:e,vinnytsia:e,vn:e,volyn:e,yalta:e,zakarpattia:e,zaporizhzhe:e,zaporizhzhia:e,zhitomir:e,zhytomyr:e,zp:e,zt:e,cc:t,inf:t,ltd:t,cx:t,ie:t,biz:t,co:t,pp:t,v:t}],ug:[1,{ac:e,co:e,com:e,go:e,ne:e,or:e,org:e,sc:e}],uk:[1,{ac:e,co:[1,{bytemark:[0,{dh:t,vm:t}],layershift:B,barsy:t,barsyonline:t,retrosnub:q,"nh-serv":t,"no-ip":t,adimo:t,myspreadshop:t}],gov:[1,{api:t,campaign:t,service:t}],ltd:e,me:e,net:e,nhs:e,org:[1,{glug:t,lug:t,lugs:t,affinitylottery:t,raffleentry:t,weeklylottery:t}],plc:e,police:e,sch:f,conn:t,copro:t,hosp:t,"independent-commission":t,"independent-inquest":t,"independent-inquiry":t,"independent-panel":t,"independent-review":t,"public-inquiry":t,"royal-commission":t,pymnt:t,barsy:t,nimsite:t,oraclegovcloudapps:s}],us:[1,{dni:e,isa:e,nsn:e,ak:te,al:te,ar:te,as:te,az:te,ca:te,co:te,ct:te,dc:te,de:[1,{cc:e,lib:t}],fl:te,ga:te,gu:te,hi:ne,ia:te,id:te,il:te,in:te,ks:te,ky:te,la:te,ma:[1,{k12:[1,{chtr:e,paroch:e,pvt:e}],cc:e,lib:e}],md:te,me:te,mi:[1,{k12:e,cc:e,lib:e,"ann-arbor":e,cog:e,dst:e,eaton:e,gen:e,mus:e,tec:e,washtenaw:e}],mn:te,mo:te,ms:te,mt:te,nc:te,nd:ne,ne:te,nh:te,nj:te,nm:te,nv:te,ny:te,oh:te,ok:te,or:te,pa:te,pr:te,ri:ne,sc:te,sd:ne,tn:te,tx:te,ut:te,va:te,vi:te,vt:te,wa:te,wi:te,wv:[1,{cc:e}],wy:te,cloudns:t,"is-by":t,"land-4-sale":t,"stuff-4-sale":t,heliohost:t,enscaled:[0,{phx:t}],mircloud:t,ngo:t,golffan:t,noip:t,pointto:t,freeddns:t,srv:[2,{gh:t,gl:t}],platterp:t,servername:t}],uy:[1,{com:e,edu:e,gub:e,mil:e,net:e,org:e}],uz:[1,{co:e,com:e,net:e,org:e}],va:e,vc:[1,{com:e,edu:e,gov:e,mil:e,net:e,org:e,gv:[2,{d:t}],"0e":s,mydns:t}],ve:[1,{arts:e,bib:e,co:e,com:e,e12:e,edu:e,firm:e,gob:e,gov:e,info:e,int:e,mil:e,net:e,nom:e,org:e,rar:e,rec:e,store:e,tec:e,web:e}],vg:[1,{edu:e}],vi:[1,{co:e,com:e,k12:e,net:e,org:e}],vn:[1,{ac:e,ai:e,biz:e,com:e,edu:e,gov:e,health:e,id:e,info:e,int:e,io:e,name:e,net:e,org:e,pro:e,angiang:e,bacgiang:e,backan:e,baclieu:e,bacninh:e,"baria-vungtau":e,bentre:e,binhdinh:e,binhduong:e,binhphuoc:e,binhthuan:e,camau:e,cantho:e,caobang:e,daklak:e,daknong:e,danang:e,dienbien:e,dongnai:e,dongthap:e,gialai:e,hagiang:e,haiduong:e,haiphong:e,hanam:e,hanoi:e,hatinh:e,haugiang:e,hoabinh:e,hungyen:e,khanhhoa:e,kiengiang:e,kontum:e,laichau:e,lamdong:e,langson:e,laocai:e,longan:e,namdinh:e,nghean:e,ninhbinh:e,ninhthuan:e,phutho:e,phuyen:e,quangbinh:e,quangnam:e,quangngai:e,quangninh:e,quangtri:e,soctrang:e,sonla:e,tayninh:e,thaibinh:e,thainguyen:e,thanhhoa:e,thanhphohochiminh:e,thuathienhue:e,tiengiang:e,travinh:e,tuyenquang:e,vinhlong:e,vinhphuc:e,yenbai:e}],vu:P,wf:[1,{biz:t,sch:t}],ws:[1,{com:e,edu:e,gov:e,net:e,org:e,advisor:s,cloud66:t,dyndns:t,mypets:t}],yt:[1,{org:t}],"xn--mgbaam7a8h":e,امارات:e,"xn--y9a3aq":e,հայ:e,"xn--54b7fta0cc":e,বাংলা:e,"xn--90ae":e,бг:e,"xn--mgbcpq6gpa1a":e,البحرين:e,"xn--90ais":e,бел:e,"xn--fiqs8s":e,中国:e,"xn--fiqz9s":e,中國:e,"xn--lgbbat1ad8j":e,الجزائر:e,"xn--wgbh1c":e,مصر:e,"xn--e1a4c":e,ею:e,"xn--qxa6a":e,ευ:e,"xn--mgbah1a3hjkrd":e,موريتانيا:e,"xn--node":e,გე:e,"xn--qxam":e,ελ:e,"xn--j6w193g":[1,{"xn--gmqw5a":e,"xn--55qx5d":e,"xn--mxtq1m":e,"xn--wcvs22d":e,"xn--uc0atv":e,"xn--od0alg":e}],香港:[1,{個人:e,公司:e,政府:e,教育:e,組織:e,網絡:e}],"xn--2scrj9c":e,ಭಾರತ:e,"xn--3hcrj9c":e,ଭାରତ:e,"xn--45br5cyl":e,ভাৰত:e,"xn--h2breg3eve":e,भारतम्:e,"xn--h2brj9c8c":e,भारोत:e,"xn--mgbgu82a":e,ڀارت:e,"xn--rvc1e0am3e":e,ഭാരതം:e,"xn--h2brj9c":e,भारत:e,"xn--mgbbh1a":e,بارت:e,"xn--mgbbh1a71e":e,بھارت:e,"xn--fpcrj9c3d":e,భారత్:e,"xn--gecrj9c":e,ભારત:e,"xn--s9brj9c":e,ਭਾਰਤ:e,"xn--45brj9c":e,ভারত:e,"xn--xkc2dl3a5ee0h":e,இந்தியா:e,"xn--mgba3a4f16a":e,ایران:e,"xn--mgba3a4fra":e,ايران:e,"xn--mgbtx2b":e,عراق:e,"xn--mgbayh7gpa":e,الاردن:e,"xn--3e0b707e":e,한국:e,"xn--80ao21a":e,қаз:e,"xn--q7ce6a":e,ລາວ:e,"xn--fzc2c9e2c":e,ලංකා:e,"xn--xkc2al3hye2a":e,இலங்கை:e,"xn--mgbc0a9azcg":e,المغرب:e,"xn--d1alf":e,мкд:e,"xn--l1acc":e,мон:e,"xn--mix891f":e,澳門:e,"xn--mix082f":e,澳门:e,"xn--mgbx4cd0ab":e,مليسيا:e,"xn--mgb9awbf":e,عمان:e,"xn--mgbai9azgqp6j":e,پاکستان:e,"xn--mgbai9a5eva00b":e,پاكستان:e,"xn--ygbi2ammx":e,فلسطين:e,"xn--90a3ac":[1,{"xn--80au":e,"xn--90azh":e,"xn--d1at":e,"xn--c1avg":e,"xn--o1ac":e,"xn--o1ach":e}],срб:[1,{ак:e,обр:e,од:e,орг:e,пр:e,упр:e}],"xn--p1ai":e,рф:e,"xn--wgbl6a":e,قطر:e,"xn--mgberp4a5d4ar":e,السعودية:e,"xn--mgberp4a5d4a87g":e,السعودیة:e,"xn--mgbqly7c0a67fbc":e,السعودیۃ:e,"xn--mgbqly7cvafr":e,السعوديه:e,"xn--mgbpl2fh":e,سودان:e,"xn--yfro4i67o":e,新加坡:e,"xn--clchc0ea0b2g2a9gcd":e,சிங்கப்பூர்:e,"xn--ogbpf8fl":e,سورية:e,"xn--mgbtf8fl":e,سوريا:e,"xn--o3cw4h":[1,{"xn--o3cyx2a":e,"xn--12co0c3b4eva":e,"xn--m3ch0j3a":e,"xn--h3cuzk1di":e,"xn--12c1fe0br":e,"xn--12cfi8ixb8l":e}],ไทย:[1,{ทหาร:e,ธุรกิจ:e,เน็ต:e,รัฐบาล:e,ศึกษา:e,องค์กร:e}],"xn--pgbs0dh":e,تونس:e,"xn--kpry57d":e,台灣:e,"xn--kprw13d":e,台湾:e,"xn--nnx388a":e,臺灣:e,"xn--j1amh":e,укр:e,"xn--mgb2ddes":e,اليمن:e,xxx:e,ye:a,za:[0,{ac:e,agric:e,alt:e,co:e,edu:e,gov:e,grondar:e,law:e,mil:e,net:e,ngo:e,nic:e,nis:e,nom:e,org:e,school:e,tm:e,web:e}],zm:[1,{ac:e,biz:e,co:e,com:e,edu:e,gov:e,info:e,mil:e,net:e,org:e,sch:e}],zw:[1,{ac:e,co:e,gov:e,mil:e,org:e}],aaa:e,aarp:e,abb:e,abbott:e,abbvie:e,abc:e,able:e,abogado:e,abudhabi:e,academy:[1,{official:t}],accenture:e,accountant:e,accountants:e,aco:e,actor:e,ads:e,adult:e,aeg:e,aetna:e,afl:e,africa:e,agakhan:e,agency:e,aig:e,airbus:e,airforce:e,airtel:e,akdn:e,alibaba:e,alipay:e,allfinanz:e,allstate:e,ally:e,alsace:e,alstom:e,amazon:e,americanexpress:e,americanfamily:e,amex:e,amfam:e,amica:e,amsterdam:e,analytics:e,android:e,anquan:e,anz:e,aol:e,apartments:e,app:[1,{adaptable:t,aiven:t,beget:s,clerk:t,clerkstage:t,wnext:t,csb:[2,{preview:t}],deta:t,ondigitalocean:t,easypanel:t,encr:t,evervault:r,expo:[2,{staging:t}],edgecompute:t,"on-fleek":t,flutterflow:t,framer:t,hosted:s,run:s,web:t,hasura:t,botdash:t,loginline:t,medusajs:t,messerli:t,netfy:t,netlify:t,ngrok:t,"ngrok-free":t,developer:s,noop:t,northflank:s,upsun:s,replit:i,nyat:t,snowflake:[0,{"*":t,privatelink:s}],streamlit:t,storipress:t,telebit:t,typedream:t,vercel:t,bookonline:t,wdh:t,zeabur:t}],apple:e,aquarelle:e,arab:e,aramco:e,archi:e,army:e,art:e,arte:e,asda:e,associates:e,athleta:e,attorney:e,auction:e,audi:e,audible:e,audio:e,auspost:e,author:e,auto:e,autos:e,aws:[1,{sagemaker:[0,{"ap-northeast-1":c,"ap-northeast-2":c,"ap-south-1":c,"ap-southeast-1":c,"ap-southeast-2":c,"ca-central-1":d,"eu-central-1":c,"eu-west-1":c,"eu-west-2":c,"us-east-1":d,"us-east-2":d,"us-west-2":d,"af-south-1":u,"ap-east-1":u,"ap-northeast-3":u,"ap-south-2":h,"ap-southeast-3":u,"ap-southeast-4":h,"ca-west-1":[0,{notebook:t,"notebook-fips":t}],"eu-central-2":u,"eu-north-1":u,"eu-south-1":u,"eu-south-2":u,"eu-west-3":u,"il-central-1":u,"me-central-1":u,"me-south-1":u,"sa-east-1":u,"us-gov-east-1":p,"us-gov-west-1":p,"us-west-1":[0,{notebook:t,"notebook-fips":t,studio:t}],experiments:s}],repost:[0,{private:s}],on:[0,{"ap-northeast-1":l,"ap-southeast-1":l,"ap-southeast-2":l,"eu-central-1":l,"eu-north-1":l,"eu-west-1":l,"us-east-1":l,"us-east-2":l,"us-west-2":l}]}],axa:e,azure:e,baby:e,baidu:e,banamex:e,band:e,bank:e,bar:e,barcelona:e,barclaycard:e,barclays:e,barefoot:e,bargains:e,baseball:e,basketball:[1,{aus:t,nz:t}],bauhaus:e,bayern:e,bbc:e,bbt:e,bbva:e,bcg:e,bcn:e,beats:e,beauty:e,beer:e,bentley:e,berlin:e,best:e,bestbuy:e,bet:e,bharti:e,bible:e,bid:e,bike:e,bing:e,bingo:e,bio:e,black:e,blackfriday:e,blockbuster:e,blog:e,bloomberg:e,blue:e,bms:e,bmw:e,bnpparibas:e,boats:e,boehringer:e,bofa:e,bom:e,bond:e,boo:e,book:e,booking:e,bosch:e,bostik:e,boston:e,bot:e,boutique:e,box:e,bradesco:e,bridgestone:e,broadway:e,broker:e,brother:e,brussels:e,build:[1,{v0:t}],builders:[1,{cloudsite:t}],business:m,buy:e,buzz:e,bzh:e,cab:e,cafe:e,cal:e,call:e,calvinklein:e,cam:e,camera:e,camp:[1,{emf:[0,{at:t}]}],canon:e,capetown:e,capital:e,capitalone:e,car:e,caravan:e,cards:e,care:e,career:e,careers:e,cars:e,casa:[1,{nabu:[0,{ui:t}]}],case:e,cash:e,casino:e,catering:e,catholic:e,cba:e,cbn:e,cbre:e,center:e,ceo:e,cern:e,cfa:e,cfd:e,chanel:e,channel:e,charity:e,chase:e,chat:e,cheap:e,chintai:e,christmas:e,chrome:e,church:e,cipriani:e,circle:e,cisco:e,citadel:e,citi:e,citic:e,city:e,claims:e,cleaning:e,click:e,clinic:e,clinique:e,clothing:e,cloud:[1,{elementor:t,encoway:[0,{eu:t}],statics:s,ravendb:t,axarnet:[0,{"es-1":t}],diadem:t,jelastic:[0,{vip:t}],jele:t,"jenv-aruba":[0,{aruba:[0,{eur:[0,{it1:t}]}],it1:t}],keliweb:[2,{cs:t}],oxa:[2,{tn:t,uk:t}],primetel:[2,{uk:t}],reclaim:[0,{ca:t,uk:t,us:t}],trendhosting:[0,{ch:t,de:t}],jotelulu:t,kuleuven:t,linkyard:t,magentosite:s,matlab:t,observablehq:t,perspecta:t,vapor:t,"on-rancher":s,scw:[0,{baremetal:[0,{"fr-par-1":t,"fr-par-2":t,"nl-ams-1":t}],"fr-par":[0,{cockpit:t,fnc:[2,{functions:t}],k8s:b,s3:t,"s3-website":t,whm:t}],instances:[0,{priv:t,pub:t}],k8s:t,"nl-ams":[0,{cockpit:t,k8s:b,s3:t,"s3-website":t,whm:t}],"pl-waw":[0,{cockpit:t,k8s:b,s3:t,"s3-website":t}],scalebook:t,smartlabeling:t}],servebolt:t,onstackit:[0,{runs:t}],trafficplex:t,"unison-services":t,urown:t,voorloper:t,zap:t}],club:[1,{cloudns:t,jele:t,barsy:t}],clubmed:e,coach:e,codes:[1,{owo:s}],coffee:e,college:e,cologne:e,commbank:e,community:[1,{nog:t,ravendb:t,myforum:t}],company:e,compare:e,computer:e,comsec:e,condos:e,construction:e,consulting:e,contact:e,contractors:e,cooking:e,cool:[1,{elementor:t,de:t}],corsica:e,country:e,coupon:e,coupons:e,courses:e,cpa:e,credit:e,creditcard:e,creditunion:e,cricket:e,crown:e,crs:e,cruise:e,cruises:e,cuisinella:e,cymru:e,cyou:e,dad:e,dance:e,data:e,date:e,dating:e,datsun:e,day:e,dclk:e,dds:e,deal:e,dealer:e,deals:e,degree:e,delivery:e,dell:e,deloitte:e,delta:e,democrat:e,dental:e,dentist:e,desi:e,design:[1,{graphic:t,bss:t}],dev:[1,{"12chars":t,myaddr:t,panel:t,lcl:s,lclstage:s,stg:s,stgstage:s,pages:t,r2:t,workers:t,deno:t,"deno-staging":t,deta:t,evervault:r,fly:t,githubpreview:t,gateway:s,hrsn:[2,{psl:[0,{sub:t,wc:[0,{"*":t,sub:s}]}]}],botdash:t,"is-a-good":t,"is-a":t,iserv:t,runcontainers:t,localcert:[0,{user:s}],loginline:t,barsy:t,mediatech:t,modx:t,ngrok:t,"ngrok-free":t,"is-a-fullstack":t,"is-cool":t,"is-not-a":t,localplayer:t,xmit:t,"platter-app":t,replit:[2,{archer:t,bones:t,canary:t,global:t,hacker:t,id:t,janeway:t,kim:t,kira:t,kirk:t,odo:t,paris:t,picard:t,pike:t,prerelease:t,reed:t,riker:t,sisko:t,spock:t,staging:t,sulu:t,tarpit:t,teams:t,tucker:t,wesley:t,worf:t}],crm:[0,{d:s,w:s,wa:s,wb:s,wc:s,wd:s,we:s,wf:s}],vercel:t,webhare:s}],dhl:e,diamonds:e,diet:e,digital:[1,{cloudapps:[2,{london:t}]}],direct:[1,{libp2p:t}],directory:e,discount:e,discover:e,dish:e,diy:e,dnp:e,docs:e,doctor:e,dog:e,domains:e,dot:e,download:e,drive:e,dtv:e,dubai:e,dunlop:e,dupont:e,durban:e,dvag:e,dvr:e,earth:e,eat:e,eco:e,edeka:e,education:m,email:[1,{crisp:[0,{on:t}],tawk:V,tawkto:V}],emerck:e,energy:e,engineer:e,engineering:e,enterprises:e,epson:e,equipment:e,ericsson:e,erni:e,esq:e,estate:[1,{compute:s}],eurovision:e,eus:[1,{party:j}],events:[1,{koobin:t,co:t}],exchange:e,expert:e,exposed:e,express:e,extraspace:e,fage:e,fail:e,fairwinds:e,faith:e,family:e,fan:e,fans:e,farm:[1,{storj:t}],farmers:e,fashion:e,fast:e,fedex:e,feedback:e,ferrari:e,ferrero:e,fidelity:e,fido:e,film:e,final:e,finance:e,financial:m,fire:e,firestone:e,firmdale:e,fish:e,fishing:e,fit:e,fitness:e,flickr:e,flights:e,flir:e,florist:e,flowers:e,fly:e,foo:e,food:e,football:e,ford:e,forex:e,forsale:e,forum:e,foundation:e,fox:e,free:e,fresenius:e,frl:e,frogans:e,frontier:e,ftr:e,fujitsu:e,fun:e,fund:e,furniture:e,futbol:e,fyi:e,gal:e,gallery:e,gallo:e,gallup:e,game:e,games:[1,{pley:t,sheezy:t}],gap:e,garden:e,gay:[1,{pages:t}],gbiz:e,gdn:[1,{cnpy:t}],gea:e,gent:e,genting:e,george:e,ggee:e,gift:e,gifts:e,gives:e,giving:e,glass:e,gle:e,global:e,globo:e,gmail:e,gmbh:e,gmo:e,gmx:e,godaddy:e,gold:e,goldpoint:e,golf:e,goo:e,goodyear:e,goog:[1,{cloud:t,translate:t,usercontent:s}],google:e,gop:e,got:e,grainger:e,graphics:e,gratis:e,green:e,gripe:e,grocery:e,group:[1,{discourse:t}],gucci:e,guge:e,guide:e,guitars:e,guru:e,hair:e,hamburg:e,hangout:e,haus:e,hbo:e,hdfc:e,hdfcbank:e,health:[1,{hra:t}],healthcare:e,help:e,helsinki:e,here:e,hermes:e,hiphop:e,hisamitsu:e,hitachi:e,hiv:e,hkt:e,hockey:e,holdings:e,holiday:e,homedepot:e,homegoods:e,homes:e,homesense:e,honda:e,horse:e,hospital:e,host:[1,{cloudaccess:t,freesite:t,easypanel:t,fastvps:t,myfast:t,tempurl:t,wpmudev:t,jele:t,mircloud:t,wp2:t,half:t}],hosting:[1,{opencraft:t}],hot:e,hotels:e,hotmail:e,house:e,how:e,hsbc:e,hughes:e,hyatt:e,hyundai:e,ibm:e,icbc:e,ice:e,icu:e,ieee:e,ifm:e,ikano:e,imamat:e,imdb:e,immo:e,immobilien:e,inc:e,industries:e,infiniti:e,ing:e,ink:e,institute:e,insurance:e,insure:e,international:e,intuit:e,investments:e,ipiranga:e,irish:e,ismaili:e,ist:e,istanbul:e,itau:e,itv:e,jaguar:e,java:e,jcb:e,jeep:e,jetzt:e,jewelry:e,jio:e,jll:e,jmp:e,jnj:e,joburg:e,jot:e,joy:e,jpmorgan:e,jprs:e,juegos:e,juniper:e,kaufen:e,kddi:e,kerryhotels:e,kerrylogistics:e,kerryproperties:e,kfh:e,kia:e,kids:e,kim:e,kindle:e,kitchen:e,kiwi:e,koeln:e,komatsu:e,kosher:e,kpmg:e,kpn:e,krd:[1,{co:t,edu:t}],kred:e,kuokgroup:e,kyoto:e,lacaixa:e,lamborghini:e,lamer:e,lancaster:e,land:e,landrover:e,lanxess:e,lasalle:e,lat:e,latino:e,latrobe:e,law:e,lawyer:e,lds:e,lease:e,leclerc:e,lefrak:e,legal:e,lego:e,lexus:e,lgbt:e,lidl:e,life:e,lifeinsurance:e,lifestyle:e,lighting:e,like:e,lilly:e,limited:e,limo:e,lincoln:e,link:[1,{myfritz:t,cyon:t,dweb:s,nftstorage:[0,{ipfs:t}],mypep:t}],lipsy:e,live:[1,{aem:t,hlx:t,ewp:s}],living:e,llc:e,llp:e,loan:e,loans:e,locker:e,locus:e,lol:[1,{omg:t}],london:e,lotte:e,lotto:e,love:e,lpl:e,lplfinancial:e,ltd:e,ltda:e,lundbeck:e,luxe:e,luxury:e,madrid:e,maif:e,maison:e,makeup:e,man:e,management:[1,{router:t}],mango:e,map:e,market:e,marketing:e,markets:e,marriott:e,marshalls:e,mattel:e,mba:e,mckinsey:e,med:e,media:Y,meet:e,melbourne:e,meme:e,memorial:e,men:e,menu:[1,{barsy:t,barsyonline:t}],merck:e,merckmsd:e,miami:e,microsoft:e,mini:e,mint:e,mit:e,mitsubishi:e,mlb:e,mls:e,mma:e,mobile:e,moda:e,moe:e,moi:e,mom:[1,{ind:t}],monash:e,money:e,monster:e,mormon:e,mortgage:e,moscow:e,moto:e,motorcycles:e,mov:e,movie:e,msd:e,mtn:e,mtr:e,music:e,nab:e,nagoya:e,navy:e,nba:e,nec:e,netbank:e,netflix:e,network:[1,{alces:s,co:t,arvo:t,azimuth:t,tlon:t}],neustar:e,new:e,news:[1,{noticeable:t}],next:e,nextdirect:e,nexus:e,nfl:e,ngo:e,nhk:e,nico:e,nike:e,nikon:e,ninja:e,nissan:e,nissay:e,nokia:e,norton:e,now:e,nowruz:e,nowtv:e,nra:e,nrw:e,ntt:e,nyc:e,obi:e,observer:e,office:e,okinawa:e,olayan:e,olayangroup:e,ollo:e,omega:e,one:[1,{kin:s,service:t}],ong:[1,{obl:t}],onl:e,online:[1,{eero:t,"eero-stage":t,websitebuilder:t,barsy:t}],ooo:e,open:e,oracle:e,orange:[1,{tech:t}],organic:e,origins:e,osaka:e,otsuka:e,ott:e,ovh:[1,{nerdpol:t}],page:[1,{aem:t,hlx:t,hlx3:t,translated:t,codeberg:t,heyflow:t,prvcy:t,rocky:t,pdns:t,plesk:t}],panasonic:e,paris:e,pars:e,partners:e,parts:e,party:e,pay:e,pccw:e,pet:e,pfizer:e,pharmacy:e,phd:e,philips:e,phone:e,photo:e,photography:e,photos:Y,physio:e,pics:e,pictet:e,pictures:[1,{1337:t}],pid:e,pin:e,ping:e,pink:e,pioneer:e,pizza:[1,{ngrok:t}],place:m,play:e,playstation:e,plumbing:e,plus:e,pnc:e,pohl:e,poker:e,politie:e,porn:e,pramerica:e,praxi:e,press:e,prime:e,prod:e,productions:e,prof:e,progressive:e,promo:e,properties:e,property:e,protection:e,pru:e,prudential:e,pub:[1,{id:s,kin:s,barsy:t}],pwc:e,qpon:e,quebec:e,quest:e,racing:e,radio:e,read:e,realestate:e,realtor:e,realty:e,recipes:e,red:e,redstone:e,redumbrella:e,rehab:e,reise:e,reisen:e,reit:e,reliance:e,ren:e,rent:e,rentals:e,repair:e,report:e,republican:e,rest:e,restaurant:e,review:e,reviews:e,rexroth:e,rich:e,richardli:e,ricoh:e,ril:e,rio:e,rip:[1,{clan:t}],rocks:[1,{myddns:t,stackit:t,"lima-city":t,webspace:t}],rodeo:e,rogers:e,room:e,rsvp:e,rugby:e,ruhr:e,run:[1,{development:t,ravendb:t,liara:[2,{iran:t}],servers:t,build:s,code:s,database:s,migration:s,onporter:t,repl:t,stackit:t,val:[0,{express:t,web:t}],wix:t}],rwe:e,ryukyu:e,saarland:e,safe:e,safety:e,sakura:e,sale:e,salon:e,samsclub:e,samsung:e,sandvik:e,sandvikcoromant:e,sanofi:e,sap:e,sarl:e,sas:e,save:e,saxo:e,sbi:e,sbs:e,scb:e,schaeffler:e,schmidt:e,scholarships:e,school:e,schule:e,schwarz:e,science:e,scot:[1,{gov:[2,{service:t}]}],search:e,seat:e,secure:e,security:e,seek:e,select:e,sener:e,services:[1,{loginline:t}],seven:e,sew:e,sex:e,sexy:e,sfr:e,shangrila:e,sharp:e,shell:e,shia:e,shiksha:e,shoes:e,shop:[1,{base:t,hoplix:t,barsy:t,barsyonline:t,shopware:t}],shopping:e,shouji:e,show:e,silk:e,sina:e,singles:e,site:[1,{canva:y,cloudera:s,convex:t,cyon:t,fastvps:t,heyflow:t,jele:t,jouwweb:t,loginline:t,barsy:t,notion:t,omniwe:t,opensocial:t,madethis:t,platformsh:s,tst:s,byen:t,srht:t,novecore:t,wpsquared:t}],ski:e,skin:e,sky:e,skype:e,sling:e,smart:e,smile:e,sncf:e,soccer:e,social:e,softbank:e,software:e,sohu:e,solar:e,solutions:e,song:e,sony:e,soy:e,spa:e,space:[1,{myfast:t,heiyu:t,hf:[2,{static:t}],"app-ionos":t,project:t,uber:t,xs4all:t}],sport:e,spot:e,srl:e,stada:e,staples:e,star:e,statebank:e,statefarm:e,stc:e,stcgroup:e,stockholm:e,storage:e,store:[1,{barsy:t,sellfy:t,shopware:t,storebase:t}],stream:e,studio:e,study:e,style:e,sucks:e,supplies:e,supply:e,support:[1,{barsy:t}],surf:e,surgery:e,suzuki:e,swatch:e,swiss:e,sydney:e,systems:[1,{knightpoint:t}],tab:e,taipei:e,talk:e,taobao:e,target:e,tatamotors:e,tatar:e,tattoo:e,tax:e,taxi:e,tci:e,tdk:e,team:[1,{discourse:t,jelastic:t}],tech:[1,{cleverapps:t}],technology:m,temasek:e,tennis:e,teva:e,thd:e,theater:e,theatre:e,tiaa:e,tickets:e,tienda:e,tips:e,tires:e,tirol:e,tjmaxx:e,tjx:e,tkmaxx:e,tmall:e,today:[1,{prequalifyme:t}],tokyo:e,tools:[1,{addr:W,myaddr:t}],top:[1,{ntdll:t,wadl:s}],toray:e,toshiba:e,total:e,tours:e,town:e,toyota:e,toys:e,trade:e,trading:e,training:e,travel:e,travelers:e,travelersinsurance:e,trust:e,trv:e,tube:e,tui:e,tunes:e,tushu:e,tvs:e,ubank:e,ubs:e,unicom:e,university:e,uno:e,uol:e,ups:e,vacations:e,vana:e,vanguard:e,vegas:e,ventures:e,verisign:e,versicherung:e,vet:e,viajes:e,video:e,vig:e,viking:e,villas:e,vin:e,vip:e,virgin:e,visa:e,vision:e,viva:e,vivo:e,vlaanderen:e,vodka:e,volvo:e,vote:e,voting:e,voto:e,voyage:e,wales:e,walmart:e,walter:e,wang:e,wanggou:e,watch:e,watches:e,weather:e,weatherchannel:e,webcam:e,weber:e,website:Y,wed:e,wedding:e,weibo:e,weir:e,whoswho:e,wien:e,wiki:Y,williamhill:e,win:e,windows:e,wine:e,winners:e,wme:e,wolterskluwer:e,woodside:e,work:e,works:e,world:e,wow:e,wtc:e,wtf:e,xbox:e,xerox:e,xihuan:e,xin:e,"xn--11b4c3d":e,कॉम:e,"xn--1ck2e1b":e,セール:e,"xn--1qqw23a":e,佛山:e,"xn--30rr7y":e,慈善:e,"xn--3bst00m":e,集团:e,"xn--3ds443g":e,在线:e,"xn--3pxu8k":e,点看:e,"xn--42c2d9a":e,คอม:e,"xn--45q11c":e,八卦:e,"xn--4gbrim":e,موقع:e,"xn--55qw42g":e,公益:e,"xn--55qx5d":e,公司:e,"xn--5su34j936bgsg":e,香格里拉:e,"xn--5tzm5g":e,网站:e,"xn--6frz82g":e,移动:e,"xn--6qq986b3xl":e,我爱你:e,"xn--80adxhks":e,москва:e,"xn--80aqecdr1a":e,католик:e,"xn--80asehdb":e,онлайн:e,"xn--80aswg":e,сайт:e,"xn--8y0a063a":e,联通:e,"xn--9dbq2a":e,קום:e,"xn--9et52u":e,时尚:e,"xn--9krt00a":e,微博:e,"xn--b4w605ferd":e,淡马锡:e,"xn--bck1b9a5dre4c":e,ファッション:e,"xn--c1avg":e,орг:e,"xn--c2br7g":e,नेट:e,"xn--cck2b3b":e,ストア:e,"xn--cckwcxetd":e,アマゾン:e,"xn--cg4bki":e,삼성:e,"xn--czr694b":e,商标:e,"xn--czrs0t":e,商店:e,"xn--czru2d":e,商城:e,"xn--d1acj3b":e,дети:e,"xn--eckvdtc9d":e,ポイント:e,"xn--efvy88h":e,新闻:e,"xn--fct429k":e,家電:e,"xn--fhbei":e,كوم:e,"xn--fiq228c5hs":e,中文网:e,"xn--fiq64b":e,中信:e,"xn--fjq720a":e,娱乐:e,"xn--flw351e":e,谷歌:e,"xn--fzys8d69uvgm":e,電訊盈科:e,"xn--g2xx48c":e,购物:e,"xn--gckr3f0f":e,クラウド:e,"xn--gk3at1e":e,通販:e,"xn--hxt814e":e,网店:e,"xn--i1b6b1a6a2e":e,संगठन:e,"xn--imr513n":e,餐厅:e,"xn--io0a7i":e,网络:e,"xn--j1aef":e,ком:e,"xn--jlq480n2rg":e,亚马逊:e,"xn--jvr189m":e,食品:e,"xn--kcrx77d1x4a":e,飞利浦:e,"xn--kput3i":e,手机:e,"xn--mgba3a3ejt":e,ارامكو:e,"xn--mgba7c0bbn0a":e,العليان:e,"xn--mgbab2bd":e,بازار:e,"xn--mgbca7dzdo":e,ابوظبي:e,"xn--mgbi4ecexp":e,كاثوليك:e,"xn--mgbt3dhd":e,همراه:e,"xn--mk1bu44c":e,닷컴:e,"xn--mxtq1m":e,政府:e,"xn--ngbc5azd":e,شبكة:e,"xn--ngbe9e0a":e,بيتك:e,"xn--ngbrx":e,عرب:e,"xn--nqv7f":e,机构:e,"xn--nqv7fs00ema":e,组织机构:e,"xn--nyqy26a":e,健康:e,"xn--otu796d":e,招聘:e,"xn--p1acf":[1,{"xn--90amc":t,"xn--j1aef":t,"xn--j1ael8b":t,"xn--h1ahn":t,"xn--j1adp":t,"xn--c1avg":t,"xn--80aaa0cvac":t,"xn--h1aliz":t,"xn--90a1af":t,"xn--41a":t}],рус:[1,{биз:t,ком:t,крым:t,мир:t,мск:t,орг:t,самара:t,сочи:t,спб:t,я:t}],"xn--pssy2u":e,大拿:e,"xn--q9jyb4c":e,みんな:e,"xn--qcka1pmc":e,グーグル:e,"xn--rhqv96g":e,世界:e,"xn--rovu88b":e,書籍:e,"xn--ses554g":e,网址:e,"xn--t60b56a":e,닷넷:e,"xn--tckwe":e,コム:e,"xn--tiq49xqyj":e,天主教:e,"xn--unup4y":e,游戏:e,"xn--vermgensberater-ctb":e,vermögensberater:e,"xn--vermgensberatung-pwb":e,vermögensberatung:e,"xn--vhquv":e,企业:e,"xn--vuq861b":e,信息:e,"xn--w4r85el8fhu5dnra":e,嘉里大酒店:e,"xn--w4rs40l":e,嘉里:e,"xn--xhq521b":e,广东:e,"xn--zfr164b":e,政务:e,xyz:[1,{botdash:t,telebit:s}],yachts:e,yahoo:e,yamaxun:e,yandex:e,yodobashi:e,yoga:e,yokohama:e,you:e,youtube:e,yun:e,zappos:e,zara:e,zero:e,zip:e,zone:[1,{cloud66:t,triton:s,stackit:t,lima:t}],zuerich:e}]}();function h(e,t,n,a){let s=null,r=t;for(;void 0!==r&&(r[0]&a&&(s={index:n+1,isIcann:1===r[0],isPrivate:2===r[0]}),-1!==n);){const t=r[1];r=Object.prototype.hasOwnProperty.call(t,e[n])?t[e[n]]:t["*"],n-=1}return s}function d(e,t,n){var a;if(function(e,t,n){if(!t.allowPrivateDomains&&e.length>3){const t=e.length-1,a=e.charCodeAt(t),s=e.charCodeAt(t-1),r=e.charCodeAt(t-2),i=e.charCodeAt(t-3);if(109===a&&111===s&&99===r&&46===i)return n.isIcann=!0,n.isPrivate=!1,n.publicSuffix="com",!0;if(103===a&&114===s&&111===r&&46===i)return n.isIcann=!0,n.isPrivate=!1,n.publicSuffix="org",!0;if(117===a&&100===s&&101===r&&46===i)return n.isIcann=!0,n.isPrivate=!1,n.publicSuffix="edu",!0;if(118===a&&111===s&&103===r&&46===i)return n.isIcann=!0,n.isPrivate=!1,n.publicSuffix="gov",!0;if(116===a&&101===s&&110===r&&46===i)return n.isIcann=!0,n.isPrivate=!1,n.publicSuffix="net",!0;if(101===a&&100===s&&46===r)return n.isIcann=!0,n.isPrivate=!1,n.publicSuffix="de",!0}return!1}(e,t,n))return;const s=e.split("."),r=(t.allowPrivateDomains?2:0)|(t.allowIcannDomains?1:0),i=h(s,u,s.length-1,r);if(null!==i)return n.isIcann=i.isIcann,n.isPrivate=i.isPrivate,void(n.publicSuffix=s.slice(i.index+1).join("."));const o=h(s,c,s.length-1,r);if(null!==o)return n.isIcann=o.isIcann,n.isPrivate=o.isPrivate,void(n.publicSuffix=s.slice(o.index).join("."));n.isIcann=!1,n.isPrivate=!1,n.publicSuffix=null!==(a=s[s.length-1])&&void 0!==a?a:null}class p{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class f{refCount(e){return m("refCount")}incRef(e){return m("incRef")}timerAvailable(){return!0}time(e){return m("time")}read(e){return m("read")}readSync(e){return m("readSync")}readToGPU(e,t){return m("readToGPU")}numDataIds(){return m("numDataIds")}disposeData(e,t){return m("disposeData")}write(e,t,n){return m("write")}move(e,t,n,a,s){return m("move")}createTensorFromGPUData(e,t,n){return m("createTensorFromGPUData")}memory(){return m("memory")}floatPrecision(){return m("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return m("dispose")}}function m(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function g(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,x(e,t,n)}function b(e,t,n){return Math.max(e,Math.min(t,n))}function y(e){return e%2==0?e:e+1}function x(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function k(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function w(e,t,n=""){k(S(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function v(e){k(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function I(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function S(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function C(e){return e%1==0}function $(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function N(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function T(e,t=e=>0,n,a){return new Promise(((s,r)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?r():null!=a?a(o,l):setTimeout(o,l)};o()}))}function E(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[a]=t/n,s}function R(e,t){const n=t.length;return k((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),k(e.every((e=>C(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function A(e,t){const n=[],a=[],s=null!=t&&Array.isArray(t)&&0===t.length,r=null==t||s?null:R(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=r){if(r[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==r[i]||r[i]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),r[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function F(e,t){return D(e,t)}function D(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function _(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function z(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function O(e){return"string"==typeof e||e instanceof String}function L(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":L(e)?"float32":O(e)?"string":"boolean"==typeof e?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function U(e,t,n,a=!1){const s=new Array;if(1===t.length){const r=t[0]*(a?2:1);for(let t=0;t<r;t++)s[t]=n[e+t]}else{const r=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<r;t++)s[t]=U(e+t*o,i,n,a)}return s}function V(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return U(0,e,t,n)}function j(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{k(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function Y(e){return e&&e.then&&"function"==typeof e.then}const J="tfjsflags";class Z{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Q,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ee().getBool("IS_TEST")||ee().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ee().getBool("IS_TEST")||ee().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Y(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);J in e&&e[J].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function Q(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function ee(){return ne}let te,ne=null;function ae(){if(null==te){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}te=e}return te}function se(e,t){const n=function(){const e=ae();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const re="Abs",ie="Acos",oe="Acosh",le="Add",ue="AddN",ce="All",he="Any",de="ArgMax",pe="ArgMin",fe="Asin",me="Asinh",ge="Atan",be="Atanh",ye="Atan2",xe="AvgPool",ke="AvgPoolGrad",we="AvgPool3D",ve="AvgPool3DGrad",Ie="BatchMatMul",Se="BatchToSpaceND",Ce="Bincount",$e="BitwiseAnd",Ne="BroadcastArgs",Te="Cast",Ee="Ceil",Re="ClipByValue",Ae="Complex",Fe="ComplexAbs",De="Concat",_e="Conv2D",ze="Conv2DBackpropFilter",Oe="Conv2DBackpropInput",Le="Conv3D",Me="Conv3DBackpropFilterV2",Pe="Conv3DBackpropInputV2",Be="Cos",We="Cosh",Ue="Cumprod",Ve="Cumsum",je="CropAndResize",Ge="DenseBincount",He="DepthToSpace",qe="DepthwiseConv2dNative",Ke="DepthwiseConv2dNativeBackpropFilter",Xe="DepthwiseConv2dNativeBackpropInput",Ye="Diag",Je="Dilation2D",Ze="Dilation2DBackpropInput",Qe="Dilation2DBackpropFilter",et="RealDiv",tt="Einsum",nt="Elu",at="EluGrad",st="Erf",rt="Equal",it="Exp",ot="ExpandDims",lt="Expm1",ut="FFT",ct="Fill",ht="FlipLeftRight",dt="Floor",pt="FloorDiv",ft="FusedBatchNorm",mt="GatherV2",gt="GatherNd",bt="Greater",yt="GreaterEqual",xt="Identity",kt="IFFT",wt="Imag",vt="IsFinite",It="IsInf",St="IsNan",Ct="LeakyRelu",$t="Less",Nt="LessEqual",Tt="LinSpace",Et="Log",Rt="Log1p",At="LogicalAnd",Ft="LogicalNot",Dt="LogicalOr",_t="LRN",zt="LRNGrad",Ot="Max",Lt="Maximum",Mt="MaxPool",Pt="MaxPoolGrad",Bt="MaxPool3D",Wt="MaxPool3DGrad",Ut="MaxPoolWithArgmax",Vt="Mean",jt="Min",Gt="Minimum",Ht="MirrorPad",qt="Mod",Kt="Multinomial",Xt="Multiply",Yt="Neg",Jt="NotEqual",Zt="NonMaxSuppressionV3",Qt="NonMaxSuppressionV4",en="NonMaxSuppressionV5",tn="OnesLike",nn="OneHot",an="Pack",sn="PadV2",rn="Pow",on="Prelu",ln="Prod",un="RaggedGather",cn="RaggedRange",hn="RaggedTensorToTensor",dn="Range",pn="Real",fn="Reciprocal",mn="Relu",gn="Reshape",bn="ResizeNearestNeighbor",yn="ResizeNearestNeighborGrad",xn="ResizeBilinear",kn="ResizeBilinearGrad",wn="Relu6",vn="Reverse",In="Round",Sn="Rsqrt",Cn="ScatterNd",$n="TensorScatterUpdate",Nn="SearchSorted",Tn="Select",En="Selu",Rn="Slice",An="Sin",Fn="Sinh",Dn="Sign",_n="Sigmoid",zn="Softplus",On="Sqrt",Ln="Sum",Mn="SpaceToBatchND",Pn="SplitV",Bn="Softmax",Wn="SparseFillEmptyRows",Un="SparseReshape",Vn="SparseSegmentMean",jn="SparseSegmentSum",Gn="SparseToDense",Hn="SquaredDifference",qn="Square",Kn="StaticRegexReplace",Xn="StridedSlice",Yn="StringNGrams",Jn="StringSplit",Zn="StringToHashBucketFast",Qn="Sub",ea="Tan",ta="Tanh",na="Tile",aa="TopK",sa="Transform",ra="Transpose",ia="Unique",oa="Unpack",la="UnsortedSegmentSum",ua="ZerosLike",ca="Step",ha="RotateWithOffset",da="_FusedMatMul",pa="FusedConv2D",fa="FusedDepthwiseConv2D";function ma(...e){ee().getBool("IS_TEST")||ee().getBool("PROD")||console.warn(...e)}function ga(...e){ee().getBool("IS_TEST")||ee().getBool("PROD")||console.log(...e)}const ba=se("kernelRegistry",(()=>new Map)),ya=se("gradRegistry",(()=>new Map));function xa(e,t){const n=Sa(e,t);return ba.get(n)}function ka(e){return ya.get(e)}function wa(e){const t=ba.entries(),n=[];for(;;){const{done:a,value:s}=t.next();if(a)break;const[r,i]=s,[o]=r.split("_");o===e&&n.push(i)}return n}function va(e){const{kernelName:t,backendName:n}=e,a=Sa(t,n);ba.has(a)&&ma(`The kernel '${t}' for backend '${n}' is already registered`),ba.set(a,e)}function Ia(e){const{kernelName:t}=e;ya.has(t)&&ee().getBool("DEBUG")&&ma(`Overriding the gradient for '${t}'`),ya.set(t,e)}function Sa(e,t){return`${t}_${e}`}function Ca(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var $a=n(219);const Na=n.n($a)()||$a;function Ta(e){return Na.fromString(e,!0,16)}const Ea=Ta("c3a5c85c97cb3127"),Ra=Ta("b492b66fbe98f273"),Aa=Ta("9ae16a3b2f90404f");function Fa(e){return e.xor(e.shru(47))}function Da(e,t,n){const a=e.slice(t,t+n);return Na.fromBytes(Array.from(a),!0,!0)}function _a(e,t){return Da(e,t,8)}function za(e,t){return Da(e,t,4)}function Oa(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function La(e,t,n=Ta("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let s=t.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Ma(e,t,n,a){return function(e,t,n,a,s,r){s=s.add(e),r=Oa(r.add(s).add(a),21);const i=s;return s=(s=s.add(t)).add(n),r=r.add(Oa(s,44)),[s.add(a),r.add(i)]}(_a(e,t),_a(e,t+8),_a(e,t+16),_a(e,t+24),n,a)}function Pa(e,t=e.length){const n=Na.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Aa.add(2*t),a=_a(e,0).add(Aa),s=_a(e,t-8);return La(Oa(s,37).mul(n).add(a),Oa(a,25).add(s).mul(n),n)}if(t>=4){const n=Aa.add(2*t);return La(za(e,0).shl(3).add(t),za(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Fa(Aa.mul(n).xor(Ea.mul(a))).mul(Aa)}return Aa}(e,t):function(e,t=e.length){const n=Aa.add(2*t),a=_a(e,0).mul(Ra),s=_a(e,8),r=_a(e,t-8).mul(n),i=_a(e,t-16).mul(Aa);return La(Oa(a.add(s),43).add(Oa(r,30)).add(i),a.add(Oa(s.add(Aa),18)).add(r),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Aa.add(2*t),a=_a(e,0).mul(Aa),s=_a(e,8),r=_a(e,t-8).mul(n),i=_a(e,t-16).mul(Aa),o=Oa(a.add(s),43).add(Oa(r,30)).add(i),l=La(o,a.add(Oa(s.add(Aa),18)).add(r),n),u=_a(e,16).mul(n),c=_a(e,24),h=o.add(_a(e,t-32)).mul(n),d=l.add(_a(e,t-24)).mul(n);return La(Oa(u.add(c),43).add(Oa(h,30)).add(d),u.add(Oa(c.add(a),18)).add(h),n)}(e,t);let a=n,s=n.mul(Ra).add(113),r=Fa(s.mul(Aa).add(113)).mul(Aa),i=[Na.UZERO,Na.UZERO],o=[Na.UZERO,Na.UZERO];a=a.mul(Aa).add(_a(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{a=Oa(a.add(s).add(i[0]).add(_a(e,l+8)),37).mul(Ra),s=Oa(s.add(i[1]).add(_a(e,l+48)),42).mul(Ra),a=a.xor(o[1]),s=s.add(i[0]).add(_a(e,l+40)),r=Oa(r.add(o[0]),33).mul(Ra),i=Ma(e,l,i[1].mul(Ra),a.add(o[0])),o=Ma(e,l+32,r.add(o[1]),s.add(_a(e,l+16))),[r,a]=[a,r],l+=64}while(l!==u);const h=Ra.add(r.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=Oa(a.add(s).add(i[0]).add(_a(e,l+8)),37).mul(h),s=Oa(s.add(i[1]).add(_a(e,l+48)),42).mul(h),a=a.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(_a(e,l+40))),r=Oa(r.add(o[0]),33).mul(h),i=Ma(e,l,i[1].mul(h),a.add(o[0])),o=Ma(e,l+32,r.add(o[1]),s.add(_a(e,l+16))),[r,a]=[a,r],La(La(i[0],o[0],h).add(Fa(s).mul(Ea)).add(r),La(i[1],o[1],h).add(a),h)}function Ba(e,t){return"string"===t?Va(e):Wa([e],t)}function Wa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ha(e)),ee().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ua(){return ee().platform.now()}function Va(e,t="utf-8"){return t=t||"utf-8",ee().platform.encode(e,t)}function ja(e,t="utf-8"){return t=t||"utf-8",ee().platform.decode(e,t)}function Ga(e){return null!=ee().platform.isTypedArray?ee().platform.isTypedArray(e):Ca(e)}function Ha(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Y(e)||null==e||Ga(e)&&n)t.push(e);else if(Array.isArray(e)||Ga(e))for(let a=0;a<e.length;++a)Ha(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let s=0;s<=a;s++)Ha(e[s],t,n)}return t}class qa{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Xa)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let r;const i=Ua();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();r=Promise.resolve({kernelMs:Ua()-i})}if(ee().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then((t=>{Ka(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:s,extraInfo:r}=e;n.forEach((e=>{Promise.all([e.data(),a,r]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Ka(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class Xa{logKernelProfile(e,t,n,a,s,r){const i="number"==typeof a?N(`${a}ms`,9):a.error,o=N(e,25),l=t.rank,u=t.size,c=N(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const a=n.shape||t.shape,s=a.length;h+=`${e}: ${s}D ${s>0?a:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ya(e,t,n,a){const s=W(t),r=function(e,t,n,a){const s=I(t),r=a[a.length-1],i=new Array(r).fill(0),o=t.length,l="complex64"===n?es(e):e;if(o>1)for(let e=0;e<s/r;e++){const t=e*r;for(let e=0;e<r;e++)i[e]=Math.max(i[e],Ja(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Qa(e,t,n,s,r),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ja(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:O(e)?`'${e}'`:"bool"===n?Za(e):parseFloat(e.toFixed(7)).toString(),N(a,t)}function Za(e){return 0===e?"false":"true"}function Qa(e,t,n,a,s,r=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ja(es(e)[0],0,n)]:"bool"===n?[Za(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let a=Array.from(e.slice(0,t)),r=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(a=es(a),r=es(r)),["["+a.map(((e,t)=>Ja(e,s[t],n))).join(", ")+", ..., "+r.map(((e,t)=>Ja(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?es(e):Array.from(e)).map(((e,t)=>Ja(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=a.slice(1),h=a[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const a=t*h,r=a+h;d.push(...Qa(e.slice(a,r),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const a=t*h,r=a+h;d.push(...Qa(e.slice(a,r),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const a=t*h,r=a+h;d.push(...Qa(e.slice(a,r),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":f),d}function es(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ts{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=I(e),null!=n){const e=n.length;k(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||D(t,this.size),this.strides=W(e)}set(e,...t){0===t.length&&(t=[0]),k(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ns().makeTensor(this.values,this.shape,this.dtype)}}let ns=null,as=null,ss=null;class rs{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=I(e),this.strides=W(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return as.buffer(this.shape,this.dtype,e)}bufferSync(){return as.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return V(this.shape,e,"complex64"===this.dtype)}arraySync(){return V(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ns().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ja(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ns().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ns().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ja(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ns().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ns().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return as.print(this,e)}clone(){return this.throwIfDisposed(),as.clone(this)}toString(e=!1){return Ya(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),as.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ns().makeVariable(this,e,t,n)}}function is(){return se("Tensor",(()=>rs))}Object.defineProperty(rs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),is();class os extends rs{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!S(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ns().disposeTensor(this),this.dataId=e.dataId,ns().incRef(this,null)}dispose(){ns().disposeVariable(this),this.isDisposedInternal=!0}}var ls,us,cs,hs,ds;Object.defineProperty(os,Symbol.hasInstance,{value:e=>e instanceof rs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ls||(ls={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(us||(us={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(cs||(cs={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(hs||(hs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ds||(ds={}));const ps={float32:hs,int32:us,bool:cs,complex64:ds};function fs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ps[e][t]}function ms(e){return fs(e,"int32")}function gs(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function bs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ys(e,t){if(e.dtype===t.dtype)return[e,t];const n=fs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function xs(e,t){return t.some((t=>t.id===e.id))}function ks(e){const t=[];return ws(e,t,new Set),t}function ws(e,t,n){if(null==e)return;if(e instanceof rs)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const a=s[e];n.has(a)||(n.add(a),ws(a,t,n))}}function vs(e){return null!=e.kernelName}class Is{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ss{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Is}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ma(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new qa(this.backendInstance),!0}setupRegisteredKernels(){wa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){wa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof f||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ma(`Initialization of backend ${e} failed`),ma(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return ma(`Initialization of backend ${e} failed`),ma(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:s}=this.initializeBackend(n);if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,s=this.readSync(t),r=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ss.nextTensorId++}nextVariableId(){return Ss.nextVariableId++}clone(e){const t=$s.runKernel(xt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return $s.runKernel(Te,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==xa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-s-r;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),s=this.state.numBytes,r=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=vs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(vs(e)){const{kernelName:t,inputs:s,attrs:r}=e;null==this.backendName&&this.backend;const l=xa(t,this.backendName);k(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:r,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=vs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),a&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=ka(e);if(null!=a){const e=a.inputsToSave||[],s=a.outputsToSave||[];let r;a.saveAllInputs?(k(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(t).map((e=>t[e]))):r=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return r.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let s=e;"string"===n&&O(e[0])&&(s=e.map((e=>Va(e))));const r=a.write(s,t,n),i=new rs(t,n,r,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){const e=this.state.tensorInfo.get(r),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:s}=e,r=new rs(a,s,n,this.nextTensorId());return this.trackTensor(r,t),r}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const s=new os(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*z(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof os||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*z(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,s,r){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=ka(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=G(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],s,r))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ks(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n,a=!1){if(k(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));k(s instanceof rs,(()=>"The result y returned by f() must be a tensor."));const r=function(e,t,n){const a={},s={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){const r=e[n],i=r.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){r.outputs.forEach((e=>a[e.id]=!0)),o=!0,s[r.id]=!0;break}if(o)break}}const r={};r[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(r[n.outputs[e].id]){for(const e in a)r[a[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];a[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!a&&0===r.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=j(I(e),"float32");return $s.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,a){for(let s=t.length-1;s>=0;s--){const r=t[s],i=[];if(r.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==r.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(i);for(const t in r.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=r.inputs[t];if(!S(s.shape,i.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=a(t,s),t.dispose()}}}}(e,r,(e=>this.tidy(e)),Ns);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:a}}))}customGrad(e){return k(P(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;k(t.every((e=>e instanceof rs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,s)=>(n=e(...t,s),k(n.value instanceof rs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),k(P(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{const s=n.gradFunc(e,a),r=Array.isArray(s)?s:[s];k(r.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),k(r.every((e=>e instanceof rs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return r.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ua(),n=await this.backend.time(e);return n.wallMs=Ua()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Is;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Cs(){const e=ae();if(null==e._tfengine){const t=new Z(e);e._tfengine=new Ss(t)}var t;return t=e._tfengine.ENV,ne=t,ns=()=>e._tfengine,e._tfengine}Ss.nextTensorId=0,Ss.nextVariableId=0;const $s=Cs();function Ns(e,t){const n={a:e,b:t};return $s.runKernel(le,n)}function Ts(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Es(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Rs=ee();function As(e,t){let n=e;if(Ga(e))return"string"===t?[]:[e.length];if(gs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(bs(e))return[e.buffer.size/(null==t?4:z(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||Ga(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&ee().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Fs(e,a,[]),a}function Fs(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ga(e))return void k(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));k(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),k(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let t=0;t<e.length;++t)Fs(e[t],a,n.concat(t))}function Ds(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function _s(e,t,n,a="numeric"){if(e instanceof is())return Ds(a,e.dtype,t,n),e;let s=M(e);if("string"!==s&&["bool","int32","float32"].indexOf(a)>=0&&(s=a),Ds(a,s,t,n),null==e||!Ga(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const r=As(e,s);Ga(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Wa(e,s):Ha(e,[],!0);return $s.makeTensor(i,r,s)}function zs(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>_s(e,`${t}[${s}]`,n,a)))}function Os(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{$s.startScope(n);try{const t=a(...e);return Y(t)&&console.error("Cannot return a Promise inside of tidy."),$s.endScope(t),t}catch(e){throw $s.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Rs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Rs.registerFlag("IS_BROWSER",(()=>Es())),Rs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Rs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Rs.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Rs.registerFlag("PROD",(()=>!1)),Rs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Rs.registerFlag("IS_TEST",(()=>!1)),Rs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Rs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Rs.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Ls=Os({complex_:function(e,t){const n=_s(e,"real","complex"),a=_s(t,"imag","complex");w(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const s={real:n,imag:a};return $s.runKernel(Ae,s)}});function Ms(e,t,n,a){if(null==a)a=M(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(bs(e)||gs(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return $s.backend.createTensorFromGPUData(e,t||n,a)}if(!Ga(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){q(t);const e=I(t),a=I(n);k(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){const a=n[e],s=e!==n.length-1||a!==I(t.slice(e));k(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Ga(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Wa(e,a):Ha(e,[],!0),$s.makeTensor(e,t,a)}function Ps(e,t,n){return Ms(e,t,As(e,n),n)}const Bs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ws{static join(e){return new Ws(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Ga(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+a.byteLength;this.shards.push({buffer:a,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const a=new ArrayBuffer(t-e),s=new Uint8Array(a);let r=0;for(let a=n;a<this.shards.length;a++){const n=this.shards[a],i=e+r-n.start,o=r,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(s.set(u,o),r+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const s=Math.floor((a-n)/2)+n,r=t(e[s]);if(0===r)return s;r<0?a=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Us(){return $s}function Vs(){return $s.memory()}function js(e,t){return $s.tidy(e,t)}function Gs(e){ks(e).forEach((e=>e.dispose()))}function Hs(e){return $s.keep(e)}function qs(e,t,n=1){return $s.registerBackend(e,t,n)}async function Ks(e,t){const n=[],a=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let r=0;r<s.length;++r){const i=s[r],o=Array.isArray(e)?e[r].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],r=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(r,s),s+=4,a.set(n,s),s+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Js(await Promise.all(a)),specs:n}}function Xs(e,t){const n=I(e.shape);let a;if("quantization"in e){const t=e.quantization;a=Bs[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=4+new Uint32Array(t(e,e+4))[0];return e}a=Bs[e.dtype]}return n*a}function Ys(e,t){const n=e.name,a=e.dtype,s=e.shape,r=I(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${a}.`)}const l=Bs[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const s=new ArrayBuffer(4*a.length),r=new Uint32Array(s);for(let s=0;s<a.length;s++){const i=a[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];r[s]=o}return new Float32Array(s)}}();i=e(u)}}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${n}': ${a}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*s.scale+s.min)}}o+=r*l}else if("string"===a){const n=I(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+4))[0];o+=4;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=Bs[a];if("float32"===a)i=new Float32Array(t);else if("int32"===a)i=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const a=Ps(e,s,"float32"),r=Ps(n,s,"float32"),o=Ls(a,r);return a.dispose(),r.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${a}`)}i=new Uint8Array(t)}o+=r*e}return Ps(i,s,a)}function Js(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let s=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),a.buffer}ss=function(e){ee().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Zs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Qs(e){return Zs?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function er(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function tr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Qs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Qs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ws(e.weightData).byteLength}}function nr(e){const t=[];for(const n of e)t.push(...n.weights);return t}class ar{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ar.instance&&(ar.instance=new ar),ar.instance}static registerSaveRouter(e){ar.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ar.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ar.getHandlers(e,"save")}static getLoadHandlers(e,t){return ar.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?ar.getInstance().loadRouters:ar.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&a.push(s)})),a}}const sr="tensorflowjs",rr="models_store",ir="model_info_store";function or(){if(!ee().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function lr(e){const t=e.result;t.createObjectStore(rr,{keyPath:"modelPath"}),t.createObjectStore(ir,{keyPath:"modelPath"})}class ur{constructor(e){if(this.indexedDB=or(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(sr,1);a.onupgradeneeded=()=>lr(a),a.onsuccess=()=>{const s=a.result;if(null==t){const t=s.transaction(rr,"readonly"),a=t.objectStore(rr).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(s.close(),n(a.error)),t.oncomplete=()=>s.close()}else{t.weightData=Ws.join(t.weightData);const a=tr(t),r=s.transaction(ir,"readwrite");let i,o,l=r.objectStore(ir);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(rr,"readwrite");const i=o.objectStore(rr);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=r.objectStore(ir);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},i.onerror=e=>(s.close(),n(i.error)),r.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},a.onerror=e=>n(a.error)}))}}ur.URL_SCHEME="indexeddb://";const cr=e=>{return ee().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ur.URL_SCHEME)?(t=e.slice(ur.URL_SCHEME.length),new ur(t)):null;var t};ar.registerSaveRouter(cr),ar.registerLoadRouter(cr);class hr{constructor(){this.indexedDB=or()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(sr,1);n.onupgradeneeded=()=>lr(n),n.onsuccess=()=>{const a=n.result,s=a.transaction(ir,"readonly"),r=s.objectStore(ir).getAll();r.onsuccess=()=>{const t={};for(const e of r.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},r.onerror=e=>(a.close(),t(r.error)),s.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ur.URL_SCHEME)?t.slice(ur.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(sr,1);a.onupgradeneeded=()=>lr(a),a.onsuccess=()=>{const s=a.result,r=s.transaction(ir,"readwrite"),i=r.objectStore(ir),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=i.delete(e),r=()=>{l=s.transaction(rr,"readwrite");const a=l.objectStore(rr).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=r,a.onerror=e=>(r(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),r.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},a.onerror=e=>n(a.error)}))}}const dr="/",pr="tensorflowjs_models",fr="info",mr="model_topology",gr="weight_specs",br="weight_data",yr="model_metadata";function xr(e){return{info:[pr,e,fr].join(dr),topology:[pr,e,mr].join(dr),weightSpecs:[pr,e,gr].join(dr),weightData:[pr,e,br].join(dr),modelMetadata:[pr,e,yr].join(dr)}}function kr(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function wr(e){const t=e.split(dr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(dr)}class vr{constructor(e){if(!ee().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=xr(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=tr(e),s=Ws.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Zs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(e){throw kr(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Zs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(r),t}}vr.URL_SCHEME="localstorage://";const Ir=e=>{return ee().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vr.URL_SCHEME)?(t=e.slice(vr.URL_SCHEME.length),new vr(t)):null;var t};ar.registerSaveRouter(Ir),ar.registerLoadRouter(Ir);class Sr{constructor(){k(ee().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),k("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=pr+dr,n=dr+fr;for(let a=0;a<this.LS.length;++a){const s=this.LS.key(a);s.startsWith(t)&&s.endsWith(n)&&(e[wr(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=xr(e=(t=e).startsWith(vr.URL_SCHEME)?t.slice(vr.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return kr(n),a}}class Cr{constructor(){this.managers={}}static getInstance(){return null==Cr.instance&&(Cr.instance=new Cr),Cr.instance}static registerManager(e,t){k(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),k(e.length>0,(()=>"scheme must not be an empty string."));const n=Cr.getInstance();k(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Cr.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Cr.getInstance().managers)}}class $r{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&ee().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return Ca(e)}}if(ee().get("IS_BROWSER")){ee().setPlatform("browser",new $r);try{Cr.registerManager(vr.URL_SCHEME,new Sr)}catch(e){}try{Cr.registerManager(ur.URL_SCHEME,new hr)}catch(e){}}let Nr;function Tr(e,t="float32",n){return t=t||"float32",q(e),new ts(e,t,n)}ee().get("IS_NODE")&&!ee().get("IS_BROWSER")&&ee().setPlatform("node",new class{constructor(){this.util=n(389),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ee().global.fetch?ee().global.fetch(e,t):(null==Nr&&(Nr=n(378)),Nr(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const Er=Os({cast_:function(e,t){const n=_s(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},s={dtype:t};return $s.runKernel(Te,a,s)}}),Rr=Os({clone_:function(e){const t={x:_s(e,"x","clone","string_or_numeric")};return $s.runKernel(xt,t)}});Cs(),as={buffer:Tr,cast:Er,clone:Rr,print:function(e,t=!1){console.log(e.toString(t))}};const Ar=Os({add_:function(e,t){let n=_s(e,"a","add"),a=_s(t,"b","add");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(le,s)}}),Fr=Os({floorDiv_:function(e,t){let n=_s(e,"a","floorDiv"),a=_s(t,"b","floorDiv");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(pt,s)}}),Dr=Os({div_:function(e,t){let n=_s(e,"a","div"),a=_s(t,"b","div");if([n,a]=ys(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Fr(n,a);const s={a:n,b:a};return $s.runKernel(et,s,{})}}),_r=Os({mul_:function(e,t){let n=_s(e,"a","mul"),a=_s(t,"b","mul");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(Xt,s)}}),zr=Os({sqrt_:function(e){const t={x:_s(e,"x","sqrt","float32")};return $s.runKernel(On,t)}}),Or=Os({square_:function(e){const t=_s(e,"x","square");return $s.runKernel("Square",{x:t},{})}}),Lr=Os({zerosLike_:function(e){const t={x:_s(e,"x","zerosLike")};return $s.runKernel(ua,t)}});function Mr(e){return $s.customGrad(e)}function Pr(e,t){if((Ga(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ga(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ms(e,[],[],t)}const Br=new Map,Wr=new Map;class Ur{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Vr{constructor(){this.classNameMap={}}static getMap(){return null==Vr.instance&&(Vr.instance=new Vr),Vr.instance}static register(e){Vr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function jr(e,t,n){k(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),k("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),k(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const a=t+">"+n;return Vr.register(e),Br.set(a,e),Wr.set(e,a),e}class Gr extends Ur{minimize(e,t=!1,n){const{value:a,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Gs(s),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){k(P(e),(()=>"The f passed in variableGrads(f) must be a function")),k(null==t||Array.isArray(t)&&t.every((e=>e instanceof os)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in $s.registeredVariables)t.push($s.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,s=t.length;k((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:r,grads:i}=$s.gradients(e,t,null,!0);k(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),k(0===r.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${r.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:r,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Gs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Pr(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Gr,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Hr extends Gr{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=$s.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=$s.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:js((()=>Lr(a).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:js((()=>Lr(a).variable(s)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;js((()=>{const e=Ar(_r(i,this.rho),_r(Or(r),1-this.rho)),t=_r(Dr(zr(Ar(o,this.epsilon)),zr(Ar(i,this.epsilon))),r),n=Ar(_r(o,this.rho),_r(Or(t),1-this.rho));i.assign(e),o.assign(n);const s=Ar(_r(t,-this.learningRate),a);a.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Gs(this.accumulatedGrads.map((e=>e.variable))),Gs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function qr(e,t,n){q(e);const a={shape:e,value:t,dtype:n=n||M(t)};return $s.runKernel(ct,{},a)}class Kr extends Gr{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=$s.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:js((()=>qr(a.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=this.accumulatedGrads[n].variable;js((()=>{const e=Ar(r,Or(s));r.assign(e);const t=Ar(_r(Dr(s,zr(Ar(e,$s.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Gs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Xr=Os({pow_:function(e,t){let n=_s(e,"base","pow"),a=_s(t,"exp","pow");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(rn,s)}}),Yr=Os({sub_:function(e,t){let n=_s(e,"a","sub"),a=_s(t,"b","sub");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(Qn,s)}});class Jr extends Gr{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],js((()=>{this.accBeta1=Pr(t).variable(),this.accBeta2=Pr(n).variable()})),null==a&&(this.epsilon=$s.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);js((()=>{const n=Yr(1,this.accBeta1),a=Yr(1,this.accBeta2);t.forEach(((t,s)=>{const r=$s.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:js((()=>Lr(r).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:js((()=>Lr(r).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=Ar(_r(l,this.beta1),_r(o,1-this.beta1)),h=Ar(_r(u,this.beta2),_r(Or(o),1-this.beta2)),d=Dr(c,n),p=Dr(h,a);l.assign(c),u.assign(h);const f=Ar(_r(Dr(d,Ar(zr(p),this.epsilon)),-this.learningRate),r);r.assign(f)})),this.accBeta1.assign(_r(this.accBeta1,this.beta1)),this.accBeta2.assign(_r(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Gs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Gs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),js((()=>{this.accBeta1.assign(Xr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Xr(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Zr=Os({abs_:function(e){const t=_s(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return $s.runKernel(Fe,e)}{const e={x:t};return $s.runKernel(re,e)}}});function Qr(e,t){const n=e.length,a=[];for(let s=0;s<n;s++){const r=n-1-s,i=e[r]||1;(t[t.length-1-s]||1)>1&&1===i&&a.unshift(r)}return a}function ei(e,t){const n=[];for(let a=0;a<t.length;a++){const s=e[e.length-a-1],r=t.length-a-1,i=t[r];(null==s||1===s&&i>1)&&n.unshift(r)}return n}function ti(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let s=0;s<n;s++){let r=e[e.length-s-1];null==r&&(r=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===r)a[n-s-1]=i;else if(1===i)a[n-s-1]=r;else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);a[n-s-1]=r}}return a}const ni=Os({maximum_:function(e,t){let n=_s(e,"a","maximum"),a=_s(t,"b","maximum");[n,a]=ys(n,a),"bool"===n.dtype&&(n=Er(n,"int32"),a=Er(a,"int32")),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(Lt,s)}});class ai extends Gr{static get className(){return"Adamax"}constructor(e,t,n,a=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],js((()=>{this.iteration=Pr(0).variable(),this.accBeta1=Pr(t).variable()})),null==a&&(this.epsilon=$s.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);js((()=>{const n=Yr(1,this.accBeta1),a=Dr(-this.learningRate,Ar(_r(this.iteration,this.decay),1));t.forEach(((t,s)=>{const r=$s.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Lr(r).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Lr(r).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=Ar(_r(l,this.beta1),_r(o,1-this.beta1)),h=_r(u,this.beta2),d=Zr(o),p=ni(h,d);l.assign(c),u.assign(p);const f=Ar(_r(Dr(a,n),Dr(c,Ar(p,this.epsilon))),r);r.assign(f)})),this.iteration.assign(Ar(this.iteration,1)),this.accBeta1.assign(_r(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Gs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Gs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class si extends Gr{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=$s.registeredVariables[t];js((()=>{const e=Ar(_r(this.c,a),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Hs(Pr(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ri extends si{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Pr(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=$s.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:js((()=>Lr(a).variable(e)))}}const s=this.accumulations[n].variable,r=Array.isArray(e)?e[n].tensor:e[t];null!=r&&js((()=>{let e;const t=Ar(_r(this.m,s),r);e=this.useNesterov?Ar(_r(this.c,Ar(r,_r(t,this.m))),a):Ar(_r(this.c,t),a),s.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Gs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ii extends Gr{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,a=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=$s.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=$s.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:js((()=>Lr(a).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:js((()=>Lr(a).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:js((()=>Lr(a).variable(s)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;js((()=>{const e=Ar(_r(i,this.decay),_r(Or(r),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Ar(_r(t,this.decay),_r(r,1-this.decay)),l=Dr(_r(r,this.learningRate),zr(Yr(e,Ar(Or(s),this.epsilon)))),u=Ar(_r(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=Yr(a,u);a.assign(c)}else{const e=Ar(_r(i,this.decay),_r(Or(r),1-this.decay)),t=Ar(_r(o,this.momentum),Dr(_r(r,this.learningRate),zr(Ar(e,this.epsilon))));i.assign(e),o.assign(t);const n=Yr(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Gs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Gs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Gs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const oi=[Hr,Kr,Jr,ai,ri,ii,si];function li(e){return new Promise((e=>setTimeout(e))).then(e)}class ui{constructor(e){if(!ee().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ui.URL_SCHEME)&&(e=e.slice(ui.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ws.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=er(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await li((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await li((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:tr(e)}}}}function ci(e,t,n,a){!function(e){k(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){k(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),k(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),k(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(e.map((r=>(r.then((r=>{const i=n+ ++s/e.length*(a-n);return t(i),r})),r))))}async function hi(e,t){null==t&&(t={});const n=null==t.fetchFunc?ee().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(a):await ci(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await ci(s,t.onProgress,.5,1)}ui.URL_SCHEME="downloads://",ar.registerSaveRouter((e=>ee().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ui.URL_SCHEME)?function(e="model"){return new ui(e)}(e.slice(ui.URL_SCHEME.length)):null));class di{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(k("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ee().platform.fetch,k(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&k(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=er(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ws.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:tr(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),function(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}(e,n,a)}(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=nr(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?ee().platform.fetch:t.fetchFunc;let s,r=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;r<e.length;){if(!s){const n=(await a(e[r],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);r++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,r/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,r=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):r.push(s+e+a);return this.weightUrlConverter&&r.push(...await Promise.all(i)),r}async loadWeights(e){const t=await this.getWeightUrls(e);return[nr(e),await hi(t,this.loadOptions)]}}function pi(e){return null!=e.match(di.URL_SCHEME_REGEX)}di.URL_SCHEME_REGEX=/^https?:\/\//;const fi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>pi(e))):pi(e),n)return mi(e,t)}return null};function mi(e,t){return new di(e,t)}ar.registerSaveRouter(fi),ar.registerLoadRouter(fi);const gi=-2,bi=-1;function yi(e,t,n){const a=e.shape.length;k(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),k(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)k(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function xi(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ki(e,t,n){const a=[];for(let s=0;s<e.length;s++)a[s]=Math.ceil((t[s]-e[s])/n[s]);return a}function wi(e,t,n,a){const s=[...e];for(let e=s.length;e<a.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function vi(e,t,n){return n<=e?n:n-(t-1)}function Ii(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Si(e,t,n,a,s,r,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ci(i,l,u,a,e),h=$i(o,l,u,s,e),d=wi(r,l,u,e)}else for(let t=0;t<u;t++)c[t]=Ti(i,a,r,e,t,l),h[t]=Ei(o,s,r,e,t,l),d[t]=Ni(r,t,l);return{begin:c,end:h,strides:d}}function Ci(e,t,n,a,s){const r=[...s],i=Ii(n,t);for(let s=0;s<r.length;s++)if(i.indexOf(s)>-1)r[s]=0;else{const i=vi(t,n,s);let o=a[i];e&1<<i&&(o=0),r[s]=o}return r}function $i(e,t,n,a,s){const r=[...s],i=Ii(n,t);for(let s=0;s<r.length;s++)if(i.indexOf(s)>-1)r[s]=Number.MAX_SAFE_INTEGER;else{const i=vi(t,n,s);let o=a[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),r[s]=o}for(let e=0;e<r.length;e++){const t=s[e];r[e]<0&&(r[e]+=t),r[e]=b(0,r[e],s[e])}return r}function Ni(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Ti(e,t,n,a,s,r){let i=t[s];const o=n[s]||1;(e&1<<s||r&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return i<0&&(i+=l),i=b(0,i,l-1),i}function Ei(e,t,n,a,s,r){let i=t[s];const o=n[s]||1;(e&1<<s||r&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return i<0&&(i+=l),i=o>0?b(0,i,l):b(-1,i,l-1),i}function Ri(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let s=a+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Ai(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Fi(e,t,n){let a;const s=e.shape.length;let r;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{k(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(k(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,r]}function Di(e,t,n,a,s,r,i,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(gi),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(bi),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],r=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=_i(d.begin[t],0,d.strides[t],a,s,r),d.end[t]=_i(d.end[t],1,d.strides[t],a,s,r);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&a>=0&&(o=d.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):t===gi&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==gi)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function _i(e,t,n,a,s,r){if(s[t])return n>0?r[t]:r[t+1&1];{const t=e<0?a+e:e;return t<r[0]?r[0]:t>r[1]?r[1]:t}}const zi=Os({all_:function(e,t=null,n=!1){const a={x:_s(e,"x","all","bool")},s={axis:t,keepDims:n};return $s.runKernel(ce,a,s)}}),Oi=Os({any_:function(e,t=null,n=!1){const a={x:_s(e,"x","any","bool")},s={axis:t,keepDims:n};return $s.runKernel(he,a,s)}}),Li=Os({argMax_:function(e,t=0){const n={x:_s(e,"x","argMax")},a={axis:t};return $s.runKernel(de,n,a)}});function Mi(e,t,n,a,s="NHWC",r){return Wi(e,[...t,e[3]],n,r,a,null,null,Ji(s))}function Pi(e,t,n,a,s,r,i="channelsLast"){const[o,l]=ji(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Wi(e,u,n,a,s,r,!1,i)}function Bi(e,t,n,a,s,r,i="NDHWC"){const[o,l,u]=Gi(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Ui(e,c,n,a,s,!1,h,r)}function Wi(e,t,n,a,s,r,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=ji(n),[b,y]=ji(a),x=Hi(d,b),k=Hi(p,y),{padInfo:w,outHeight:v,outWidth:I}=function(e,t,n,a,s,r,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,a,s){null==a&&(a=Vi(e,t,n));const r=e[1];return[qi((e[0]-t+2*a)/n+1,s),qi((r-t+2*a)/n+1,s)]}([t,n],r,a,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/a),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*a+r-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-r+1)/a),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=qi((t-r+d+p)/a+1,o),h=qi((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,k,r,o),S=i?f*h:f;let C;return"channelsFirst"===o?C=[l,S,v,I]:"channelsLast"===o&&(C=[l,v,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:v,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:y,inShape:e,outShape:C,filterShape:t}}function Ui(e,t,n,a,s,r=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[b,y,x]=Gi(n),[k,w,v]=Gi(a),I=Hi(p,k),S=Hi(f,w),C=Hi(m,v),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=function(e,t,n,a,s,r,i,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,s,r){null==s&&(s=Vi(e,t[0],a[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=qi((e[n]-t[n]+2*s)/a[n]+1,r));return i}([t,n,a,1],[o,l,u],0,[s,r,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/r),f=Math.ceil(a/i);const e=(d-1)*s+o-t,c=(p-1)*r+l-n,m=(f-1)*i+u-a,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,k=Math.floor(m/2);h={top:y,bottom:x,left:k,right:m-k,front:g,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,S,C,o),R=r?g*d:g;let A;return"channelsFirst"===i?A=[l,R,N,T,E]:"channelsLast"===i&&(A=[l,N,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:k,dilationHeight:w,dilationWidth:v,inShape:e,outShape:A,filterShape:t}}function Vi(e,t,n,a=1){const s=Hi(t,a);return Math.floor((e[0]*(n-1)-n+s)/2)}function ji(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Gi(e){return"number"==typeof e?[e,e,e]:e}function Hi(e,t){return t<=1?e:e+(e-1)*(t-1)}function qi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ki(e){const[t,n,a]=ji(e);return 1===t&&1===n&&1===a}function Xi(e,t){return Ki(e)||Ki(t)}function Yi(e){return ji(e).every((e=>e>0))}function Ji(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Zi(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)k(C(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{k(C(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Qi=Os({reshape_:function(e,t){const n={x:_s(e,"x","reshape","string_or_numeric")},a={shape:t};return $s.runKernel(gn,n,a)}}),eo=Os({avgPool_:function(e,t,n,a,s){const r=_s(e,"x","avgPool","float32");k(Xi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=r,o=!1;3===r.rank&&(o=!0,i=Qi(r,[1,r.shape[0],r.shape[1],r.shape[2]])),k(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Zi("avgPool",a,s);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:s};let c=$s.runKernel(xe,l,u);return c=Er(c,r.dtype),o?Qi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),to=Os({avgPool3d_:function(e,t,n,a,s,r="NDHWC"){const i=_s(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Qi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),k("NDHWC"===r,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`)),k("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Zi("avgPool3d",a,s);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:s,dataFormat:r};let h=$s.runKernel(we,u,c);return h=Er(h,o.dtype),l?Qi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),no=Os({batchNorm_:function(e,t,n,a,s,r){null==r&&(r=.001);const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),l=_s(n,"variance","batchNorm");let u,c;null!=s&&(u=_s(s,"scale","batchNorm")),null!=a&&(c=_s(a,"offset","batchNorm")),k(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),k(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),k(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Qi(e,[1,1,1,e.size]):2===e.rank?Qi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Qi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:r},p=$s.runKernel(ft,h,d);return Qi(p,i.shape)}}),ao=Os({batchNorm2d_:function(e,t,n,a,s,r){const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),l=_s(n,"variance","batchNorm");let u,c;return null!=s&&(u=_s(s,"scale","batchNorm")),null!=a&&(c=_s(a,"offset","batchNorm")),k(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),k(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),k(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&k(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&k(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),no(i,o,l,c,u,r)}}),so=Os({batchNorm3d_:function(e,t,n,a,s,r){const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),l=_s(n,"variance","batchNorm");let u,c;return null!=s&&(u=_s(s,"scale","batchNorm")),null!=a&&(c=_s(a,"offset","batchNorm")),k(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),k(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),k(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&k(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&k(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),no(i,o,l,c,u,r)}}),ro=Os({batchNorm4d_:function(e,t,n,a,s,r){const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),l=_s(n,"variance","batchNorm");let u,c;return null!=s&&(u=_s(s,"scale","batchNorm")),null!=a&&(c=_s(a,"offset","batchNorm")),k(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),k(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),k(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&k(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&k(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),no(i,o,l,c,u,r)}}),io=Os({broadcastTo_:function(e,t){let n=_s(e,"broadcastTo","x");const a=n.shape;if(q(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Qi(n,e)}const s=n.shape,r=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])r[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===r.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Rr(n);const i={x:n},o={reps:r};return $s.runKernel(na,i,o)}}),oo=Os({clipByValue_:function(e,t,n){const a=_s(e,"x","clipByValue");if(k(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return qr(a.shape,t,a.dtype);const s={x:a},r={clipValueMin:t,clipValueMax:n};return $s.runKernel(Re,s,r)}}),lo=Os({concat_:function(e,t=0){k(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=zs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Rr(n[0]);const a=n,s={axis:t};return $s.runKernel(De,a,s)}}),uo=Os({concat1d_:function(e){return lo(e,0)}}),co=Os({concat2d_:function(e,t){return lo(e,t)}}),ho=Os({concat3d_:function(e,t){return lo(e,t)}}),po=Os({concat4d_:function(e,t){return lo(e,t)}}),fo=Os({conv2d_:function(e,t,n,a,s="NHWC",r=[1,1],i){const o=_s(e,"x","conv2d","float32"),l=_s(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Qi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),k(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Zi("conv2d",a,i);const h="NHWC"===s?u.shape[3]:u.shape[1];k(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),k(Xi(n,r),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),k(Yi(r),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),k(Yi(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i},f=$s.runKernel(_e,d,p);return c?Qi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),mo=Os({conv1d_:function(e,t,n,a,s="NWC",r=1,i){const o=_s(e,"x","conv1d"),l=_s(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Qi(o,[1,o.shape[0],o.shape[1]])),k(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),k(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Zi("conv1d",a,i),k(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),k(Xi(n,r),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${r}'`)),k(Yi(r),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),k(Yi(n),(()=>"Error in conv1D: Stride should be larger than 0.")),k("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Qi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Qi(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=fo(d,h,[1,n],a,"NHWC",[1,r],i);return Qi(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),go=Os({conv2DBackpropInput_:function(e,t,n,a,s,r="NHWC",i){k(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Qi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),k(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),k(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),k(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===r?o[3]:o[1],h="NHWC"===r?l.shape[3]:l.shape[1];k(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),k(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Zi("conv2dDerInput",s,i);const d={dy:l,filter:n},p={strides:a,pad:s,dataFormat:r,dimRoundingMode:i,inputShape:o},f=$s.runKernel(Oe,d,p);return u?Qi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),bo=Os({conv2dTranspose_:function(e,t,n,a,s,r){const i=_s(e,"x","conv2dTranspose"),o=_s(t,"filter","conv2dTranspose");return go(n,i,o,a,s,"NHWC",r)}}),yo=Os({conv3d_:function(e,t,n,a,s="NDHWC",r=[1,1,1]){const i=_s(e,"x","conv3d"),o=_s(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Qi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),k(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),k(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),k(Xi(n,r),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),k("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),k(Yi(r),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),k(Yi(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:a,dataFormat:s,dilations:r},d=$s.runKernel(Le,c,h);return u?Qi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),xo=Os({conv3DBackpropInput_:function(e,t,n,a,s){k(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let r=e,i=t,o=!1;4===t.rank&&(o=!0,i=Qi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,e[0],e[1],e[2],e[3]]);const l=r[4],u=i.shape[4];k(5===r.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`)),k(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),k(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),k(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),k(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:a,inputShape:r},d=$s.runKernel(Pe,c,h);return o?Qi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ko=Os({conv3dTranspose_:function(e,t,n,a,s){const r=_s(e,"x","conv3dTranspose"),i=_s(t,"filter","conv3dTranspose");return xo(n,r,i,a,s)}}),wo=Os({denseBincount_:function(e,t,n,a=!1){const s=_s(e,"x","denseBincount"),r=_s(t,"weights","denseBincount");k("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),k(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),k(n>=0,(()=>`size must be non-negative, but got ${n}.`)),k(r.size===s.size||0===r.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},o={size:n,binaryOutput:a};return $s.runKernel(Ge,i,o)}}),vo=Os({depthwiseConv2d_:function(e,t,n,a,s="NHWC",r=[1,1],i){const o=_s(e,"x","depthwiseConv2d","float32"),l=_s(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Qi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),k(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];k(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Zi("depthwiseConv2d",a,i);const d={x:u,filter:l},p={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i},f=$s.runKernel(qe,d,p);return c?Qi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Io=Os({elu_:function(e){const t={x:_s(e,"x","elu","float32")};return $s.runKernel(nt,t)}}),So=Os({equal_:function(e,t){let n=_s(e,"a","equal","string_or_numeric"),a=_s(t,"b","equal","string_or_numeric");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(rt,s)}}),Co=Os({erf_:function(e){let t=_s(e,"x","erf");k("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Er(t,"float32"));const n={x:t};return $s.runKernel(st,n)}}),$o=Os({exp_:function(e){const t={x:_s(e,"x","exp")};return $s.runKernel(it,t)}}),No=Os({expandDims_:function(e,t=0){const n=_s(e,"x","expandDims","string_or_numeric");k(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},s={dim:t};return $s.runKernel(ot,a,s)}}),To=Os({tile_:function(e,t){const n=_s(e,"x","tile","string_or_numeric");k(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const a={x:n},s={reps:t};return $s.runKernel(na,a,s)}}),Eo=Os({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const s=Tr([e,t],a),r=e<=t?e:t;for(let e=0;e<r;++e)s.set(1,e,e);const i=Qi(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return To(No(i,0),[n[0],1,1]);if(2===n.length)return To(No(No(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return To(No(No(No(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Ro=Os({floor_:function(e){const t={x:_s(e,"x","floor","float32")};return $s.runKernel(dt,t)}}),Ao=Os({gather_:function(e,t,n=0,a=0){const s={x:_s(e,"x","gather"),indices:_s(t,"indices","gather","int32")},r={axis:n,batchDims:a};return $s.runKernel(mt,s,r)}}),Fo=Os({greater_:function(e,t){let n=_s(e,"a","greater","string_or_numeric"),a=_s(t,"b","greater","string_or_numeric");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(bt,s)}}),Do=Os({greaterEqual_:function(e,t){let n=_s(e,"a","greaterEqual","string_or_numeric"),a=_s(t,"b","greaterEqual","string_or_numeric");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(yt,s)}}),_o=Os({leakyRelu_:function(e,t=.2){const n={x:_s(e,"x","leakyRelu")},a={alpha:t};return $s.runKernel(Ct,n,a)}}),zo=Os({log_:function(e){const t={x:_s(e,"x","log","float32")};return $s.runKernel(Et,t)}}),Oo=Os({log1p_:function(e){const t={x:_s(e,"x","log1p")};return $s.runKernel(Rt,t)}}),Lo=Os({max_:function(e,t=null,n=!1){const a={x:_s(e,"x","max")},s={reductionIndices:t,keepDims:n};return $s.runKernel(Ot,a,s)}}),Mo=Os({sum_:function(e,t=null,n=!1){let a=_s(e,"x","sum");"bool"===a.dtype&&(a=Er(a,"int32"));const s={x:a},r={axis:t,keepDims:n};return $s.runKernel(Ln,s,r)}}),Po=Os({logSoftmax_:function(e,t=-1){const n=_s(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const a=Mr(((e,n)=>{const a=Lo(e,t,!0),s=Yr(e,a),r=Yr(Er(s,"float32"),zo(Mo($o(s),t,!0)));return n([r]),{value:r,gradFunc:(e,n)=>{const[a]=n,s=$o(a);return Yr(e,_r(Mo(e,t,!0),s))}}}));return a(n)}});function Bo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Wo(e,t,n){const a=e.length+t.length,s=[];let r=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?s.push(e[r++]):s.push(t[i++]);return s}function Uo(e,t){const n=[],a=e.length;for(let s=0;s<a;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Vo(e,t){return Wo(e,t.map((e=>1)),t)}function jo(e,t,n){k(Bo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Go(e,t){if(Bo(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Ho(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function qo(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Ko=Os({logSumExp_:function(e,t=null,n=!1){const a=_s(e,"x","logSumExp"),s=R(t,a.shape),r=Lo(a,s,!0),i=Yr(a,r),o=$o(i),l=Mo(o,s),u=zo(l),c=Ar(Qi(r,u.shape),u);if(n){const e=Vo(c.shape,s);return Qi(c,e)}return c}}),Xo=Os({logicalAnd_:function(e,t){const n=_s(e,"a","logicalAnd","bool"),a=_s(t,"b","logicalAnd","bool");ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(At,s)}}),Yo=Os({matMul_:function(e,t,n=!1,a=!1){let s=_s(e,"a","matMul"),r=_s(t,"b","matMul");[s,r]=ys(s,r);const i={a:s,b:r},o={transposeA:n,transposeB:a};return $s.runKernel(Ie,i,o)}}),Jo=Os({maxPool_:function(e,t,n,a,s){const r=_s(e,"x","maxPool");let i=r,o=!1;3===r.rank&&(o=!0,i=Qi(r,[1,r.shape[0],r.shape[1],r.shape[2]])),k(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),k(Xi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Zi("maxPool",a,s);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:s},c=$s.runKernel(Mt,l,u);return o?Qi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Zo=Os({maxPool3d_:function(e,t=[1,1,1],n,a,s,r="NDHWC"){const i=_s(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Qi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),k("NDHWC"===r,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`)),Zi("maxPool3d",a,s);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:s,dataFormat:r},h=$s.runKernel(Bt,u,c);return l?Qi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Qo=Os({mean_:function(e,t=null,n=!1){const a={x:_s(e,"x","mean")},s={axis:t,keepDims:n};return $s.runKernel(Vt,a,s)}}),el=Os({min_:function(e,t=null,n=!1){const a={x:_s(e,"x","min")},s={axis:t,keepDims:n};return $s.runKernel(jt,a,s)}}),tl=Os({minimum_:function(e,t){let n=_s(e,"a","minimum"),a=_s(t,"b","minimum");[n,a]=ys(n,a),"bool"===n.dtype&&(n=Er(n,"int32"),a=Er(a,"int32")),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(Gt,s)}}),nl=Os({moments_:function(e,t=null,n=!1){const a=R(t,(e=_s(e,"x","moments")).shape),s=Qo(e,a,n);let r=s.shape;n||(r=Vo(s.shape,a));const i=Or(Yr(Er(e,"float32"),Qi(s,r)));return{mean:s,variance:Qo(i,a,n)}}}),al=Os({neg_:function(e){const t={x:_s(e,"x","neg")};return $s.runKernel(Yt,t)}}),sl=Os({notEqual_:function(e,t){let n=_s(e,"a","notEqual","string_or_numeric"),a=_s(t,"b","notEqual","string_or_numeric");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(Jt,s)}}),rl=Os({oneHot_:function(e,t,n=1,a=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:_s(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:a};return $s.runKernel(nn,r,i)}});function il(e,t="float32"){if(q(e),"complex64"===t){const t=il(e,"float32"),n=il(e,"float32");return Ls(t,n)}const n=G(I(e),t);return $s.makeTensor(n,e,t)}function ol(e,t="float32"){if(q(e),"complex64"===t){const t=ol(e,"float32"),n=il(e,"float32");return Ls(t,n)}const n=j(I(e),t);return $s.makeTensor(n,e,t)}const ll=Os({onesLike_:function(e){const t={x:_s(e,"x","onesLike")};return $s.runKernel(tn,t)}}),ul=Os({pad_:function(e,t,n=0){const a=_s(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},r={x:a};return $s.runKernel(sn,r,s)}}),cl=Os({prelu_:function(e,t){const n={x:_s(e,"x","prelu"),alpha:_s(t,"alpha","prelu")};return $s.runKernel(on,n)}});var hl=n(464);class dl{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=s||Math.random();this.random=hl.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,s,r;do{a=2*this.random()-1,s=2*this.random()-1,r=a*a+s*s}while(r>=1||0===r);const i=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class pl{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hl.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const fl=Os({randomNormal_:function(e,t=0,n=1,a,s){if(q(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const r=new dl(t,n,a,!1,s),i=Tr(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=r.nextValue();return i.toTensor()}}),ml=Os({randomUniform_:function(e,t=0,n=1,a="float32",s){q(e);const r=Tr(e,a),i=new pl(t,n,null,s);for(let e=0;e<r.values.length;e++)r.values[e]=i.nextValue();return r.toTensor()}});function gl(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:a};return $s.runKernel(dn,{},s)}const bl=Os({relu_:function(e){const t={x:_s(e,"x","relu")};return $s.runKernel(mn,t)}}),yl=Os({reverse_:function(e,t){const n={x:_s(e,"x","reverse")},a={dims:t};return $s.runKernel(vn,n,a)}}),xl=Os({selu_:function(e){const t={x:_s(e,"x","selu")};return $s.runKernel(En,t)}}),kl=Os({separableConv2d_:function(e,t,n,a,s,r=[1,1],i="NHWC"){const o=_s(e,"x","separableConv2d"),l=_s(t,"depthwiseFilter","separableConv2d"),u=_s(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Qi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),k(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),k(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),k(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),k(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];k(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=vo(c,l,a,s,i,r),m=fo(f,u,1,"valid",i);return h?Qi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),wl=Os({sigmoid_:function(e){const t={x:_s(e,"x","sigmoid","float32")};return $s.runKernel(_n,t)}}),vl=Os({slice_:function(e,t,n){const a=_s(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const s={x:a},r={begin:t,size:n};return $s.runKernel(Rn,s,r)}}),Il=Os({slice1d_:function(e,t,n){const a=_s(e,"x","slice1d");return k(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),vl(a,[t],[n])}}),Sl=Os({slice2d_:function(e,t,n){const a=_s(e,"x","slice2d");return k(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),vl(a,t,n)}}),Cl=Os({slice3d_:function(e,t,n){const a=_s(e,"x","slice3d");return k(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),vl(a,t,n)}}),$l=Os({slice4d_:function(e,t,n){const a=_s(e,"x","slice4d");return k(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),vl(a,t,n)}}),Nl=Os({softmax_:function(e,t=-1){const n=_s(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},s={dim:t};return $s.runKernel(Bn,a,s)}}),Tl=Os({softplus_:function(e){const t={x:_s(e,"x","softplus")};return $s.runKernel(zn,t)}}),El=Os({split_:function(e,t,n=0){const a={x:_s(e,"x","split")},s={numOrSizeSplits:t,axis:n};return $s.runKernel(Pn,a,s)}}),Rl=Os({squeeze_:function(e,t){const n=_s(e,"x","squeeze","string_or_numeric");return Qi(n,A(n.shape,t).newShape)}}),Al=Os({stack_:function(e,t=0){const n=zs(e,"tensors","stack","string_or_numeric");k(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&k(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,s={axis:t};return $s.runKernel(an,a,s)}}),Fl=Os({tanh_:function(e){const t={x:_s(e,"x","tanh","float32")};return $s.runKernel(ta,t)}});function Dl(e,t){v(e);const n=As(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ms(e,null,n,t)}function _l(e,t,n){if(v(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=As(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ms(e,t,a,n)}const zl=Os({truncatedNormal_:function(e,t=0,n=1,a,s){if(q(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const r=new dl(t,n,a,!0,s),i=Tr(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=r.nextValue();return i.toTensor()}}),Ol=Os({unstack_:function(e,t=0){const n=_s(e,"x","unstack","string_or_numeric");k(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},s={axis:t};return $s.runKernel(oa,a,s)}}),Ll=Os({where_:function(e,t,n){const a=_s(t,"a","where"),s=_s(n,"b","where"),r=_s(e,"condition","where","bool"),i=ti(ti(r.shape,a.shape),s.shape),o={condition:io(r,i),t:io(a,i),e:io(s,i)};return $s.runKernel(Tn,o)}}),Ml=Os({imag_:function(e){const t={input:_s(e,"input","imag")};return $s.runKernel(wt,t)}}),Pl=Os({real_:function(e){const t={input:_s(e,"input","real")};return $s.runKernel(pn,t)}}),Bl=Os({transpose_:function(e,t,n){const a=_s(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),k(a.rank===t.length,(()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`)),t.forEach((e=>{k(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and "+(a.rank-1)+` but got ${t}`))})),a.rank<=1)return a.clone();const s={x:a},r={perm:t};return"complex64"===a.dtype?js((()=>{let e=Pl(a),t=Ml(a);return e=$s.runKernel(ra,{x:e},r),t=$s.runKernel(ra,{x:t},r),n&&(t=al(t)),Ls(e,t)})):$s.runKernel(ra,s,r)}}),Wl=Os({dropout_:function(e,t,n,a){const s=_s(e,"x","dropout");if(k("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),k(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof rs?s.clone():s;const r=function(e,t){if(null==t)return e.shape.slice();if(S(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(s,n),i=1-t,o=Dr(Ro(Ar(ml(r,0,1,"float32",a),i)),i);return _r(s,o)}}),Ul=Os({fft_:function(e){k("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return $s.runKernel(ut,t)}}),Vl=Os({rfft_:function(e,t){k("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const a=e.size/n;let s;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,s=vl(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,s=lo([e,il(a)],e.shape.length-1),n=t}else s=e;const r=Lr(s),i=Qi(Ls(s,r),[a,n]),o=Ul(i),l=Math.floor(n/2)+1,u=Pl(o),c=Ml(o),h=El(u,[l,n-l],u.shape.length-1),d=El(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Qi(Ls(h[0],d[0]),p)}}),jl=Os({ifft_:function(e){k("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return $s.runKernel(kt,t)}}),Gl=Os({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const s=Qi(e,[n,t]);a=jl(s)}else{const s=[n,2*(t-1)],r=Qi(Pl(e),[n,t]),i=Qi(Ml(e),[n,t]),o=yl(vl(r,[0,1],[n,t-2]),1),l=_r(yl(vl(i,[0,1],[n,t-2]),1),Pr(-1)),u=lo([r,o],1),c=lo([i,l],1),h=Qi(Ls(u,c),[s[0],s[1]]);a=jl(h)}if(a=Pl(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=Qi(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}}),Hl=Os({conv2DBackpropFilter_:function(e,t,n,a,s,r="NHWC",i){let o=e;3===e.rank&&(o=Qi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Qi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),k(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),k(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),k(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===r?o.shape[3]:o.shape[1],c="NHWC"===r?l.shape[3]:l.shape[1];k(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),k(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Zi("conv2dDerFilter",s,i);const h={x:o,dy:l},d={strides:a,pad:s,dataFormat:r,dimRoundingMode:i,filterShape:n};return $s.runKernel(ze,h,d)}}),ql=Os({relu6_:function(e){const t={x:_s(e,"x","relu6")};return $s.runKernel(wn,t)}}),Kl=Os({step_:function(e,t=0){const n={x:_s(e,"x","step")},a={alpha:t};return $s.runKernel(ca,n,a)}});function Xl(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return _r(e,Kl(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Yl(e,t){let n=t;const a=ei(e.shape,t.shape);return a.length>0&&(n=Mo(n,a)),Qi(n,e.shape)}function Jl(e,t,n,a){if("linear"===t)return e;if("relu"===t)return bl(e);if("elu"===t)return Io(e);if("relu6"===t)return ql(e);if("prelu"===t)return cl(e,n);if("leakyrelu"===t)return _o(e,a);if("sigmoid"===t)return wl(e);throw new Error(`Unknown fused activation ${t}.`)}const Zl=(e,t)=>!(e>0)||"linear"===t,Ql=Os({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:s="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Zl($s.state.gradientDepth,l)){k("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=fo(e,t,n,a,s,r,i);return null!=o&&(h=Ar(h,o)),Jl(h,l,u,c)}const h=_s(e,"x","conv2d","float32"),d=_s(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Qi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),k(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Zi("fused conv2d",a,i);const m="NHWC"===s?p.shape[3]:p.shape[1];k(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),k(Xi(n,r),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`));const g=Wi(p.shape,d.shape,n,r,a,i);let b,y;if(null!=o&&(b=_s(o,"bias","fused conv2d"),[b]=ys(b,h),"NHWC"===s?ti(g.outShape,b.shape):(k(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),k(0===b.shape.length||b.shape[0]===g.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(k(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)k(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{ti(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=_s(u,"prelu weights","fused conv2d")}const x=(e,t)=>{k("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=Xl(e,u,l);k(Ki(r),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const d=[go(o.shape,h,i,n,a),Hl(o,h,i.shape,n,a)];if(null!=c){const e=Yl(c,h);d.push(e)}return d},w={x:p,filter:d,bias:b,preluActivationWeights:y},v={strides:n,pad:a,dataFormat:s,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Mr(((e,t,n)=>{let a=$s.runKernel(pa,w,v);return n([t,e,a]),f&&(a=Qi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(p,d)}{const e=Mr(((e,t,n,a)=>{let s=$s.runKernel(pa,w,v);return a([t,e,s,n]),f&&(s=Qi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d,b)}}}),eu=Os({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,s,r=[1,1],i){let o=e;3===e.rank&&(o=Qi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Qi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:a,pad:s,dimRoundingMode:i,dilations:r,filterShape:n};return $s.runKernel(Ke,u,c)}}),tu=Os({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,s,r=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Qi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:a,pad:s,dimRoundingMode:i,dilations:r,inputShape:e},h=$s.runKernel(Xe,u,c);return l?Qi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),nu=Os({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:s,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Zl($s.state.gradientDepth,r)){let l=Yo(e,t,n,a);return null!=s&&(l=Ar(l,s)),Jl(l,r,i,o)}let l=_s(e,"a","fused matMul"),u=_s(t,"b","fused matMul");[l,u]=ys(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=a?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=a?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=I(f),b=I(m);k(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${a} must match.`));const y=ti(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),x=Qi(l,n?[g,c,d]:[g,d,c]),w=Qi(u,a?[b,p,h]:[b,h,p]);let v,S;null!=s&&(v=_s(s,"bias","fused matMul"),[v]=ys(v,l),ti(y,v.shape)),null!=i&&(S=_s(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[i,o,l,u]=t,c=Xl(Qi(e,l.shape),l,r);let h,d;return n||a?!n&&a?(h=Yo(c,o,!1,!1),d=Yo(c,i,!0,!1)):n&&!a?(h=Yo(o,c,!1,!0),d=Yo(i,c,!1,!1)):(h=Yo(o,c,!0,!0),d=Yo(c,i,!0,!0)):(h=Yo(c,o,!1,!0),d=Yo(i,c,!0,!1)),null!=s?[h,d,Yl(u,c)]:[h,d]},$={a:x,b:w,bias:v,preluActivationWeights:S},N={transposeA:n,transposeB:a,activation:r,leakyreluAlpha:o};if(null==s){const e=Mr(((e,t,n)=>{const a=$s.runKernel(da,$,N);return n([e,t,a]),{value:Qi(a,y),gradFunc:C}}));return e(x,w)}{const e=Mr(((e,t,n,a)=>{const s=$s.runKernel(da,$,N);return a([e,t,s,n]),{value:Qi(s,y),gradFunc:C}}));return e(x,w,v)}}}),au=Os({cropAndResize_:function(e,t,n,a,s="bilinear",r=0){const i=_s(e,"image","cropAndResize"),o=_s(t,"boxes","cropAndResize","float32"),l=_s(n,"boxInd","cropAndResize","int32"),u=o.shape[0];k(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),k(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),k(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),k(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),k(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),k("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:r,cropSize:a};return $s.runKernel(je,c,h)}}),su=Os({flipLeftRight_:function(e){const t=_s(e,"image","flipLeftRight","float32");k(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return $s.runKernel(ht,n,{})}}),ru=Os({grayscaleToRGB_:function(e){const t=_s(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];k(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),k(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,To(t,s)}}),iu=Os({einsum_:function(e,...t){const n=t.map(((e,t)=>_s(e,`tensors${t}`,"einsum"))),a={equation:e};return $s.runKernel(tt,n,a)}}),ou=Os({rgbToGrayscale_:function(e){const t=_s(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];k(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),k(3===a,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`));const s=t.dtype,r=Er(t,"float32"),i=Dl([.2989,.587,.114]);let o;switch(t.rank){case 2:o=iu("ij,j->i",r,i);break;case 3:o=iu("ijk,k->ij",r,i);break;case 4:o=iu("ijkl,l->ijk",r,i);break;case 5:o=iu("ijklm,m->ijkl",r,i);break;case 6:o=iu("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return o=No(o,-1),Er(o,s)}}),lu=Os({rotateWithOffset_:function(e,t,n=0,a=.5){const s=_s(e,"image","rotateWithOffset","float32");k(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const r={image:s},i={radians:t,fillValue:n,center:a};return $s.runKernel(ha,r,i)}});function uu(e,t,n,a,s,r){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==r&&(r=0);const i=e.shape[0];return n=Math.min(n,i),k(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),k(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),k(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),k(1===t.rank,(()=>"scores must be a 1D tensor")),k(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),k(0<=r&&r<=1,(()=>`softNmsSigma must be in [0, 1], but was '${r}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:r}}const cu=Os({nonMaxSuppression_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY){const r=_s(e,"boxes","nonMaxSuppression","float32"),i=_s(t,"scores","nonMaxSuppression","float32"),o=uu(r,i,n,a,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return $s.runKernel(Zt,{boxes:r,scores:i},l)}});function hu(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,s=e.length,r=0,i=!1;for(;a<s;){r=a+(s-a>>>1);const o=n(t,e[r]);o>0?a=r+1:(s=r,i=!o)}return i?a:-a-1}(e,t,n||du)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function du(e,t){return e>t?1:e<t?-1:0}function pu(e,t,n,a,s){return gu(e,t,n,a,s,0)}function fu(e,t,n,a,s,r){return gu(e,t,n,a,s,0,!1,r,!0)}function mu(e,t,n,a,s,r){return gu(e,t,n,a,s,r,!0)}function gu(e,t,n,a,s,r,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(xu);const c=r>0?-.5/r:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:r,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=bu(e,r,h[n]);if(i>=a){o=!0;break}if(t.score=t.score*yu(a,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(r),d.push(t.score)):t.score>s&&hu(u,t,xu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function bu(e,t,n){const a=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),r=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-r)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(r,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function yu(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function xu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const ku=Os({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=0){const i=_s(e,"boxes","nonMaxSuppression"),o=_s(t,"scores","nonMaxSuppression"),l=uu(i,o,n,a,s,r),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:r=l.softNmsSigma},h=$s.runKernel(en,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),wu=Os({nonMaxSuppressionPadded_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=!1){const i=_s(e,"boxes","nonMaxSuppression"),o=_s(t,"scores","nonMaxSuppression"),l=uu(i,o,n,a,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:r},h=$s.runKernel(Qt,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),vu=Os({resizeBilinear_:function(e,t,n=!1,a=!1){const s=_s(e,"images","resizeBilinear");k(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),k(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),k(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let r=s,i=!1;3===s.rank&&(i=!0,r=Qi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:r},l={alignCorners:n,halfPixelCenters:a,size:t},u=$s.runKernel(xn,o,l);return i?Qi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Iu=Os({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const s=_s(e,"images","resizeNearestNeighbor");k(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),k(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),k("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),k(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let r=s,i=!1;3===s.rank&&(i=!0,r=Qi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:r},l={alignCorners:n,halfPixelCenters:a,size:t},u=$s.runKernel(bn,o,l);return i?Qi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Su=Os({bincount_:function(e,t,n){const a=_s(e,"x","bincount"),s=_s(t,"weights","bincount");k("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),k(n>=0,(()=>`size must be non-negative, but got ${n}.`)),k(s.size===a.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${s.shape}.`));const r={x:a,weights:s},i={size:n};return $s.runKernel(Ce,r,i)}}),Cu=Os({lessEqual_:function(e,t){let n=_s(e,"a","lessEqual","string_or_numeric"),a=_s(t,"b","lessEqual","string_or_numeric");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(Nt,s)}}),$u=Os({round_:function(e){const t={x:_s(e,"x","round")};return $s.runKernel(In,t)}}),Nu=Os({threshold_:function(e,t="binary",n=!1,a=.5){const s=_s(e,"image","threshold"),r=s.shape[0]*s.shape[1];let i,o,l,u,c=_r(Dl([a]),255);if(k(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),k(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),k("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),k("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=El(s,[1,1,1],-1);const e=_r(i,.2989),t=_r(o,.587),n=_r(l,.114);u=Ar(Ar(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,a,s,r,i,o,l=Dl([-1]),u=Dl([0]),c=Dl([0]);for(let h=0;h<e.size-1;h++){n=vl(e,0,h+1),a=vl(e,h+1),i=Dr(Mo(n),t),o=Dr(Mo(a),t);const d=Mo(_r(n,gl(0,n.size)));s=Dr(d,Mo(n));const p=qr(a.shape,n.size),f=Ar(gl(0,a.size),p),m=_r(a,f);r=Dr(Mo(m),Mo(a));const g=Yr(s,r),b=Yr(s,r),y=_r(i,o);c=_r(_r(y,g),b);const x=Fo(c,u);u=Ll(x,c,u),l=Ll(x,Dl([h]),l)}return l}(Su(Er($u(u),"int32"),Ps([]),256),r));const h=n?Cu(u,c):Fo(u,c);return Er(_r(h,255),"int32")}}),Tu=Os({transform_:function(e,t,n="nearest",a="constant",s=0,r){const i=_s(e,"image","transform","float32"),o=_s(t,"transforms","transform","float32");k(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),k(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),k(null==r||2===r.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:a,fillValue:s,outputShape:r};return $s.runKernel(sa,l,u)}}),Eu=Os({less_:function(e,t){let n=_s(e,"a","less","string_or_numeric"),a=_s(t,"b","less","string_or_numeric");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel($t,s)}}),Ru=Os({bandPart_:function(e,t,n){const a=_s(e,"a","bandPart");k(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const s=a.shape,[r,i]=a.shape.slice(-2);let o,l;"number"==typeof t?(k(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),k(t<=r,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`)),o=_s(t<0?r:t,"numLower","bandPart")):(k("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=Ll(Eu(t,0),r,tl(t,r))),"number"==typeof n?(k(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),k(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=_s(n<0?i:n,"numUpper","bandPart")):(k("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=Ll(Eu(n,0),i,tl(n,i)));const u=Qi(gl(0,r,1,"int32"),[-1,1]),c=gl(0,i,1,"int32"),h=Yr(u,c),d=Xo(Cu(h,o),Do(h,al(l))),p=il([r,i],a.dtype);return Qi(Al(Ol(Qi(a,[-1,r,i])).map((e=>Ll(d,e,p)))),s)}});function Au(e,t,n=null){if(0===e.rank)return Zr(e);if(1!==e.rank&&null===n)return Au(Qi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Mo(Zr(e),n);if(t===1/0)return Lo(Zr(e),n);if(t===-1/0)return el(Zr(e),n);if("euclidean"===t||2===t)return zr(Mo(Xr(Zr(e),Pr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Lo(Mo(Zr(e),n[0]),n[1]-1);if(t===1/0)return Lo(Mo(Zr(e),n[1]),n[0]);if(t===-1/0)return el(Mo(Zr(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return zr(Mo(Or(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Fu=Os({norm_:function(e,t="euclidean",n=null,a=!1){const s=Au(e=_s(e,"x","norm"),t,n);let r=s.shape;if(a){const t=R(n,e.shape);r=Vo(s.shape,t)}return Qi(s,r)}}),Du=Os({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,k(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)k(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=El(e,e.shape[0],0).map((e=>Rl(e,[0])));k(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let t=0;t<e.length;++t)n.push($s.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){const t=_r(Mo(_r(n[a],e)),n[a]);e=Yr(e,t)}return Dr(e,Fu(e,"euclidean"))})));return t?Al(n,0):n}});function _u(e,t=!1){return $s.tidy((()=>{k(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let s=Eo(n),r=Rr(e);const i=_l([[1]],[1,1]);let o=Rr(i);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=r,l=o,u=s;[o,r,s]=$s.tidy((()=>{const t=vl(r,[e,e],[n-e,1]),l=Fu(t),u=vl(r,[e,e],[1,1]),c=Ll(Fo(u,0),_l([[-1]]),_l([[1]])),h=Yr(u,_r(c,l)),d=Dr(t,h);o=1===d.shape[0]?Rr(i):lo([i,vl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=al(Dr(Yo(c,h),l)),f=vl(r,[e,0],[n-e,a]),m=_r(p,o),g=Bl(o);if(0===e)r=Yr(f,Yo(m,Yo(g,f)));else{const t=Yr(f,Yo(m,Yo(g,f)));r=lo([vl(r,[0,0],[e,a]),t],0)}const b=Bl(m),y=vl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Yr(y,Yo(Yo(y,o),b));else{const t=Yr(y,Yo(Yo(y,o),b));s=lo([vl(s,[0,0],[n,e]),t],1)}return[o,r,s]})),Gs([t,l,u])}return!t&&n>a&&(s=vl(s,[0,0],[n,a]),r=vl(r,[0,0],[a,a])),[s,r]}))}const zu=Os({qr_:function(e,t=!1){if(k(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return _u(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Ol(Qi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],r=[];return a.forEach((e=>{const[n,a]=_u(e,t);s.push(n),r.push(a)})),[Qi(Al(s,0),e.shape),Qi(Al(r,0),e.shape)]}}});var Ou;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ou||(Ou={}));const Lu=Os({squaredDifference_:function(e,t){let n=_s(e,"a","squaredDifference"),a=_s(t,"b","squaredDifference");[n,a]=ys(n,a),ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(Hn,s,{})}}),Mu={flipLeftRight:su,grayscaleToRGB:ru,resizeNearestNeighbor:Iu,resizeBilinear:vu,rgbToGrayscale:ou,rotateWithOffset:lu,cropAndResize:au,nonMaxSuppression:cu,nonMaxSuppressionAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY){const r=_s(e,"boxes","nonMaxSuppressionAsync"),i=_s(t,"scores","nonMaxSuppressionAsync"),o=uu(r,i,n,a,s);n=o.maxOutputSize,a=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=pu(u,c,n,a,s);return r!==e&&r.dispose(),i!==t&&i.dispose(),Dl(h,"int32")},nonMaxSuppressionWithScore:ku,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=0){const i=_s(e,"boxes","nonMaxSuppressionAsync"),o=_s(t,"scores","nonMaxSuppressionAsync"),l=uu(i,o,n,a,s,r);n=l.maxOutputSize,a=l.iouThreshold,s=l.scoreThreshold,r=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=mu(c,h,n,a,s,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Dl(d,"int32"),selectedScores:Dl(p)}},nonMaxSuppressionPadded:wu,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,r=!1){const i=_s(e,"boxes","nonMaxSuppressionAsync"),o=_s(t,"scores","nonMaxSuppressionAsync"),l=uu(i,o,n,a,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=fu(d,p,u,c,h,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Dl(f,"int32"),validOutputs:Pr(m,"int32")}},threshold:Nu,transform:Tu},Pu={bandPart:Ru,gramSchmidt:Du,qr:zu},Bu=class{static sgd(e){return new si(e)}static momentum(e,t,n=!1){return new ri(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,s=!1){return new ii(e,t,n,a,s)}static adam(e=.001,t=.9,n=.999,a=null){return new Jr(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new Hr(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,s=0){return new ai(e,t,n,a,s)}static adagrad(e,t=.1){return new Kr(e,t)}},Wu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Uu(){return new Promise((e=>Wu((()=>e()))))}function Vu(e,t){const n=e[0].length;e.forEach(((e,t)=>{k(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),k(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,s)=>{for(let r=0;r<n;r++)k(r===t||e[r]===a[r],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`))}))}function ju(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var Gu;function Hu(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let s=1;s<n.length;++s){const r=n[s],i=a[a.length-n.length+s],o=a[i];if(r>=0)if(o>=0){if(o!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${r} but shape[${s+e}] = ${o}`)}else a[i]=r}return a}function qu(e){const t={FIRST_DIM_SIZE:Gu.FIRST_DIM_SIZE,VALUE_ROWIDS:Gu.VALUE_ROWIDS,ROW_LENGTHS:Gu.ROW_LENGTHS,ROW_SPLITS:Gu.ROW_SPLITS,ROW_LIMITS:Gu.ROW_LIMITS,ROW_STARTS:Gu.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Ku(e){return 0===e.length?0:e[0]===Gu.FIRST_DIM_SIZE?e.length-1:e.length}function Xu(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let s=0;s<Math.min(n,a-1);++s){const n=e[s],a=t[s+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${a}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Gu||(Gu={}));const Yu=30;function Ju(e){return e<=Yu?e:B(e,Math.floor(Math.sqrt(e)))}function Zu(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Qu(e,t,n,a=!0){let s=[];if(a)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)s=s.concat([e[a+1]/t[a],t[a]]);s=s.concat(e.slice(n+1))}return s}function ec(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],s=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?s.push(a):n.push(a);a.push(...n),a.push(0),a.push(...s)}return a}function tc(e,t,n,a=!0){const s=[];a?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function nc(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function ac(e,t,n){const a=e.slice(0,1);for(let s=0;s<n;++s)a.push(e[s+1]-t[s][0]-t[s][1]);return a}function sc(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===I(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,r=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=r;e<n;++e)u*=o[e],l.push(o[e]);const c=[...W(e.shape).map((e=>e/u)),1].slice(0,r);return[l,i,u,c]}function rc(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(r+` update.rank < ${s}. `);if(e.length<a+(n.rank-s))throw new Error(r+` Output shape length < ${a+(n.rank-s)}`);if(n.rank!==s+e.length-a)throw new Error(r+" update.rank != "+(s+e.length-a));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(r+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+a])throw new Error(r+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function ic(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}rc(n,t,e)}function oc(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,r=n.length;let i=1;for(let e=s;e<r;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:I(t.shape)/o,sliceSize:i,strides:[...W(n.slice(0,s)),1],outputSize:I(n)}}const lc=1.7580993408473768,uc=1.0507009873554805,cc=.3275911,hc=.254829592,dc=-.284496736,pc=1.421413741,fc=-1.453152027,mc=1.061405429;function gc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function bc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function yc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function xc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function kc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function wc(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function vc(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const r=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(r),a[s]=Math.sin(r)}return{real:n,imag:a}}function Ic(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Sc="->",Cc=/->/g,$c=",",Nc="...";function Tc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Cc,"").length)/Sc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Sc}").`);const[a,s]=e.split(Sc);k(-1===a.indexOf(Nc),(()=>`The ellipsis notation ("${Nc}") is not supported yet.`));const r=a.split($c),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!r.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){const t=a[e];-1===o.indexOf(t)&&t!==$c&&o.push(t)}const l=new Array(r.length);for(let e=0;e<i;++e){if(new Set(r[e].split("")).size!==r[e].length)throw new Error(`Found duplicate axes in input component ${r[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<r[e].length;++t)l[e].push(o.indexOf(r[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Ec(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Rc(e,t,n){const a=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=s[n]:k(a[t[e][n]]===s[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Ac(e,t){const n=e,a=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)a.push([]);const r=[];for(let e=0;e<n.length;++e){const s=Dc(t,n[e]);for(const t of s)-1===r.indexOf(t)&&(a[e].push(t),r.push(t))}return{path:n,steps:a}}function Fc(e){return e.every(((e,t)=>e===t))}function Dc(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function _c(e,t,n=0){let a=[];if("number"==typeof t)k(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);k(s<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}k(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function zc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Oc(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Lc(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Mc(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Pc(e,t){return`size ${e} must be non-negative, not ${t}`}function Bc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Wc(e,t){return`Input to reshape is a SparseTensor with ${I(e)}\n  dense values, but the requested shape requires a multiple of ${I(t)}. inputShape=${e} outputShape= ${t}`}function Uc(e,t){return`Input to reshape is a tensor with ${I(e)} dense values, but the requested shape has ${I(t)}. inputShape=${e} outputShape=${t}`}function Vc(){return"segment ids must be >= 0"}function jc(){return"segment ids are not increasing"}function Gc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Hc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function qc(e,t){let n,a=!1;for(e<=Yu?(n=e,a=!0):n=B(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=B(e,n+1);return n}function Kc(e,t,n){const a=[],s=e.length;for(let r=0;r<s;r++)r!==t?a.push(e[r]):a.push(n);return a}function Xc(e,t,n,a){const s=t.shape.length,r=e.shape.length;if(0!==a&&(a<-s||a>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${a}`);if(a<0&&(a+=s),a>r)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${r}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=a;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<r;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Yc(e){try{return e.map((e=>ja(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Jc(e){return e.map((e=>Va(e)))}function Zc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=Tr(e,"int32"),s=Tr([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}!function(){for(const e of oi)jr(e)}();const Qc={kernelName:re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,Kl(Er(n,"float32"),-1))}}},eh={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Or(Er(n,"float32")),a=zr(Yr(Pr(1),t));return al(Dr(e,a))}}}},th={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=zr(Yr(Or(Er(n,"float32")),1));return Dr(e,t)}}}},nh={kernelName:le,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{let t=e;const a=ei(n.shape,s);return a.length>0&&(t=Mo(t,a)),Qi(t,n.shape)},b:()=>{let t=e;const n=ei(a.shape,s);return n.length>0&&(t=Mo(t,n)),Qi(t,a.shape)}}}},ah={kernelName:ue,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},sh={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lr(n)}}},rh={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lr(n)}}},ih={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,zr(Yr(Pr(1),Or(Er(n,"float32")))))}}},oh={kernelName:me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=zr(Ar(Pr(1),Or(Er(n,"float32"))));return Dr(e,t)}}}},lh={kernelName:ye,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{const t=Ar(Or(n),Or(a));let r=_r(e,Dr(a,t));const i=ei(n.shape,s);return i.length>0&&(r=Mo(r,i)),Qi(r,n.shape)},b:()=>{const t=Ar(Or(n),Or(a));let r=al(_r(e,Dr(n,t)));const i=ei(a.shape,s);return i.length>0&&(r=Mo(r,i)),Qi(r,a.shape)}}}},uh={kernelName:ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,Ar(Or(Er(n,"float32")),1))}}},ch={kernelName:be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,Yr(Pr(1),Or(Er(n,"float32"))))}}},hh=Os({avgPool3dGrad_:function(e,t,n,a,s,r){const i=_s(e,"dy","avgPool3dGrad"),o=_s(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Qi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Qi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),k(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),k(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Zi("avgPool3dGrad",s,r);const h={dy:l,input:u},d={filterSize:n,strides:a,pad:s,dimRoundingMode:r},p=$s.runKernel(ve,h,d);return c?Qi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),dh={kernelName:we,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:s,strides:r,pad:i,dimRoundingMode:o}=n;return{x:()=>hh(e,a,s,r,i,o)}}},ph=Os({avgPoolGrad_:function(e,t,n,a,s){const r=_s(e,"dy","avgPoolGrad"),i=_s(t,"input","avgPoolGrad");k(i.rank===r.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`));let o=i,l=r,u=!1;3===i.rank&&(u=!0,o=Qi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Qi(r,[1,r.shape[0],r.shape[1],r.shape[2]])),k(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),k(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:a,pad:s},d=$s.runKernel(ke,c,h);return u?Qi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),fh={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:s,strides:r,pad:i}=n;return{x:()=>ph(e,a,s,r,i)}}},mh={kernelName:Ie,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,s]=t,{transposeA:r,transposeB:i}=n;return r||i?!r&&i?{a:()=>Yo(e,s,!1,!1),b:()=>Yo(e,a,!0,!1)}:r&&!i?{a:()=>Yo(s,e,!1,!0),b:()=>Yo(a,e,!1,!1)}:{a:()=>Yo(s,e,!0,!0),b:()=>Yo(e,a,!0,!0)}:{a:()=>Yo(e,s,!1,!0),b:()=>Yo(a,e,!0,!1)}}},gh=Os({spaceToBatchND_:function(e,t,n){const a=_s(e,"x","spaceToBatchND");k(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),k(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),k(a.shape.reduce(((e,a,s)=>s>0&&s<=t.length?e&&(a+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:a},r={blockShape:t,paddings:n};return $s.runKernel(Mn,s,r)}}),bh={kernelName:Se,gradFunc:(e,t,n)=>{const{blockShape:a,crops:s}=n;return{x:()=>gh(e,a,s)}}},yh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,s=a.inputShape,r=a.shape,i=Array.from(r);for(let e=s.length-1;e>=0;e--)if(s[e]===r[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${r}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Mo(e,o,!0)}}},xh={kernelName:Te,gradFunc:e=>({x:()=>e.clone()})},kh={kernelName:Ee,gradFunc:e=>({x:()=>Lr(e)})},wh={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:s,clipValueMax:r}=n;return{x:()=>Ll(Xo(Do(a,s),Cu(a,r)),e,Lr(e))}}},vh={kernelName:Fe,inputsToSave:["x"],gradFunc:Qc.gradFunc},Ih={kernelName:De,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:s}=n,r=R(s,t[0].shape)[0],i=a.map((e=>e[r]));return El(e,i,r).map((e=>()=>e))}},Sh={kernelName:_e,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,{dilations:r,strides:i,pad:o,dataFormat:l}=n;return k(Ki(r),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`)),{x:()=>go(a.shape,e,s,i,o,l),filter:()=>Hl(a,e,s.shape,i,o,l)}}},Ch={kernelName:Oe,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,{strides:r,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>fo(e,s,r,i,o,1,l),filter:()=>Hl(e,a,s.shape,r,i,o,l)}}},$h=Os({conv3DBackpropFilter_:function(e,t,n,a,s){let r=e;4===e.rank&&(r=Qi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Qi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),k(5===r.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`)),k(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),k(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),k(r.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${n[3]}.`)),k(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:r,dy:i},l={strides:a,pad:s,filterShape:n};return $s.runKernel(Me,o,l)}}),Nh={kernelName:Le,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:s,pad:r}=n;k(Ki(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const[i,o]=t;return{x:()=>xo(i.shape,e,o,s,r),filter:()=>$h(i,e,o.shape,s,r)}}},Th=Os({sin_:function(e){const t={x:_s(e,"x","sin","float32")};return $s.runKernel(An,t)}}),Eh={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(al(Th(Er(n,"float32"))),e)}}},Rh=Os({sinh_:function(e){const t={x:_s(e,"x","sinh")};return $s.runKernel(Fn,t)}}),Ah={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(Rh(Er(n,"float32")),e)}}},Fh=Os({cumsum_:function(e,t=0,n=!1,a=!1){const s={x:_s(e,"x","cumsum")},r={axis:t,exclusive:n,reverse:a};return $s.runKernel(Ve,s,r)}}),Dh={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s,exclusive:r,reverse:i}=n;return{x:()=>{const t=Go([s],a.rank);let n=Fh(e,s,r,!i);return null!=t&&(n=Bl(n,t)),n}}}},_h={kernelName:qe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:s,pad:r,dimRoundingMode:i}=n,o=null==a?[1,1]:a;k(Ki(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return k(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),k(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),k(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),k(Xi(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Zi("depthwiseConv2d",r,i),{x:()=>tu(l.shape,e,u,s,r,o,i),filter:()=>eu(l,e,u.shape,s,r,o,i)}}},zh={kernelName:Je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,r={x:a,filter:s,dy:e},i={x:a,filter:s,dy:e};return{x:()=>$s.runKernel(Ze,r,n),filter:()=>$s.runKernel(Qe,i,n)}}},Oh={kernelName:nt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>$s.runKernel(at,a)}}},Lh={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=_r($o(al(Or(n))),2/Math.sqrt(Math.PI));return{x:()=>_r(e,a)}}},Mh={kernelName:it,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,n)}}},Ph={kernelName:ot,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Qi(e,n.shape)}}},Bh={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,$o(n))}}},Wh={kernelName:dt,gradFunc:e=>({x:()=>Lr(e)})},Uh={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{const t=Dr(e,Er(a,"float32")),r=ei(n.shape,s);return r.length>0?Qi(Mo(t,r),n.shape):t},b:()=>{let t=_r(e,Er(n,"float32"));const r=ei(a.shape,s);r.length>0&&(t=Qi(Mo(t,r),a.shape));const i=Or(a);return al(Dr(t,Er(i,"float32")))}}}},Vh=Os({rsqrt_:function(e){const t={x:_s(e,"x","rsqrt","float32")};return $s.runKernel(Sn,t)}}),jh={kernelName:ft,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[s,r,i,o]=t,l=null==o?Pr(1):o,u=ei(r.shape,s.shape),c=[];if(1===r.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Yr(s,r),d=_r(e,l),p=Vh(Ar(i,Pr(a))),f=_r(_r(_r(p,p),p),Pr(-.5));return{x:()=>1===r.rank?Qi(_r(_r(e,To(Qi(p,[1,1,1,r.shape[0]]),c)),l),s.shape):Qi(_r(_r(e,p),l),s.shape),mean:()=>{let e=_r(_r(p,Pr(-1)),d);return 1===r.rank&&(e=Mo(e,u)),Qi(e,r.shape)},variance:()=>{let e=_r(_r(f,h),d);return 1===r.rank&&(e=Mo(e,u)),Qi(e,r.shape)},scale:()=>{const t=_r(h,p);let n=_r(e,t);return 1===r.rank&&(n=Mo(n,u)),Qi(n,r.shape)},offset:()=>{let t=e;return 1===r.rank&&(t=Mo(t,u)),Qi(t,r.shape)}}}},Gh=Os({unsortedSegmentSum_:function(e,t,n){const a=_s(e,"x","unsortedSegmentSum"),s=_s(t,"segmentIds","unsortedSegmentSum","int32");k(C(n),(()=>"numSegments must be of dtype int"));const r={x:a,segmentIds:s},i={numSegments:n};return $s.runKernel(la,r,i)}}),Hh={kernelName:mt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,s]=t,{axis:r,batchDims:i}=n,o=R(r,a.shape)[0],l=(e,t,n)=>()=>{const a=e.shape,s=t.size,i=a.slice(0,o),l=i.length,u=a.slice(r,a.length).slice(1),c=u.length,h=qh(0,l),d=qh(l+1,l+1+c),p=Kh([i,[s],u]),f=Qi(n,p),m=Qi(t,[s]),g=Kh([[l],h,d]),b=Bl(f,g);let y=Gh(b,m,e.shape[o]);const x=Ho(g);return y=Bl(y,x),y};if(1===i){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=Al(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>s}}return{x:l(a,s,e),indices:()=>s}}};function qh(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Kh(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Xh={kernelName:yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Lr(n),b:()=>Lr(a)}}},Yh={kernelName:xt,gradFunc:e=>({x:()=>Er(e,"float32")})},Jh={kernelName:vt,gradFunc:e=>({x:()=>Lr(e)})},Zh={kernelName:It,gradFunc:e=>({x:()=>Lr(e)})},Qh={kernelName:St,gradFunc:e=>({x:()=>Lr(e)})},ed={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:s}=n,r=Fo(a,0);return{x:()=>Ll(r,e,_r(e,s))}}},td={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,Ar(n,1))}}},nd={kernelName:Et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,Er(n,"float32"))}}},ad={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n;return{logits:()=>{const t=$o(a);return Yr(e,_r(Mo(e,s,!0),t))}}}},sd=Os({localResponseNormalizationBackprop_:function(e,t,n,a=5,s=1,r=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:a,bias:s,alpha:r,beta:i};return $s.runKernel(zt,o,l)}}),rd={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{depthRadius:r,bias:i,alpha:o,beta:l}=n;return{x:()=>sd(a,s,e,r,i,o,l)}}};function id(e,t,n,a){return t.rank<n.rank&&(t=Qi(t,Vo(t.shape,a))),e.rank<n.rank&&(e=Qi(e,Vo(e.shape,a))),{x:()=>_r(e,Er(So(n,t),e.dtype))}}const od={kernelName:Ot,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:s}=a,r=t[0],i=id(e,t[1],r,R(s,r.shape));return{x:()=>i.x()}}},ld={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>_r(e,Er(Do(n,a),"float32")),b:()=>_r(e,Er(Eu(n,a),"float32"))}}},ud=Os({maxPool3dGrad_:function(e,t,n,a,s,r,i){const o=_s(e,"dy","maxPool3dGrad"),l=_s(t,"input","maxPool3dGrad"),u=_s(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Qi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Qi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Qi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),k(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),k(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),k(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Zi("maxPool3dGrad",r,i);const f={dy:c,input:h,output:d},m={filterSize:a,strides:s,pad:r,dimRoundingMode:i},g=$s.runKernel(Wt,f,m);return p?Qi(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),cd={kernelName:Bt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ud(e,a,s,r,i,o,l)}}},hd=Os({maxPoolGrad_:function(e,t,n,a,s,r,i){const o=_s(e,"dy","maxPoolGrad"),l=_s(t,"input","maxPoolGrad"),u=_s(n,"output","maxPoolGrad");k(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),k(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),k(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Zi("maxPoolGrad",r,i);const c={dy:o,input:l,output:u},h={filterSize:a,strides:s,pad:r,dimRoundingMode:i};return $s.runKernel(Pt,c,h)}}),dd={kernelName:Mt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{filterSize:r,strides:i,pad:o}=n;return{x:()=>hd(e,a,s,r,i,o)}}},pd={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n,r=R(s,a.shape),i=I(Uo(a.shape,r)[1]);return{x:()=>{const t=a.shape.slice();r.forEach((e=>{t[e]=1}));const n=Qi(e,t);return Dr(_r(n,ol(a.shape,"float32")),i)}}}},fd={kernelName:jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:s}=a,[r,i]=t,o=id(e,i,r,R(s,r.shape));return{x:()=>o.x()}}},md={kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>_r(e,Er(Cu(n,a),"float32")),b:()=>_r(e,Er(Fo(n,a),"float32"))}}},gd={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:s}=n,r=s.map((e=>e[0]));return{x:()=>vl(e,r,a.shape)}}},bd={kernelName:qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{const t=ei(n.shape,s);return t.length>0?Qi(Mo(e,t),n.shape):e},b:()=>{const t=_r(e,al(Ro(Dr(n,a)))),r=ei(a.shape,s);return r.length>0?Qi(Mo(t,r),a.shape):t}}}},yd={kernelName:Xt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{const t=_r(e,Er(a,"float32")),r=ei(n.shape,s);return r.length>0?Qi(Mo(t,r),n.shape):t},b:()=>{const t=_r(e,Er(n,"float32")),r=ei(a.shape,s);return r.length>0?Qi(Mo(t,r),a.shape):t}}}},xd={kernelName:Yt,gradFunc:e=>({x:()=>al(e)})},kd={kernelName:nn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>il(n.shape,"float32")}}},wd={kernelName:tn,gradFunc:e=>({x:()=>Lr(e)})},vd={kernelName:an,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Ol(e,a).map((e=>()=>e))}},Id={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:s}=n,r=s.map((e=>e[0]));return{x:()=>vl(e,r,a.shape)}}},Sd={kernelName:rn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,s]=t,r=n,i=a,o=ti(r.shape,i.shape);return{a:()=>{const t=Er(i,"float32");let n=_r(e,_r(t,Xr(r,Yr(t,Pr(1)))));const a=ei(r.shape,o);return a.length>0&&(n=Mo(n,a)),Qi(n,r.shape)},b:()=>{const t=Fo(r,0),n=Ll(t,zo(r),Lr(r));let a=_r(e,_r(s,n));const l=ei(i.shape,o);return l.length>0&&(a=Mo(a,l)),Qi(a,i.shape)}}}},Cd={kernelName:on,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,s=Fo(n,0);return{x:()=>Ll(s,e,_r(e,a)),alpha:()=>{let t=Ll(s,Lr(e),_r(e,n));const r=ei(a.shape,e.shape);return r.length>0&&(t=Mo(t,r)),Qi(t,a.shape)}}}},$d=Os({cumprod_:function(e,t=0,n=!1,a=!1){const s={x:_s(e,"x","cumprod")},r={axis:t,exclusive:n,reverse:a};return $s.runKernel(Ue,s,r)}});const Nd={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n;let r=[];return r=null==s?a.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const a=e.shape.length,s=a-n.length,r=Go(n,a);let i=e;null!=r&&(i=Bl(e,r));const o=i.shape.slice(),l=o.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const a=e.shape.slice();a[n]=1;const s=Qi(t,a),r=$d(e,n,!0,!1),i=$d(e,n,!0,!0),o=_r(r,i);return _r(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=r){const e=Ho(r);u=Bl(u,e)}return u}(a,e,r)}}},Td={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{const t=Dr(e,Er(a,"float32")),r=ei(n.shape,s);return r.length>0?Qi(Mo(t,r),n.shape):t},b:()=>{let t=_r(e,Er(n,"float32"));const r=ei(a.shape,s);r.length>0&&(t=Qi(Mo(t,r),a.shape));const i=Or(a);return al(Dr(t,Er(i,"float32")))}}}},Ed={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,al(Or(n)))}}},Rd={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=_r(Cu(n,6),Kl(n));return{x:()=>_r(e,Er(a,"float32"))}}},Ad={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,Er(Kl(n),"float32"))}}},Fd={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(e,n.shape)}}},Dd={kernelName:xn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,s={dy:e,images:a};return{images:()=>$s.runKernel(kn,s,n)}}},_d={kernelName:bn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,s={dy:e,images:a};return{images:()=>$s.runKernel(yn,s,n)}}},zd={kernelName:vn,gradFunc:(e,t,n)=>{const{dims:a}=n,s=R(a,e.shape);return{x:()=>yl(e,s)}}},Od={kernelName:In,gradFunc:e=>({x:()=>Lr(e)})},Ld={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>al(Dr(e,_r(Xr(n,1.5),2)))}}},Md=Os({logicalNot_:function(e){const t={x:_s(e,"x","logicalNot","bool")};return $s.runKernel(Ft,t)}}),Pd={kernelName:Tn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Er(Lr(n),"float32"),t:()=>_r(e,Er(n,e.dtype)),e:()=>_r(e,Er(Md(n),e.dtype))}}},Bd={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fo(n,Pr(0)),a=Pr(lc),s=Pr(uc),r=_r(e,s),i=_r(_r(e,a),$o(Er(n,"float32")));return Ll(t,r,i)}}}},Wd={kernelName:_n,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,_r(n,Yr(Pr(1),n)))}}},Ud={kernelName:Dn,gradFunc:e=>({x:()=>Lr(e)})},Vd=Os({cos_:function(e){const t={x:_s(e,"x","cos","float32")};return $s.runKernel(Be,t)}}),jd={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(Vd(Er(n,"float32")),e)}}},Gd=Os({cosh_:function(e){const t={x:_s(e,"x","cosh","float32")};return $s.runKernel(We,t)}}),Hd={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(Gd(Er(n,"float32")),e)}}},qd={kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:s,size:r}=n,i=a.shape,[o,l]=Fi(a,s,r),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>ul(e,u)}}},Kd={kernelName:Bn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:s}=n,r=_r(e,a);return{logits:()=>Yr(r,_r(Mo(r,[s],!0),a))}}},Xd={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,wl(n))}}},Yd=Os({batchToSpaceND_:function(e,t,n){const a=_s(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));k(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),k(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),k(a.shape[0]%s==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const r={x:a},i={blockShape:t,crops:n};return $s.runKernel(Se,r,i)}}),Jd={kernelName:Mn,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:s}=n;return{x:()=>Yd(e,a,s)}}},Zd={kernelName:Pn,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>lo(e,a)}}},Qd=[Qc,eh,th,nh,ah,sh,rh,ih,oh,lh,uh,ch,dh,fh,mh,bh,yh,xh,kh,wh,vh,Ih,Ch,Sh,Nh,Eh,Ah,Dh,_h,zh,Td,Oh,Lh,Mh,Ph,Bh,Uh,Wh,jh,Hh,Xh,Yh,Jh,Zh,Qh,ed,td,nd,ad,rd,od,od,ld,cd,dd,pd,fd,md,gd,bd,yd,xd,kd,wd,vd,Id,Id,Sd,Cd,Nd,Ed,Rd,Ad,Fd,Dd,_d,zd,Od,Ld,Pd,Bd,Wd,Ud,jd,Hd,qd,Kd,Xd,Jd,Jd,Zd,Zd,{kernelName:On,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,_r(zr(Er(n,"float32")),2))}}},{kernelName:Hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=Pr(2);return{a:()=>_r(e,_r(s,Yr(n,a))),b:()=>_r(e,_r(s,Yr(a,n)))}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(e,_r(Er(n,"float32"),2))}}},{kernelName:ca,gradFunc:e=>({x:()=>Lr(e)})},{kernelName:Qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=ti(n.shape,a.shape);return{a:()=>{let t=e;const a=ei(n.shape,s);return a.length>0&&(t=Mo(t,a)),Qi(t,n.shape)},b:()=>{let t=e;const n=ei(a.shape,s);return n.length>0&&(t=Mo(t,n)),Qi(al(t),a.shape)}}}},{kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,s=a.shape.slice(),{axis:r}=n;R(r,a.shape).forEach((e=>{s[e]=1}));const i=Qi(e,s),o=_r(i,ol(a.shape,"float32"));return{x:()=>o}}},{kernelName:ea,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dr(e,Or(Vd(n)))}}},{kernelName:ta,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_r(Yr(Pr(1),Or(n)),e)}}},{kernelName:na,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:s}=n;return{x:()=>{let t=Lr(a);if(1===a.rank)for(let n=0;n<s[0];++n)t=Ar(t,vl(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)t=Ar(t,vl(e,[n*a.shape[0],r*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let i=0;i<s[2];++i)t=Ar(t,vl(e,[n*a.shape[0],r*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=Ar(t,vl(e,[n*a.shape[0],r*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:ra,gradFunc:(e,t,n)=>{const a=n,{perm:s}=a,r=Ho(s);return{x:()=>Bl(e,r)}}},{kernelName:oa,gradFunc:(e,t,n)=>{const a=n,{axis:s}=a;return{value:()=>Al(e,s)}}},{kernelName:la,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ni(t,Lr(t)),a=Ao(e,n);let s=Do(t,Pr(0,"int32"));const r=a.rank-s.rank;for(let e=0;e<r;++e)s=No(s,e+1);s=Xo(s,ol(a.shape,"bool"));const i=Lr(a);return Ll(s,a,i)}(e,n)}}},{kernelName:ua,gradFunc:e=>({x:()=>Lr(e)})}];for(const e of Qd)Ia(e);is().prototype.abs=function(){return this.throwIfDisposed(),Zr(this)};const ep=Os({acos_:function(e){const t={x:_s(e,"x","acos")};return $s.runKernel(ie,t)}});is().prototype.acos=function(){return this.throwIfDisposed(),ep(this)};const tp=Os({acosh_:function(e){const t={x:_s(e,"x","acosh")};return $s.runKernel(oe,t)}});is().prototype.acosh=function(){return this.throwIfDisposed(),tp(this)},is().prototype.add=function(e){return this.throwIfDisposed(),Ar(this,e)},is().prototype.all=function(e,t){return this.throwIfDisposed(),zi(this,e,t)},is().prototype.any=function(e,t){return this.throwIfDisposed(),Oi(this,e,t)},is().prototype.argMax=function(e){return this.throwIfDisposed(),Li(this,e)};const np=Os({argMin_:function(e,t=0){const n={x:_s(e,"x","argMin")},a={axis:t};return $s.runKernel(pe,n,a)}});is().prototype.argMin=function(e){return this.throwIfDisposed(),np(this,e)},is().prototype.asScalar=function(){return this.throwIfDisposed(),k(1===this.size,(()=>"The array must have only 1 element.")),Qi(this,[])},is().prototype.asType=function(e){return this.throwIfDisposed(),Er(this,e)},is().prototype.as1D=function(){return this.throwIfDisposed(),Qi(this,[this.size])},is().prototype.as2D=function(e,t){return this.throwIfDisposed(),Qi(this,[e,t])},is().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Qi(this,[e,t,n])},is().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),Qi(this,[e,t,n,a])},is().prototype.as5D=function(e,t,n,a,s){return this.throwIfDisposed(),Qi(this,[e,t,n,a,s])};const ap=Os({asin_:function(e){const t={x:_s(e,"x","asin")};return $s.runKernel(fe,t)}});is().prototype.asin=function(){return this.throwIfDisposed(),ap(this)};const sp=Os({asinh_:function(e){const t={x:_s(e,"x","asinh")};return $s.runKernel(me,t)}});is().prototype.asinh=function(){return this.throwIfDisposed(),sp(this)};const rp=Os({atan_:function(e){const t={x:_s(e,"x","atan")};return $s.runKernel(ge,t)}});is().prototype.atan=function(){return this.throwIfDisposed(),rp(this)};const ip=Os({atan2_:function(e,t){let n=_s(e,"a","atan2"),a=_s(t,"b","atan2");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(ye,s)}});is().prototype.atan2=function(e){return this.throwIfDisposed(),ip(this,e)};const op=Os({atanh_:function(e){const t={x:_s(e,"x","atanh")};return $s.runKernel(be,t)}});is().prototype.atanh=function(){return this.throwIfDisposed(),op(this)},is().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),eo(this,e,t,n,a)},is().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Yd(this,e,t)},is().prototype.batchNorm=function(e,t,n,a,s){return this.throwIfDisposed(),no(this,e,t,n,a,s)},is().prototype.broadcastTo=function(e){return this.throwIfDisposed(),io(this,e)},is().prototype.cast=function(e){return this.throwIfDisposed(),Er(this,e)};const lp=Os({ceil_:function(e){const t={x:_s(e,"x","ceil","float32")};return $s.runKernel(Ee,t)}});is().prototype.ceil=function(){return this.throwIfDisposed(),lp(this)},is().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),oo(this,e,t)},is().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof rs&&(e=[e]),lo([this,...e],t)},is().prototype.conv1d=function(e,t,n,a,s,r){return this.throwIfDisposed(),mo(this,e,t,n,a,s,r)},is().prototype.conv2dTranspose=function(e,t,n,a,s){return this.throwIfDisposed(),bo(this,e,t,n,a,s)},is().prototype.conv2d=function(e,t,n,a,s,r){return this.throwIfDisposed(),fo(this,e,t,n,a,s,r)},is().prototype.cos=function(){return this.throwIfDisposed(),Vd(this)},is().prototype.cosh=function(){return this.throwIfDisposed(),Gd(this)},is().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),$d(this,e,t,n)},is().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Fh(this,e,t,n)};const up=Os({depthToSpace_:function(e,t,n="NHWC"){const a=_s(e,"x","depthToSpace","float32"),s="NHWC"===n?a.shape[1]:a.shape[2],r="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];k(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),k(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),k(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),k(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));const o={x:a},l={blockSize:t,dataFormat:n};return $s.runKernel(He,o,l)}});is().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),up(this,e,t)},is().prototype.depthwiseConv2d=function(e,t,n,a,s,r){return this.throwIfDisposed(),vo(this,e,t,n,a,s,r)};const cp=Os({dilation2d_:function(e,t,n,a,s=[1,1],r="NHWC"){const i=_s(e,"x","dilation2d"),o=_s(t,"filter","dilation2d");k(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),k(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),k("NHWC"===r,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`));let l=i,u=!1;3===i.rank&&(l=Qi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),k(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:a,dilations:s},d=$s.runKernel(Je,c,h);return u?Qi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});is().prototype.dilation2d=function(e,t,n,a,s){return this.throwIfDisposed(),cp(this,e,t,n,a,s)};const hp=Os({divNoNan_:function(e,t){let n=_s(e,"a","div"),a=_s(t,"b","div");[n,a]=ys(n,a);const s=Dr(n,a),r=Lr(s),i=So(a,r);return Ll(i,r,s)}});is().prototype.divNoNan=function(e){return this.throwIfDisposed(),hp(this,e)},is().prototype.div=function(e){return this.throwIfDisposed(),Dr(this,e)};const dp=Os({dot_:function(e,t){const n=_s(e,"t1","dot"),a=_s(t,"t2","dot");k(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const s=1===n.rank?n.size:n.shape[1],r=1===a.rank?a.size:a.shape[0];if(k(s===r,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${r}.`)),1===n.rank&&1===a.rank){const e=Qi(n,[1,-1]),t=Qi(a,[-1,1]),s=Yo(e,t);return Qi(s,[])}if(1===n.rank&&2===a.rank){const e=Qi(n,[1,-1]),t=Qi(a,[a.shape[0],a.shape[1]]),s=Yo(e,t);return Qi(s,[s.size])}if(2===n.rank&&1===a.rank){const e=Qi(a,[-1,1]),t=Yo(n,e);return Qi(t,[t.size])}{const e=Qi(a,[a.shape[0],a.shape[1]]);return Yo(n,e)}}});is().prototype.dot=function(e){return this.throwIfDisposed(),dp(this,e)},is().prototype.elu=function(){return this.throwIfDisposed(),Io(this)},is().prototype.equal=function(e){return this.throwIfDisposed(),So(this,e)},is().prototype.erf=function(){return this.throwIfDisposed(),Co(this)};const pp=Os({euclideanNorm_:function(e,t=null,n=!1){return Fu(e,"euclidean",t,n)}});is().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},is().prototype.exp=function(){return this.throwIfDisposed(),$o(this)},is().prototype.expandDims=function(e){return this.throwIfDisposed(),No(this,e)};const fp=Os({expm1_:function(e){const t={x:_s(e,"x","expm1")};return $s.runKernel(lt,t)}});is().prototype.expm1=function(){return this.throwIfDisposed(),fp(this)},is().prototype.fft=function(){return this.throwIfDisposed(),Ul(this)},is().prototype.flatten=function(){return this.throwIfDisposed(),Qi(this,[this.size])},is().prototype.floor=function(){return this.throwIfDisposed(),Ro(this)},is().prototype.floorDiv=function(e){return this.throwIfDisposed(),Fr(this,e)},is().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Ao(this,e,t,n)},is().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Do(this,e)},is().prototype.greater=function(e){return this.throwIfDisposed(),Fo(this,e)},is().prototype.ifft=function(){return this.throwIfDisposed(),jl(this)},is().prototype.irfft=function(){return this.throwIfDisposed(),Gl(this)};const mp=Os({isFinite_:function(e){const t={x:_s(e,"x","isFinite")};return $s.runKernel(vt,t)}});is().prototype.isFinite=function(){return this.throwIfDisposed(),mp(this)};const gp=Os({isInf_:function(e){const t={x:_s(e,"x","isInf")};return $s.runKernel(It,t)}});is().prototype.isInf=function(){return this.throwIfDisposed(),gp(this)};const bp=Os({isNaN_:function(e){const t={x:_s(e,"x","isNaN")};return $s.runKernel(St,t)}});is().prototype.isNaN=function(){return this.throwIfDisposed(),bp(this)},is().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_o(this,e)},is().prototype.lessEqual=function(e){return this.throwIfDisposed(),Cu(this,e)},is().prototype.less=function(e){return this.throwIfDisposed(),Eu(this,e)};const yp=Os({localResponseNormalization_:function(e,t=5,n=1,a=1,s=.5){const r=_s(e,"x","localResponseNormalization");k(4===r.rank||3===r.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${r.rank}.`)),k(C(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=r,o=!1;3===r.rank&&(o=!0,i=Qi(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:a,beta:s},c=$s.runKernel(_t,l,u);return o?Qi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});is().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),yp(this,e,t,n,a)};const xp=Os({logSigmoid_:function(e){const t=_s(e,"x","logSigmoid");return Mr((e=>({value:al(Tl(al(e))),gradFunc:t=>_r(t,wl(al(e)))})))(t)}});is().prototype.logSigmoid=function(){return this.throwIfDisposed(),xp(this)},is().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Po(this,e)},is().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)},is().prototype.log=function(){return this.throwIfDisposed(),zo(this)},is().prototype.log1p=function(){return this.throwIfDisposed(),Oo(this)},is().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Xo(this,e)},is().prototype.logicalNot=function(){return this.throwIfDisposed(),Md(this)};const kp=Os({logicalOr_:function(e,t){const n=_s(e,"a","logicalOr","bool"),a=_s(t,"b","logicalOr","bool");ti(n.shape,a.shape);const s={a:n,b:a};return $s.runKernel(Dt,s)}});is().prototype.logicalOr=function(e){return this.throwIfDisposed(),kp(this,e)};const wp=Os({logicalXor_:function(e,t){const n=_s(e,"a","logicalXor","bool"),a=_s(t,"b","logicalXor","bool");return ti(n.shape,a.shape),Xo(kp(e,t),Md(Xo(e,t)))}});is().prototype.logicalXor=function(e){return this.throwIfDisposed(),wp(this,e)},is().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Yo(this,e,t,n)},is().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),Jo(this,e,t,n,a)},is().prototype.max=function(e,t){return this.throwIfDisposed(),Lo(this,e,t)},is().prototype.maximum=function(e){return this.throwIfDisposed(),ni(this,e)},is().prototype.mean=function(e,t){return this.throwIfDisposed(),Qo(this,e,t)},is().prototype.min=function(e,t){return this.throwIfDisposed(),el(this,e,t)},is().prototype.minimum=function(e){return this.throwIfDisposed(),tl(this,e)};const vp=Os({mirrorPad_:function(e,t,n){k("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=_s(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<a.rank;e++)k(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),k(t[e][0]>=0&&t[e][0]<=a.shape[e]-s&&t[e][1]>=0&&t[e][1]<=a.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-s} or less than 0 for input of shape ${a.shape}`));const r={paddings:t,mode:n},i={x:a};return $s.runKernel(Ht,i,r)}});is().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),vp(this,e,t)};const Ip=Os({mod_:function(e,t){let n=_s(e,"a","mod"),a=_s(t,"b","mod");[n,a]=ys(n,a);const s={a:n,b:a};return $s.runKernel(qt,s)}});is().prototype.mod=function(e){return this.throwIfDisposed(),Ip(this,e)},is().prototype.mul=function(e){return this.throwIfDisposed(),_r(this,e)},is().prototype.neg=function(){return this.throwIfDisposed(),al(this)},is().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Fu(this,e,t,n)},is().prototype.notEqual=function(e){return this.throwIfDisposed(),sl(this,e)},is().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),rl(this,e,t,n)},is().prototype.onesLike=function(){return this.throwIfDisposed(),ll(this)},is().prototype.pad=function(e,t){return this.throwIfDisposed(),ul(this,e,t)};const Sp=Os({pool_:function(e,t,n,a,s,r,i){null==s&&(s=[1,1]),null==r&&(r=1),0===a&&(a="valid");const o=_s(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Qi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(Xi(r,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`));const c=Pi(l.shape,t,r,s,a),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),s=n.map((e=>e[1])),r=e.concat(a,s),i=t.map(((e,t)=>(e-r[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[a[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),g=p?a:"valid",b=p?l:gh(l,h,f),y=("avg"===n?()=>eo(b,t,r,g,i):()=>Jo(b,t,r,g,i))(),x=p?y:Yd(y,h,m);return u?Qi(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});is().prototype.pool=function(e,t,n,a,s,r){return this.throwIfDisposed(),Sp(this,e,t,n,a,s,r)},is().prototype.pow=function(e){return this.throwIfDisposed(),Xr(this,e)},is().prototype.prelu=function(e){return this.throwIfDisposed(),cl(this,e)};const Cp=Os({prod_:function(e,t=null,n=!1){let a=_s(e,"x","prod");"bool"===a.dtype&&(a=Er(a,"int32"));const s={x:a},r={axis:t,keepDims:n};return $s.runKernel(ln,s,r)}});is().prototype.prod=function(e,t){return this.throwIfDisposed(),Cp(this,e,t)};const $p=Os({reciprocal_:function(e){const t={x:_s(e,"x","reciprocal")};return $s.runKernel(fn,t)}});is().prototype.reciprocal=function(){return this.throwIfDisposed(),$p(this)},is().prototype.relu=function(){return this.throwIfDisposed(),bl(this)},is().prototype.relu6=function(){return this.throwIfDisposed(),ql(this)},is().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Qi(this,e.shape)},is().prototype.reshape=function(e){return this.throwIfDisposed(),Qi(this,e)},is().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),vu(this,e,t,n)},is().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Iu(this,e,t,n)},is().prototype.reverse=function(e){return this.throwIfDisposed(),yl(this,e)},is().prototype.rfft=function(){return this.throwIfDisposed(),Vl(this)},is().prototype.round=function(){return this.throwIfDisposed(),$u(this)},is().prototype.rsqrt=function(){return this.throwIfDisposed(),Vh(this)},is().prototype.selu=function(){return this.throwIfDisposed(),xl(this)},is().prototype.separableConv2d=function(e,t,n,a,s,r){return this.throwIfDisposed(),kl(this,e,t,n,a,s,r)},is().prototype.sigmoid=function(){return this.throwIfDisposed(),wl(this)};const Np=Os({sign_:function(e){const t={x:_s(e,"x","sign")};return $s.runKernel(Dn,t)}});is().prototype.sign=function(){return this.throwIfDisposed(),Np(this)},is().prototype.sin=function(){return this.throwIfDisposed(),Th(this)},is().prototype.sinh=function(){return this.throwIfDisposed(),Rh(this)},is().prototype.slice=function(e,t){return this.throwIfDisposed(),vl(this,e,t)},is().prototype.softmax=function(e){return this.throwIfDisposed(),Nl(this,e)},is().prototype.softplus=function(){return this.throwIfDisposed(),Tl(this)},is().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},is().prototype.split=function(e,t){return this.throwIfDisposed(),El(this,e,t)},is().prototype.sqrt=function(){return this.throwIfDisposed(),zr(this)},is().prototype.square=function(){return this.throwIfDisposed(),Or(this)},is().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Lu(this,e)},is().prototype.squeeze=function(e){return this.throwIfDisposed(),Rl(this,e)},is().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof rs?[this,e]:[this,...e];return Al(n,t)},is().prototype.step=function(e){return this.throwIfDisposed(),Kl(this,e)};const Tp=Os({stridedSlice_:function(e,t,n,a,s=0,r=0,i=0,o=0,l=0){const u={x:_s(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:a,beginMask:s,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return $s.runKernel(Xn,u,c)}});is().prototype.stridedSlice=function(e,t,n,a,s,r,i,o){return this.throwIfDisposed(),Tp(this,e,t,n,a,s,r,i,o)},is().prototype.sub=function(e){return this.throwIfDisposed(),Yr(this,e)},is().prototype.sum=function(e,t){return this.throwIfDisposed(),Mo(this,e,t)};const Ep=Os({tan_:function(e){const t={x:_s(e,"x","tan","float32")};return $s.runKernel(ea,t)}});is().prototype.tan=function(){return this.throwIfDisposed(),Ep(this)},is().prototype.tanh=function(){return this.throwIfDisposed(),Fl(this)},is().prototype.tile=function(e){return this.throwIfDisposed(),To(this,e)},is().prototype.toBool=function(){return this.throwIfDisposed(),Er(this,"bool")},is().prototype.toFloat=function(){return this.throwIfDisposed(),Er(this,"float32")},is().prototype.toInt=function(){return this.throwIfDisposed(),Er(this,"int32")};const Rp=Os({topk_:function(e,t=1,n=!0){const a=_s(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const r={x:a},i={k:t,sorted:n},[o,l]=$s.runKernel(aa,r,i);return{values:o,indices:l}}});is().prototype.topk=function(e,t){return this.throwIfDisposed(),Rp(this,e,t)},is().prototype.transpose=function(e){return this.throwIfDisposed(),Bl(this,e)};const Ap=Os({unique_:function(e,t=0){const n=_s(e,"x","unique","string_or_numeric");k(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},s={axis:t},[r,i]=$s.runKernel(ia,a,s);return{values:r,indices:i}}});is().prototype.unique=function(e){return this.throwIfDisposed(),Ap(this,e)},is().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},is().prototype.unstack=function(e){return this.throwIfDisposed(),Ol(this,e)},is().prototype.where=function(e,t){return this.throwIfDisposed(),Ll(e,this,t)},is().prototype.zerosLike=function(){return this.throwIfDisposed(),Lr(this)};class Fp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fp.prototype)}}class Dp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Dp.prototype)}}class _p extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_p.prototype)}}class zp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zp.prototype)}}class Op extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Op.prototype)}}Error;class Lp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Mp(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Pp(e,t){if(!e)throw new Op(t)}function Bp(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Wp(e){return 1===e.length?e[0]:e}function Up(e){return Array.isArray(e)?e:[e]}function Vp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function jp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Gp={};function Hp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function qp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>qp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?qp(t):e[n]=t.value)}}}function Kp(e,t={},n={},a="object",s=!1){if("string"==typeof e){const s=e;let r;if(s in n)r=n[s];else if(s in Gp)r=Gp[s];else if(r=t[s],null==r)throw new _p(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}{const r=e;if(null==r.className||null==r.config)throw new _p(`${a}: Improper config format: ${JSON.stringify(r)}.\n'className' and 'config' must set.`);const i=r.className;let o,l;if(i in n?[o,l]=n[i]:i in Gp?[o,l]=Gp.className:i in t&&([o,l]=t[i]),null==o)throw new _p(`Unknown ${a}: ${i}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Gp))e[t]=Gp[t];for(const t of Object.keys(n))e[t]=n[t];r.config.customObjects=e;const t=Object.assign({},Gp);for(const e of Object.keys(n))Gp[e]=n[e];qp(r.config);const a=l(o,r.config,n,s);return Gp=Object.assign({},t),a}{const e=Object.assign({},Gp);for(const e of Object.keys(n))Gp[e]=n[e];const t=new o(r.config);return Gp=Object.assign({},e),t}}}function Xp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Yp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Jp(e){if(null==e)throw new _p(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Zp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new _p(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Qp(e,t,n=0,a=1/0){return Pp(n>=0),Pp(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function ef(e,t){Array.isArray(e)?(k(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ef(e,`element ${n+1} of ${t}`)))):k(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${tf(e)}.`))}function tf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>tf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function nf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let af=0;function sf(){return af++}const rf={};function of(e=""){return e in rf||(rf[e]=0),rf[e]+=1,e+rf[e].toString()}const lf=["channelsFirst","channelsLast"],uf=["nearest","bilinear"],cf=["valid","same","causal"],hf=["max","avg"],df=["sum","mul","concat","ave"],pf=new Map;function ff(e){Zp(lf,"DataFormat",e)}function mf(e){Zp(cf,"PaddingMode",e)}function gf(e){Zp(hf,"PoolMode",e)}const bf=[];function yf(e,t){bf.push(e);try{const e=t();return bf.pop(),e}catch(e){throw bf.pop(),e}}function xf(e){if(!vf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===bf.length?"":bf.join("/")+"/")+e}function kf(e){if(!vf(e))throw new Error("Not a valid tensor name: '"+e+"'");pf.has(e)||pf.set(e,0);const t=pf.get(e);if(pf.set(e,pf.get(e)+1),t>0){const n=`${e}_${t}`;return pf.set(n,1),n}return e}const wf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function vf(e){return!!e.match(wf)}function If(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let s=t;s<n;++s)a*=e[s];return a}function Sf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Cf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function $f(e,t){if(t<e)throw new _p(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Nf;function Tf(){return null==Nf&&(Nf=$s.backend.epsilon()),Nf}function Ef(e,t){return Er(e,t)}function Rf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Qi(e,n)}function Af(e,t,n){return js((()=>{switch(e.rank){case 1:return Il(e,t,n);case 2:return Sl(e,[t,0],[n,e.shape[1]]);case 3:return Cl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return $l(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return vl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return vl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new _p(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ff(e,t,n){return js((()=>{switch(e.rank){case 1:return Il(e,t,n);case 2:return Sl(e,[0,t],[e.shape[0],n]);case 3:return Cl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return $l(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new _p(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Df(e,t,n,a){return js((()=>{switch(e.rank){case 1:return Il(e,t,n);case 2:switch(a){case 1:return Af(e,t,n);case 2:return Ff(e,t,n);default:throw new _p(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return Af(e,t,n);case 2:return Cl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ff(e,t,n);default:throw new _p(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return Af(e,t,n);case 2:return $l(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return $l(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ff(e,t,n);default:throw new _p(`The axis is not within the rank of the tensor ${a}`)}default:throw new _p(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function _f(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),lo(e,t)}function zf(e,t){switch(e.rank){case 1:return uo([e,t]);case 2:return co([e,t],0);case 3:return ho([e,t],0);case 4:return po([e,t],0);default:throw new _p(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Of(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new _p(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return To(e,t)}function Lf(e,t=0,n=1,a,s){return fl(e,t,n,a,s)}function Mf(e,t,n,a){if(e.rank<2||t.rank<2)throw new zp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new zp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return nu({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Wf(e.rank,a,"channelsLast"):null,activation:n});{const s=e.shape.slice(),r=s.pop();e=Qi(e,[-1,r]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Qi(Bl(t,c),[l,-1]);const h=[...s,...u];return Qi(nu({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Wf(e.rank,a,"channelsLast"):null,activation:n}),h)}}function Pf(e,t,n){return js((()=>(t=Array.isArray(t)?Dl(t,"int32"):Er(t,"int32"),Ao(e,t,n))))}function Bf(e){return _r(e,e)}function Wf(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new _p(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?Qi(t,[1,a[0],1,1,1]):Qi(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Qi(t,[1,1,1,1,a[0]]):Qi(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?Qi(t,[1,a[0],1,1]):Qi(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Qi(t,[1,1,1,a[0]]):Qi(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?Qi(t,[1,a[0],1]):Qi(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Qi(t,[1,1,a[0]]):Qi(t,[1].concat(a))}else if(e<3)return t;throw new _p(`Unsupported input rank by biasAdd: ${t.rank}`)}function Uf(e,t,n){return js((()=>(null==n&&(n="channelsLast"),ff(n),Ar(e,Wf(e.rank,t,n)))))}function Vf(e,t,n,a){return js((()=>Wl(e,t,n,a)))}function jf(e,t,n=!1){return n?e():t()}const Gf=["fanIn","fanOut","fanAvg"],Hf=["normal","uniform","truncatedNormal"];class qf extends Ur{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Kf extends qf{apply(e,t){return il(e,t)}}Kf.className="Zeros",jr(Kf);class Xf extends qf{apply(e,t){return ol(e,t)}}Xf.className="Ones",jr(Xf);class Yf extends qf{constructor(e){if(super(),"object"!=typeof e)throw new _p(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new _p(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return js((()=>_r(Pr(this.value),ol(e,t))))}getConfig(){return{value:this.value}}}Yf.className="Constant",jr(Yf);class Jf extends qf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ml(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Jf.className="RandomUniform",jr(Jf);class Zf extends qf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zp(`randomNormal does not support dType ${t}.`);return Lf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zf.className="RandomNormal",jr(Zf);class Qf extends qf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zp(`truncatedNormal does not support dType ${t}.`);return zl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Qf.className="TruncatedNormal",jr(Qf);class em extends qf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return js((()=>{if(2!==e.length||e[0]!==e[1])throw new _p("Identity matrix initializer can only be used for 2D square matrices.");return _r(this.gain,Eo(e[0]))}))}getConfig(){return{gain:this.gain}}}em.className="Identity",jr(em);class tm extends qf{constructor(e){if(super(),e.scale<0)throw new _p(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Zp(Gf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Zp(Hf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,a;if(ff(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=If(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){const t=If(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{const t=If(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],s=n[1];let r=this.scale;if("fanIn"===this.mode?r/=Math.max(1,a):"fanOut"===this.mode?r/=Math.max(1,s):r/=Math.max(1,(a+s)/2),"normal"===this.distribution){const n=Math.sqrt(r);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zp(`${this.getClassName()} does not support dType ${t}.`);return zl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*r);return ml(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}tm.className="VarianceScaling",jr(tm);class nm extends tm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return tm.className}}nm.className="GlorotUniform",jr(nm);class am extends tm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return tm.className}}am.className="GlorotNormal",jr(am);class sm extends tm{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return tm.className}}sm.className="HeNormal",jr(sm);class rm extends tm{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return tm.className}}rm.className="HeUniform",jr(rm);class im extends tm{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return tm.className}}im.className="LeCunNormal",jr(im);class om extends tm{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return tm.className}}om.className="LeCunUniform",jr(om);class lm extends qf{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return js((()=>{if(e.length<2)throw new zp("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=I(e.slice(0,-1)),a=e[e.length-1],s=n*a;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const r=Lf([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),i=Pu.qr(r,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return o=_r(o,l.sign()),n<a&&(o=o.transpose()),_r(Pr(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}lm.className="Orthogonal",jr(lm);const um={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function cm(e,t={}){return Kp(e,Vr.getMap().classNameMap,t,"initializer")}function hm(e){return Hp(e)}function dm(e){if("string"==typeof e){const t=e in um?um[e]:e;if("GlorotNormal"===t)return new am;if("GlorotUniform"===t)return new nm;if("HeNormal"===t)return new sm;if("HeUniform"===t)return new rm;if("LeCunNormal"===t)return new im;if("LeCunUniform"===t)return new om;{const e={};return e.className=t,e.config={},cm(e)}}return e instanceof qf?e:cm(e)}function pm(e){return Array.isArray(e)&&Array.isArray(e[0])}function fm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function mm(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new _p(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function gm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new _p(`Expected exactly 1 Shape; got ${e.length}`)}return e}function bm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const ym="Variable";class xm{constructor(e,t="float32",n=ym,a=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=sf(),n=null==n?ym:n,this.originalName=xf(n),this.name=kf(this.originalName),this.trainable_=a,this.constraint=s,this.val=function(e,t=!0,n,a){return $s.makeVariable(e,t,n,a)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function km(e){return e.map((e=>e.read()))}function wm(e){e.forEach((e=>{e[0].write(e[1])}))}class vm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Im{constructor(e,t,n,a,s,r,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=s,this.outputTensorIndex=i,this.id=sf(),null!=r&&(this.originalName=xf(r),this.name=kf(this.originalName)),this.rank=t.length}}let Sm=0;class Cm{constructor(e,t){this.callArgs=t,this.id=Sm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let $m=0;class Nm extends Ur{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$m++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Vp(e)+"_"+of(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Dp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new _p(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Wp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Wp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Fp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Fp(`Layer ${this.name} is not connected, no input to return.`);return Wp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Fp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Fp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Wp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Up(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Up(this.inputSpec);if(t.length!==n.length)throw new _p(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const a=t[e],s=n[e];if(null==s)continue;const r=a.rank;if(null!=s.ndim&&r!==s.ndim)throw new _p(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${r}`);if(null!=s.maxNDim&&r>s.maxNDim)throw new _p(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${r}`);if(null!=s.minNDim&&r<s.minNDim)throw new _p(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${r}.`);if(null!=s.dtype&&a.dtype!==s.dtype)throw new _p(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){const t=a.shape;for(const n in s.axes){const a=Number(n),r=s.axes[n],i=a>=0?t[a]:t[t.length+a];if(null!=r&&-1===[r,null].indexOf(i))throw new _p(`Input ${e} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${r} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],r=a.shape[t];if(null!=n&&null!=r&&n!==r)throw new _p(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Up(e),a=function(e){let t=!0;for(const n of Up(e))if(!(n instanceof Im)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Up(e))if(n instanceof Im){t=!1;break}return t}(e);if(a===s)throw new _p("Arguments to apply() must be all SymbolicTensors or all Tensors");return yf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Up(e))t.push(n.shape);this.build(Wp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const s=Up(a),r=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),r.push(e);if(a=Wp(r),null!=this.activityRegularizer)throw new zp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Up(e);const t=[];for(const n of e)t.push(n.shape);return Wp(t)}(e),a=this.computeOutputShape(n);let s;const r="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Im(r,n,this,Up(e),t,this.name,a))):new Im(r,a,this,Up(e),t,this.name),this.addInboundNode(e,s,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new zp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Fp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Fp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Dp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return bm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return km(e?this.trainableWeights:this.weights)}setWeights(e){js((()=>{const t=this.weights;if(t.length!==e.length)throw new _p(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=km(t);for(let s=0;s<a.length;++s){const r=a[s],i=t[s],o=e[s];if(!S(r.shape,o.shape))throw new _p(`Layer weight shape ${r.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}wm(n)}))}addWeight(e,t,n,a,s,r,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new _p(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():dm("zeros"));const l=a.apply(t,n),u=new xm(l,n,e,r,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==r&&(r=!0),r?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Up(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),s=Up(t),r=Up(a);if(s.length!==r.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=r[e]}addInboundNode(e,t,n,a,s,r,i=null){const o=Up(e);t=Up(t),n=Up(n),a=Up(a),s=fm(s),r=fm(r);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Cm({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:s,outputShapes:r},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Tm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Tm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Em extends Nm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:of("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new _p("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new _p("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new _p("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Im(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new _p(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Em.className="InputLayer",jr(Em);class Rm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Rm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new _p(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Er(t,e.dtype)}catch(n){throw new _p(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Im){if(null==this.id2Value[e.id])throw new _p(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new _p(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Im){if(null==this.id2Value[e.id])throw new _p(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new _p(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Gs(this.id2Mask)}}const Am=new Lp,Fm=new Lp;function Dm(e,t,n,a){const s=null!=n&&n.training,r=Array.isArray(e),i=r?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Am.get(c);if(null==d){const e=function(e,t){k(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const s=zm(e[0],t);n=s.sorted,a=s.recipientMap}else{const s=new Set;for(const r of e){const{sorted:e,recipientMap:i}=zm(r,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==a[e]&&(a[e]=new Set),i[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:_m(a)}}(i,t);d=e.sorted,h=e.recipientCounts,Am.put(c,d),Fm.put(c,h)}h={},s||Object.assign(h,Fm.get(c));const p=new Rm(t);for(let e=0;e<d.length;++e){if(null!=a){const e=Vs().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const r=d[e],i=r.sourceLayer;if(i instanceof Em)continue;const u=[],c=[],f=[];let m=!1;for(const e of r.inputs){const n=p.getValue(e),a=p.getMask(e);u.push(n),c.push(a),null!=a&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Up(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=Om(r),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||Gs(f)}return p.disposeMasks(),r?l:l[0]}function _m(e){const t={};for(const n in e)t[n]=e[n].size;return t}function zm(e,t){const n=new Set,a=[],s={};for(const e of t.names())n.add(e);const r=[],i=[];for(r.push(e);r.length>0;){const e=r[r.length-1];if(n.has(e.name)){r.pop();continue}const t=i[i.length-1]===r.length-1;if(0===e.inputs.length||t)r.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(r.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||r.push(t)}}return{sorted:a,recipientMap:s}}function Om(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Lm(e,t){return js((()=>zr(Mo(_r(e,e),t,!0))))}ee().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Am&&Am.setMaxEntries(e),null!=Fm&&Fm.setMaxEntries(e)}));class Mm extends Ur{getConfig(){return{}}}class Pm extends Mm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return js((()=>{const t=Lm(e,this.axis),n=oo(t,0,this.maxValue);return _r(e,Dr(n,Ar(Tf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Pm.className="MaxNorm",jr(Pm);class Bm extends Mm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return js((()=>Dr(e,Ar(Tf(),Lm(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Bm.className="UnitNorm",jr(Bm);class Wm extends Mm{apply(e){return bl(e)}}Wm.className="NonNeg",jr(Wm);class Um extends Mm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return js((()=>{const t=Lm(e,this.axis),n=Ar(_r(this.rate,oo(t,this.minValue,this.maxValue)),_r(1-this.rate,t));return _r(e,Dr(n,Ar(Tf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Um.className="MinMaxNorm",jr(Um);const Vm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function jm(e){return Hp(e)}function Gm(e,t={}){return Kp(e,Vr.getMap().classNameMap,t,"constraint")}function Hm(e){return null==e?null:"string"==typeof e?Gm({className:e in Vm?Vm[e]:e,config:{}}):e instanceof Mm?e:Gm(e)}async function qm(e){if(null==e)return;const t=[],n=[],a=[];for(const s in e){const r=e[s];if("number"!=typeof r){const e=r;t.push(e.data()),n.push(s),a.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Gs(a)}}function Km(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Xm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Xm||(Xm={}));class Ym{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Jm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Zm extends Ym{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=js((()=>Ar(this.totals[e],_r(a,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:js((()=>{const n=_r(Dr(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Hs(t[e])})))}}class Qm extends Ym{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const s=this.history[a];for(let r=0;r<s.length;++r)if("number"!=typeof s[r]){const i=s[r];e.push(i.data()),t.push(a),n.push(r)}}const a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}}class eg extends Ym{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Uu,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");L(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,s=null!=n?n():Ua();return(...r)=>{const i=null!=n?n():Ua();return i-s<t||(s=i,a=e(...r)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await qm(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await qm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await qm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await qm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await qm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):L(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await qm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await qm(e),await this.trainEnd(e))}}function tg(e,t){return null==e&&(e={}),e instanceof Ym?[e]:Array.isArray(e)&&e[0]instanceof Ym?e:Up(e).map((e=>new eg(e,t)))}class ng{constructor(){}static registerCallbackConstructor(e,t){k(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ng.checkForDuplicate(t),null==ng.constructors[e]&&(ng.constructors[e]=[]),ng.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ng.constructors)ng.constructors[+t].forEach((t=>{if(t===e)throw new _p("Duplicate callback constructor.")}))}static clear(){ng.constructors={}}static createCallbacks(e){const t=[];for(const n in ng.constructors){const a=+n;e>=a&&t.push(...ng.constructors[a])}return t.map((e=>new e))}}function ag(e,t,n,a,s,r,i,o,l){const u=new Qm,c=[new Zm,...ng.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Jm(c);return h.setParams({epochs:n,initialEpoch:a,samples:s,steps:r,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function sg(e,t={},n=!1){return Kp(e,Vr.getMap().classNameMap,t,"layer",n)}function rg(e,t){return js((()=>{"float32"!==e.dtype&&(e=Er(e,"float32"));const n=Mo(Bf(e),t,!0),a=qr(n.shape,Tf()),s=zr(ni(n,a));return Dr(e,s)}))}function ig(e,t){return js((()=>Qo(Bf(Yr(t,e)),-1)))}function og(e,t){return js((()=>Qo(Zr(Yr(t,e)),-1)))}function lg(e,t){return js((()=>{const n=Yr(e,t),a=oo(Zr(e),Tf(),Number.MAX_VALUE),s=Zr(Dr(n,a));return _r(100,Qo(s,-1))}))}function ug(e,t,n=!1){return js((()=>{if(n)t=Nl(t);else{const e=Mo(t,t.shape.length-1,!0);t=Dr(t,e)}return t=oo(t,Tf(),1-Tf()),al(Mo(_r(Er(e,"float32"),zo(t)),t.shape.length-1))}))}function cg(e,t,n=!1){return js((()=>{const a=Er(Ro(function(e){const t=[If(e.shape)];return Qi(e,t)}(e)),"int32"),s=(t=oo(t,Tf(),1-Tf())).shape;return ug(Qi(rl(a,s[s.length-1]),s),t,n)}))}function hg(e,t){return js((()=>{let n;return n=oo(t,Tf(),1-Tf()),n=zo(Dr(n,Yr(1,n))),Qo(function(e,t){if(!S(e.shape,t.shape))throw new _p(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return js((()=>{const n=bl(t),a=al(Zr(t));return Ar(Yr(n,_r(t,e)),Oo($o(a)))}))}(e,n),-1)}))}function dg(e,t){return js((()=>{const n=rg(e,-1),a=rg(t,-1),s=_r(n,a);return al(Mo(s,-1))}))}ng.constructors={};const pg={meanSquaredError:ig,meanAbsoluteError:og,meanAbsolutePercentageError:lg,meanSquaredLogarithmicError:function(e,t){return js((()=>{const n=oo(t,Tf(),Number.MAX_VALUE),a=zo(Ar(1,n)),s=oo(e,Tf(),Number.MAX_VALUE),r=zo(Ar(1,s));return Qo(Bf(Yr(a,r)),-1)}))},squaredHinge:function(e,t){return js((()=>{const n=ni(0,Yr(1,_r(e,t)));return Qo(Bf(n),-1)}))},hinge:function(e,t){return js((()=>{const n=ni(0,Yr(1,_r(e,t)));return Qo(n,-1)}))},categoricalHinge:function(e,t){return js((()=>{const n=Mo(_r(e,t),-1),a=Lo(_r(Yr(1,e),t),-1);return ni(0,Ar(1,Yr(a,n)))}))},logcosh:function(e,t){return js((()=>{const n=Math.log(2),a=Yr(t,e),s=Yr(Ar(a,Tl(_r(-2,a))),n);return Qo(s,-1)}))},categoricalCrossentropy:ug,sparseCategoricalCrossentropy:cg,binaryCrossentropy:hg,kullbackLeiblerDivergence:function(e,t){return js((()=>{const n=oo(e,Tf(),1),a=oo(t,Tf(),1);return Mo(_r(e,zo(Dr(n,a))),-1)}))},poisson:function(e,t){return js((()=>{const n=zo(Ar(Tf(),t));return Qo(Yr(t,_r(e,n)),-1)}))},cosineProximity:dg};function fg(e){if("string"==typeof e){if(e in pg)return pg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new _p(t)}return e}function mg(e,t){return js((()=>{const n=_r(.5,ll(t)),a=Ef(Fo(t,n),e.dtype);return Qo(So(e,a),-1)}))}function gg(e,t){return js((()=>Ef(So(Li(e,-1),Li(t,-1)),"float32")))}function bg(e,t){return hg(e,t)}function yg(e,t){return e.rank===t.rank&&(e=Rl(e,[e.rank-1])),(t=Li(t,-1)).dtype!==e.dtype&&(t=Er(t,e.dtype)),Er(So(e,t),"float32")}const xg=ug,kg=cg,wg={binaryAccuracy:mg,categoricalAccuracy:gg,precision:function(e,t){return js((()=>{const n=function(e,t){return js((()=>Er(Mo(Xo(So(e,1),So(t,1))),"float32")))}(e,t),a=function(e,t){return js((()=>Er(Mo(Xo(So(e,0),So(t,1))),"float32")))}(e,t),s=Ar(n,a);return Er(Ll(Fo(s,0),Dr(n,s),0),"float32")}))},categoricalCrossentropy:xg,sparseCategoricalCrossentropy:kg,mse:ig,MSE:ig,mae:og,MAE:og,mape:lg,MAPE:lg,cosine:dg};function vg(e){if("string"==typeof e&&e in wg)return wg[e];if("string"!=typeof e&&null!=e)return e;throw new _p(`Unknown metric ${e}`)}function Ig(e){if(Pp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(pg))if(pg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(wg))if(wg[n]===e){t=n;break}return void 0!==t?t:e.name}}function Sg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Cg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Cg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Cg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Cg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function $g(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function Ng(e,t,n){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}$g([`${e.name} (${e.getClassName()})`,s,a,e.countParams().toString()],t,n)}function Tg(e,t,n,a){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,a=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${a}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];$g([`${o} (${l})`,r,s,e.countParams().toString(),u],t,a);for(let e=1;e<i.length;++e)$g(["","","","",i[e]],t,a)}function Eg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Rg(e,t){if(null===e)return null;if("string"==typeof e)return jp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];Eg(t,s,a)?n.push(a):n.push(Rg(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"==typeof a)t[n]=a;else{const e=jp(n);t[e]=Rg(a,e)}}return t}}function Ag(e,t){if(null==e)return null;if("string"==typeof e)return Vp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];Eg(t,s,a)?n.push(a):n.push(Ag(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];t[Vp(n)]="name"!==n&&"className"!==n||"string"!=typeof a?Ag(a,n):a}return t}}const Fg="4.22.0";class Dg extends Nm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=of(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Yp(this.inputs).length!==this.inputs.length)throw new _p(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Yp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;Pp(0===n,"input layer has >1 nodes"),Pp(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Em))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},s={},r={},i=[],o=(e,t,n,a,s,l)=>{null!=a&&null!=s&&null!=l||(a=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=a.inboundNodes[s];if(-1!==n.indexOf(u))throw new Dp(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Dg.nodeKey(a,s)),a.id in r||(r[a.id]=Object.keys(r).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const a=u.inputTensors[e],s=u.inboundLayers[e],r=u.nodeIndices[e],i=u.tensorIndices[e];o(a,t,n,s,r,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let r=t[e.id];const i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];r=Math.max(r,i),a[e.outboundLayer.id]=r,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=r;for(let a=0;a<e.inboundLayers.length;a++){const s=e.inboundLayers[a],i=e.nodeIndices[a],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(r+1,l),n[o.id]=o}}const h={};for(const e in t){const a=t[e];a in h||(h[a]=[]),h[a].push(n[e])}const d={};for(const e in a){const t=a[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Xp);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=r[e.id],a=r[t.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof Dg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Xp);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Dp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Dp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new _p("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let a=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,r]of e.weights.entries()){const e=s?`${r.name.split("/").slice(0,-1).join("/")+"/"}${t}`:r.originalName;if(null!=n[e])throw new _p(`Duplicate weight name: ${e}`);n[e]=r,a++}const r=[];for(const a in e){let s=a;if(null==n[a]){const e=a.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])r.push([n[s],e[a]]);else if(t)throw new _p(`Provided weight data has no target variable: ${a}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new _p(`${e.length} of ${a} weights are not set: ${e}`)}wm(r)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Fg}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ag(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return js((()=>{e=Up(e);const n=new Rm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Dm(this.outputs,n,t)}))}computeMask(e,t){return js((()=>{let n;return e=Up(e),n=null==t?Mp(null,e.length):Up(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=fm(e);if(t.length!==this.inputLayers.length)throw new _p(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const a=this.inputLayers[e],s=t[e];n[a.name+"_0_0"]=s}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xp);if(a.length>1)for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const a=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],r=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${r}_${i}`];a.push(o)}const s=fm(t.computeOutputShape(Wp(a))),r=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${r}_${e}`]=s[e]}}const s=[],r=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${a}`;r.push(s)}for(let e=0;e<r.length;e++){const t=r[e];Pp(t in n),s.push(n[t])}return Wp(s)}runInternalGraph(e,t){null==t&&(t=Mp(null,e.length));const n={};for(let a=0;a<this.inputs.length;++a){const s=this.inputs[a],r=e[a],i=t[a];n[s.id]=[r,i]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xp);for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,s=e.outputTensors,r=new Array;for(const e of a)e.id in n&&r.push(n[e.id]);if(r.length===a.length){let a,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===r.length){const[e,n]=r[0];null==u.mask&&(u.mask=n),o=Up(t.call(e,u)),l=Up(t.computeMask(e,n)),a=[e],i=[n]}else a=r.map((e=>e[0])),i=r.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Up(t.call(a,u)),l=Up(t.computeMask(a,i));if(t.activityRegularizer)throw new zp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],a=o[e],r=l[e];n[t.id]=[a,r]}}}}const s=[],r=[],i=[];for(const e of this.outputs){Pp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,a]=n[e.id];i.push(t.shape),s.push(t),r.push(a)}return[s,r,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Dg?1:0;for(let a=0;a<e.inboundNodes.length;a++){const s=Dg.nodeKey(e,a);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new _p("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new _p(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new _p(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return js((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Dg.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const a=e.getClassName(),s=e.getConfig(),r=[];for(let n=0;n<e.inboundNodes.length;n++){const a=e.inboundNodes[n],s=Dg.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(a.callArgs)try{JSON.stringify(a.callArgs),i=a.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(a.inboundLayers.length>0){const e=[];for(let n=0;n<a.inboundLayers.length;n++){const s=a.inboundLayers[n],r=a.nodeIndices[n],o=a.tensorIndices[n];let l=t[Dg.nodeKey(s,r)];null==l&&(l=0),e.push([s.name,l,o,i])}r.push(e)}}}const i={};i.name=e.name,i.className=a,i.config=s,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],r=Dg.nodeKey(n,s);if(!this.containerNodes.has(r))continue;let i=t[r];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];a.push([n.name,i,o])}e.inputLayers=a;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],r=Dg.nodeKey(n,a);if(!this.containerNodes.has(r))continue;let i=t[r];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},a=!1){const s={},r={};function i(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let a;for(const r of t){const o=r[0],l=r[1],u=r[2];if(a=null==r[3]?{}:r[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Wp(n),a)}function l(e){const n=e.name,r=sg(e,null!=t.customObjects?t.customObjects:{});r.setFastWeightInitDuringBuild(a),s[n]=r,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new _p(`Corrupted configuration, expected array for nodeData: ${e}`);i(r,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Jp(r);)for(const e of c){const t=s[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],a=e[2];Pp(t in s);const r=s[t].inboundNodes[n].outputTensors;h.push(r[a])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],a=e[2];Pp(t in s);const r=s[t].inboundNodes[n].outputTensors;d.push(r[a])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new _p("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){js((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function _g(e,t){return function(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function zg(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=js((()=>{if(1===e.shape.length)return Rr(e);if(2===e.shape.length){if(e.shape[1]>1)return Li(e,1);if(1===e.shape[1])return Qi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());Gs(t);const s=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Dl(s,"float32")}return null}function Og(e,t){return _r(e,t)}function Lg(e,t){let n,a;const s=t;n=s.xs,a=s.ys,k(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const r=Mg("input",e.inputNames,n),i=Mg("output",e.outputNames,a),o=r[0].shape[0];k(r.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),k(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<r.length;t++)k(r[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${r[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)k(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:r,ys:i}}function Mg(e,t,n){if(n instanceof rs)return[n];if(Array.isArray(n))return k(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const a=[];for(const s of t){if(null==n[s])throw new _p(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);a.push(n[s])}return a}}function Pg(e){return"function"==typeof e.iterator}function Bg(e){k(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Wg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Af(e,t,n-t))):Af(e,t,n-t)}function Ug(e,t){return js((()=>null==e?null:Array.isArray(e)?e.map((e=>Ug(e,t))):Pf(e,"int32"===t.dtype?t:Er(t,"int32"))))}function Vg(e,t){const n=[];let a=0,s=null;for(;a<e;)s=a+t,s>=e&&(s=e),n.push([a,s]),a=s;return n}function jg(e){const t=[];e instanceof rs&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(Rf(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Gg(e,t){if(null==e)return;const n=[];if(t instanceof rs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const a=t[e];n.push(a.id)}const a=[];if(e instanceof rs)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&a.push(s)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function Hg(e){return Array.isArray(e)}function qg(e){return!function(e){return e instanceof rs}(e)&&!Hg(e)}function Kg(e,t,n,a=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Hg(e)&&e.length>0)t=!0;else if(qg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new _p(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let r;if(qg(e)){r=[];for(const n of t){if(null==e[n])throw new _p(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(Hg(e)){if(e.length!==t.length)throw new _p(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new _p(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=jg(r),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new _p(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const r=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&r!==o)throw new _p(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function Xg(e,t,n,a=!0,s=""){let r;if(Array.isArray(e)){if(e.length!==t.length)throw new _p(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new _p(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new _p(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let r=0;r<n[e].length;++r){if(0===r&&!a)continue;const o=i.shape[r],l=n[e][r];if(null!=l&&l!==o)throw new _p(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Yg extends Dg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new _p("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,a=console.log){const s=function(e){let t=!0;const n=[],a=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==a.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),r=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){r.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}a("_".repeat(t)),$g(r,n,a),a("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Ng(o[e],n,a):Tg(o[e],n,i,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?bm(e.collectedTrainableWeights):bm(e.trainableWeights),t}(e),u=bm(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Bu.adagrad(.01),Adadelta:()=>Bu.adadelta(1,.95,Tf()),Adam:()=>Bu.adam(.001,.9,.999,Tf()),Adamax:()=>Bu.adamax(.002,.9,.999,Tf(),0),RMSProp:()=>Bu.rmsprop(.001,.9,0,Tf()),SGD:()=>Bu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new _p(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Gr))throw new _p("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new _p(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>fg(e)))}else{const n=fg(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new _p(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(fg(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],yf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};yf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,r;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===hg?-1!==["accuracy","acc"].indexOf(i)?a=mg:-1!==["crossentropy","ce"].indexOf(i)&&(a=bg):this.lossFunctions[e]===cg?-1!==["accuracy","acc"].indexOf(i)?a=yg:-1!==["crossentropy","ce"].indexOf(i)&&(a=kg):-1!==["accuracy","acc"].indexOf(i)?a=gg:-1!==["crossentropy","ce"].indexOf(i)&&(a=xg),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),r=a,n=""+s}else{const e=vg(i);r=e,n=""+Ig(i)}let t;yf(n,(()=>{t=r})),s(e,n,t)}})(a[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const a=null==n.batchSize?32:n.batchSize;Bg(a);const s=this.standardizeUserDataXY(e,t,!0,a);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Wp(this.testLoop(t,e,a,n.verbose,n.steps))}finally{Gg(s[0],e),Gg(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,s=e.testFunction;let r=[];if(n.verbose>0)throw new zp("Verbose mode is not implemented yet.");k(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!a||l<n.batches;){const t=await i.next();if(r=js((()=>{if(t.value){const{xs:n,ys:a}=Lg(e,t.value),i=n.concat(a),u=js((()=>s(i)));if(Gs(i),0===l)for(let e=0;e<u.length;++e)r.push(Pr(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=r[e];r[e]=js((()=>Ar(r[e],_r(c,t)))),l>0&&Gs(n)}Gs(u),o+=c,++l}return r})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<r.length;++e){const t=r[e];r[e]=Dr(r[e],o),Gs(t)}return Wp(r)}(this,e,t)}checkNumSamples(e,t,n,a="steps"){let s;if(null!=n){if(s=null,null!=t)throw new _p(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new _p(`Either the input data should have a defined shape, or ${a} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new _p("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],s=this.retrieveSymbolicTensors(a),r=new Rm;if(e instanceof rs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new _p(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)r.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new _p(`No value is provided for the model's input ${t.name}`);r.add(t,n)}const i=Dm(s,r);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Mp(null,e.length);let n=e.length;for(const a of this.layers){const s=Array.isArray(a.output)?a.output:[a.output],r=s.map((e=>e.name));for(let a=0;a<e.length;++a){const i=r.indexOf(e[a]);if(-1!==i&&(t[a]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new _p(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return js((()=>{const a=this.checkNumSamples(e);if(n)throw new zp("Verbose predictLoop() is not implemented yet.");const s=Vg(a,t),r=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)js((()=>{const n=s[t][0],a=s[t][1],r=Wg(e,n,a),i=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)i.push({key:this.inputs[e],value:r[e]});else i.push({key:this.inputs[0],value:r});const o=new Rm(i);return Dm(this.outputs,o)})).forEach(((e,t)=>r[t].push(e)));return Wp(r.map((e=>lo(e,0))))}))}predict(e,t={}){const n=jg(e);Xg(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Bg(e),this.predictLoop(n,e)}finally{Gg(n,e)}}predictOnBatch(e){Xg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new Dp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===cg?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Yp(e.map((e=>e.shape[0])));n.sort();const a=Yp(t.map((e=>e.shape[0])));if(a.sort(),n.length>1)throw new _p(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new _p(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&a.length>0&&!S(n,a))throw new _p(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Kg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Kg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const a=[ig,hg,ug];for(let s=0;s<e.length;++s){const r=e[s],i=t[s],o=n[s];if(null!=i){if(i===ug&&1===r.shape[r.shape.length-1])throw new _p(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){const e=r.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],s=t[n];if(null!=s&&a!==s)throw new _p(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new _p(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,s=!0,r){const[i,o]=this.standardizeUserDataXY(e,t,s,r);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=a){const e=_g(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await zg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,a=0,s){return js((()=>{const r=this.checkNumSamples(t,n,s,"steps"),i=[];if(a>0)throw new zp("Verbose mode is not implemented yet.");if(null!=s)throw new zp("steps mode in testLoop() is not implemented yet");{const a=Vg(r,n),s=Dl($f(0,r));for(let n=0;n<a.length;++n){const r=a[n][0],o=a[n][1],l=Af(s,r,o-r),u=Ug(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Pr(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ar(i[e],_r(o-r,t))}}for(let e=0;e<i.length;++e)i[e]=Dr(i[e],r)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let s=a;Bp(e,a)>1&&(s+=`_${Bp(e.slice(0,n),a)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),r=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Rm(e),o=Dm(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(a[e],o[e]);null!=s[e]&&(n=Og(n,s[e]));const r=Qo(n);t.push(r),l=0===e?n:Ar(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Qo(t(a[s],o[s]))}Hs(n),r.push(n)}return l=Qo(l),this.calculateLosses().forEach((e=>{l=Ar(l,e)})),l}),!0,i)].concat(r)}}makeTestFunction(){this.testFunction=e=>js((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let e=0;e<this.inputs.length;++e)r.push({key:this.inputs[e],value:a[e]});const i=new Rm(r),o=Dm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],r=Qo(a(s[e],o[e]));n=0===e?r:Ar(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],r=Qo(n(s[a],o[a]));t.push(r)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,r,i,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Bg(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);a=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new zp("validationData including sample weights is not supported yet."):new _p(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-n.validationSplit)),t=a[0].shape[0];u=Wg(a,e,t),r=a,a=Wg(a,0,e),c=Wg(s,e,t),i=s,s=Wg(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const b=a.concat(s).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let k,w;g?(this.makeTestFunction(),k=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(k=null,m=[],w=x.slice());const v=tg(n.callbacks,n.yieldEvery);return await this.fitLoop(y,b,x,d,n.epochs,n.verbose,v,k,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,Gg(a,e),Gg(s,t),Gg(r,e),Gg(i,t),Gg(u,o),Gg(c,l),null!=h&&Gs(h)}}async fitLoop(e,t,n,a,s,r,i,o,l,u,c,h,d,p){null==a&&(a=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new _p("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let b;null!=m&&(b=$f(0,m)),null==r&&(r=1);const{callbackList:y,history:x}=ag(i,r,s,h,m,d,a,f,c);y.setModel(this),this.history=x,await y.onTrainBegin(),this.stopTraining_=!1;for(let r=h;r<s;++r){await y.onEpochBegin(r);const s={};if(null!=d)throw new zp("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new zp("batch shuffling is not implemneted yet");u&&g(b);const r=Dl(b),i=Vg(m,a);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),js((()=>{const h=i[u][0],d=i[u][1],p=Af(r,h,d-h);c.batch=u,c.size=d-h;const m=Ug(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];c[t]=a,Hs(a)}if(u===i.length-1&&f){const e=this.testLoop(o,l,a);for(let t=0;t<n.length;++t){const a=n[t],r=e[t];Hs(r),s["val_"+a]=r}}})),await y.onBatchEnd(u,c),Km(c),this.stopTraining_)break}r.dispose()}if(await y.onEpochEnd(r,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const a=null!=n.batchesPerEpoch;if(k(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),k(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),k(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),k(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),k(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let r,i;if(s)if(Pg(n.validationData))k(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new zp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);r=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=tg(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=ag(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(a||(m=await t.iterator());!a||c<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:s}=Lg(e,t.value),r={};r.batch=h,r.size=a[0].shape[0],await d.onBatchBegin(h,r);const i=[];if(null!=n.classWeight){const t=_g(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await zg(s[e],null,t[e]))}const u=a.concat(s).concat(i),p=o(u);Gs(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];r[t]=n,Hs(n)}await d.onBatchEnd(h,r),Km(r),h++,c++}if(a?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Pg(n.validationData)?Up(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Up(e.evaluate(r,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],s=n[1],r=this.makeTrainFunction()(a.concat(s)),i=[];for(const e of r){const t=await e.data();i.push(t[0])}return Gs(r),Gg(n[0],e),Gg(n[1],t),Wp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Vs().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Vs().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Vp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Vp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Vp(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Vp(Ig(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Vp(Ig(e))));{const e={};for(const t in this.metrics)e[t]=Vp(Ig(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=sg(Rg(e.optimizer_config));let n,a;if("string"==typeof e.loss)n=jp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>jp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=jp(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>jp(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=jp(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,ar.getSaveHandlers(n));if(0===t.length)throw new _p(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new _p(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new _p("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await Ks(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Fg}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ks(await this.optimizer.getWeights(),e);a.specs.push(...n),a.data=(r=[a.data,t],Ws.join(r))}var r;if(null!=this.userDefinedMetadata){const e=!0;Sg(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=a.data,s.weightSpecs=a.specs,e.save(s)}setUserDefinedMetadata(e){Sg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Yg.className="Model",jr(Yg);class Jg extends Yg{}async function Zg(e,t){if(null==t&&(t={}),"string"==typeof e){const s=(n=e,a=t,ar.getLoadHandlers(n,a));if(0===s.length)s.push(function(e,t){return mi(e,t)}(e,t));else if(s.length>1)throw new _p(`Found more than one (${s.length}) load handlers for URL '${e}'`);e=s[0]}var n,a;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new _p("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const a=await e.load();let s=a.modelTopology;null!=s.model_config&&(s=s.model_config);const r=null==n.strict||n.strict,i=null!=a.weightData&&null!=a.weightSpecs&&r,o=sg(Rg(s),void 0,i),l=a.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=a.userDefinedMetadata&&o.setUserDefinedMetadata(a.userDefinedMetadata),null!=a.weightData){if(null==a.weightSpecs)throw new _p("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n=new Ws(e),a={};let s=0;for(const e of t){const t=Xs(e,((e,t)=>n.slice(s+e,s+t)));a[e.name]=Ys(e,n.slice(s,s+t)),s+=t}return a}(e,t),a={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):a[e.name]=n[e.name]})),{modelWeights:a,optimizerWeights:s}}(a.weightData,a.weightSpecs);o.loadWeights(e,r),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Gs(e),Gs(t.map((e=>e.tensor)))}return o}(e,0,t)}Jg.className="Functional",jr(Jg);class Qg extends Yg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:of("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new _p(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Qg||e instanceof Yg;let n;if(t){if(n=e,1!==n.outputs.length)throw new _p("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new _p("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new _p("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new _p("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Em({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new _p(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new _p("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Tm(this.outputs[0])}this.inboundNodes=[],new Cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Mp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(gm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Dp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Dp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Dp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Dp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let s,r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new _p("Legacy serialization format not supported yet.");s=t}else k(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,r=t;const i=new e(r);if(!(i instanceof Qg))throw new zp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=sg(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new _p("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new _p("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Qg.className="Sequential",jr(Qg);class eb extends Ur{getConfig(){return{}}}class tb extends eb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new zp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Io(e)}(e,t)}}tb.className="elu",jr(tb);class nb extends eb{apply(e){return xl(e)}}nb.className="selu",jr(nb);class ab extends eb{apply(e){return bl(e)}}ab.className="relu",jr(ab);class sb extends eb{apply(e){return js((()=>tl(6,bl(e))))}}sb.className="relu6",jr(sb);class rb extends eb{apply(e){return e}}rb.className="linear",jr(rb);class ib extends eb{apply(e){return wl(e)}}ib.className="sigmoid",jr(ib);class ob extends eb{apply(e){return function(e){return js((()=>{const t=Ar(.5,_r(.2,e));return oo(t,0,1)}))}(e)}}ob.className="hardSigmoid",jr(ob);class lb extends eb{apply(e){return Tl(e)}}lb.className="softplus",jr(lb);class ub extends eb{apply(e){return function(e){return js((()=>Dr(e,Ar(Zr(e),1))))}(e)}}ub.className="softsign",jr(ub);class cb extends eb{apply(e){return Fl(e)}}cb.className="tanh",jr(cb);class hb extends eb{apply(e,t=-1){return Nl(e,t)}}hb.className="softmax",jr(hb);class db extends eb{apply(e,t=-1){return Po(e,t)}}db.className="logSoftmax",jr(db);class pb extends eb{apply(e){return js((()=>js((()=>{const t=Math.sqrt(2),n=_r(.5,Ar(1,Co(Dr(e,t))));return _r(e,n)}))))}}pb.className="gelu",jr(pb);class fb extends eb{apply(e){return js((()=>_r(.5,_r(e,Ar(1,Fl(_r(zr(Dr(2,Math.PI)),Ar(e,_r(.044715,Xr(e,3))))))))))}}fb.className="gelu_new",jr(fb);class mb extends eb{apply(e){return js((()=>_r(e,Fl(Tl(e)))))}}mb.className="mish",jr(mb);class gb extends eb{apply(e,t=1){return js((()=>_r(wl(_r(e,t)),e)))}}function bb(e){return e.getClassName()}function yb(e,t={}){return Kp(e,Vr.getMap().classNameMap,t,"activation")}function xb(e){if(null==e){return yb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},yb(t)}return e instanceof eb?e:yb(e)}gb.className="swish",jr(gb);class kb extends Ur{}class wb extends kb{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return js((()=>{let t=il([1]);return this.hasL1&&(t=Ar(t,Mo(_r(this.l1,Zr(e))))),this.hasL2&&(t=Ar(t,Mo(_r(this.l2,Bf(e))))),Qi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}wb.className="L1L2",jr(wb);const vb={l1l2:"L1L2"};function Ib(e){return Hp(e)}function Sb(e,t={}){return Kp(e,Vr.getMap().classNameMap,t,"regularizer")}function Cb(e){return null==e?null:"string"==typeof e?Sb({className:e in vb?vb[e]:e,config:{}}):e instanceof kb?e:Sb(e)}class $b extends Nm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=mm(e);let n=bl(e);return null!=this.maxValue&&(n=oo(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}$b.className="ReLU",jr($b);class Nb extends Nm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=mm(e);return _o(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Nb.className="LeakyReLU",jr(Nb);class Tb extends Nm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=dm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Cb(e.alphaRegularizer),this.alphaConstraint=Hm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new _p(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=gm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new vm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=mm(e),cl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:hm(this.alphaInitializer),alphaRegularizer:Ib(this.alphaRegularizer),alphaConstraint:jm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Tb.className="PReLU",jr(Tb);class Eb extends Nm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new zp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=mm(e);return Io(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Eb.className="ELU",jr(Eb);class Rb extends Nm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=mm(e);return _r(n,Er(Fo(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Rb.className="ThresholdedReLU",jr(Rb);class Ab extends Nm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new hb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return js((()=>{let n=mm(e);const a=t.mask;if(null!=a){const e=_r(Yr(ol(n.shape),Er(a,n.dtype)),Pr(-1e9));n=Ar(n,e)}return this.axis instanceof Array?this.axis.length>1?$o(Yr(n,Ko(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Fb(e,t,n){if("number"==typeof e)return Mp(e,t);if(e.length!==t)throw new _p(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if((a=r)!==parseInt(a.toString(),10))throw new _p(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e;var a}function Db(e,t,n,a,s=1){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((r+a-1)/a)}function _b(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Cf([n-t,0]);else{if("same"!==a)throw new _p(`Unsupport padding mode: ${a}.`);e*=t}return e}function zb(e,t){return js((()=>(ff(t),"channelsFirst"===t?Bl(e,[0,2,3,1]):e)))}function Ob(e,t){return js((()=>(ff(t),"channelsFirst"===t?Bl(e,[0,2,3,4,1]):e)))}function Lb(e,t,n,a=[1,1],s="valid",r,i,o=null){return js((()=>{if(null==r&&(r="channelsLast"),ff(r),3!==e.rank&&4!==e.rank)throw new _p(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new _p(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=zb(e,r);if("causal"===s)throw new zp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ql({x:l,filter:t,strides:a,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===r&&(l=Bl(l,[0,3,1,2])),l}))}Ab.className="Softmax",jr(Ab);class Mb extends Nm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Mb.verifyArgs(t),this.rank=e,ef(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new zp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Fb(t.kernelSize,e,"kernelSize"),this.strides=Fb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,mf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ff(this.dataFormat),this.activation=xb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=dm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Hm(t.biasConstraint),this.biasRegularizer=Cb(t.biasRegularizer),this.activityRegularizer=Cb(t.activityRegularizer),this.dilationRate=Fb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new _p(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new _p(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new _p(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Pp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Qp(e.kernelSize,"number",1,3))throw new _p(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:bb(this.activation),useBias:this.useBias,biasInitializer:hm(this.biasInitializer),biasRegularizer:Ib(this.biasRegularizer),activityRegularizer:Ib(this.activityRegularizer),biasConstraint:jm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Pb extends Mb{constructor(e,t){super(e,t),this.kernel=null,Pb.verifyArgs(t),this.filters=t.filters,ef(this.filters,"filters"),this.kernelInitializer=dm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Hm(t.kernelConstraint),this.kernelRegularizer=Cb(t.kernelRegularizer)}build(e){e=gm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new _p(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return js((()=>{let t;e=mm(e);const n=null==this.bias?null:this.bias.read(),a=nf(this.activation.getClassName());if(null!=a&&2===this.rank)t=Lb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,s="valid",r,i=1){return js((()=>{if(null==r&&(r="channelsLast"),ff(r),3!==e.shape.length)throw new _p(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new _p(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new _p(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===r&&(e=Bl(e,[0,2,1])),"causal"===s)throw new zp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=mo(e,t,a,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Uf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Lb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new zp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,a=[1,1,1],s="valid",r,i){return js((()=>{if(null==r&&(r="channelsLast"),ff(r),4!==e.rank&&5!==e.rank)throw new _p(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new _p(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Ob(e,r);if("causal"===s)throw new zp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=yo(o,t,a,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Uf(o,n)),"channelsFirst"===r&&(o=Bl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=gm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const a=Db(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:hm(this.kernelInitializer),kernelRegularizer:Ib(this.kernelRegularizer),kernelConstraint:jm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new _p(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Bb extends Pb{constructor(e){super(2,e),Bb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Qp(e.kernelSize,"number",1,2))throw new _p(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Bb.className="Conv2D",jr(Bb);class Wb extends Pb{constructor(e){super(3,e),Wb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new _p(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Wb.className="Conv3D",jr(Wb);class Ub extends Bb{constructor(e){if(super(e),this.inputSpec=[new vm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new _p(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=gm(e)).length)throw new _p("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new _p("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return js((()=>{let t=mm(e);if(4!==t.shape.length)throw new _p(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let s,r;"channelsFirst"===this.dataFormat?(s=2,r=3):(s=1,r=2);const i=n[s],o=n[r],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[a,_b(i,c,l,this.padding),_b(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Bl(t,[0,2,3,1]));let p=bo(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Bl(p,[0,3,1,2])),null!=this.bias&&(p=Uf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=gm(e)).slice();let n,a,s;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3):(n=3,a=1,s=2);const r=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=_b(t[a],o,r,this.padding),t[s]=_b(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ub.className="Conv2DTranspose",jr(Ub);class Vb extends Wb{constructor(e){if(super(e),this.inputSpec=[new vm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new _p(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=gm(e)).length)throw new _p("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new _p("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return js((()=>{let t=mm(e);if(5!==t.shape.length)throw new _p(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let s,r,i;"channelsFirst"===this.dataFormat?(i=2,s=3,r=4):(i=1,s=2,r=3);const o=n[i],l=n[s],u=n[r],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,_b(o,p,c,this.padding),_b(l,f,h,this.padding),_b(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Bl(t,[0,2,3,4,1]));let b=ko(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Bl(b,[0,4,1,2,3])),null!==this.bias&&(b=Uf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=gm(e)).slice();let n,a,s,r;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3,r=4):(n=4,a=1,s=2,r=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=_b(t[a],u,i,this.padding),t[s]=_b(t[s],c,o,this.padding),t[r]=_b(t[r],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Vb.className="Conv3DTranspose",jr(Vb);class jb extends Pb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new _p("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new _p("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new _p(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=dm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Cb(t.depthwiseRegularizer),this.depthwiseConstraint=Hm(t.depthwiseConstraint),this.pointwiseInitializer=dm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Cb(t.pointwiseRegularizer),this.pointwiseConstraint=Hm(t.pointwiseConstraint)}build(e){if((e=gm(e)).length<this.rank+2)throw new _p(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new _p(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new vm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return js((()=>{let t;if(e=mm(e),1===this.rank)throw new zp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Bl(e,[0,2,3,1])),t=kl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Uf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Bl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=hm(this.depthwiseInitializer),e.pointwiseInitializer=hm(this.pointwiseInitializer),e.depthwiseRegularizer=Ib(this.depthwiseRegularizer),e.pointwiseRegularizer=Ib(this.pointwiseRegularizer),e.depthwiseConstraint=jm(this.depthwiseConstraint),e.pointwiseConstraint=jm(this.pointwiseConstraint),e}}jb.className="SeparableConv";class Gb extends jb{constructor(e){super(2,e)}}Gb.className="SeparableConv2D",jr(Gb);class Hb extends Pb{constructor(e){super(1,e),Hb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Qp(e.kernelSize,"number",1,1))throw new _p(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Hb.className="Conv1D",jr(Hb);class qb extends Nm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return js((()=>{if(e=mm(e),"channelsLast"===this.dataFormat){const t=Df(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Df(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Df(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Df(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}qb.className="Cropping2D",jr(qb);class Kb extends Nm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Zp(uf,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return js((()=>{let t=mm(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Bl(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],s="nearest"===this.interpolation?Mu.resizeNearestNeighbor(t,[e,a]):Mu.resizeBilinear(t,[e,a]);return Bl(s,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Mu.resizeNearestNeighbor(t,[e,a]):Mu.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Kb.className="UpSampling2D",jr(Kb);class Xb extends Mb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=dm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Hm(e.depthwiseConstraint),this.depthwiseRegularizer=Cb(e.depthwiseRegularizer)}build(e){if((e=gm(e)).length<4)throw new _p(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new _p(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return js((()=>{let t=function(e,t,n=[1,1],a="valid",s,r){return js((()=>{null==s&&(s="channelsLast"),ff(s);let i=zb(e,s);if(4!==e.rank)throw new _p(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new _p(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=vo(i,t,n,"same"===a?"same":"valid","NHWC",r),"channelsFirst"===s&&(i=Bl(i,[0,3,1,2])),i}))}(e=mm(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Uf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=gm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Db(t,this.kernelSize[0],this.padding,this.strides[0]),r=Db(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,s,r]:[e[0],s,r,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=hm(this.depthwiseInitializer),e.depthwiseRegularizer=Ib(this.depthwiseRegularizer),e.depthwiseConstraint=jm(this.depthwiseRegularizer),e}}function Yb(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new _p("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Jb(e,t,n,a=!1,s,r,i=!1,o=!1){return js((()=>{const l=t.shape.length;if(l<3)throw new _p(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat($f(2,l));if(t=Bl(t,u),null!=r)throw new zp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Er(Er(s,"bool"),"float32")).rank===l-1&&(s=No(s,-1)),s=Bl(s,u)),a&&(t=yl(t,0),null!=s&&(s=yl(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Ol(t);let m,g;null!=s&&(m=Ol(s));for(let t=0;t<p;++t){const n=f[t],a=js((()=>e(n,d)));if(null==s)h=a[0],d=a[1];else{const e=js((()=>{const e=m[t],n=Yr(ll(e),e);return{output:Ar(_r(a[0],e),_r(d[0],n)),newStates:d.map(((t,s)=>Ar(_r(a[1][s],e),_r(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Al(c,1)),[h,g,d]}))}Xb.className="DepthwiseConv2D",jr(Xb);class Zb extends Nm{constructor(e){let t;if(super(e),null==e.cell)throw new _p("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new iy({cells:e.cell}):e.cell,null==t.stateSize)throw new _p("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new vm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?$f(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){pm(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return js((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new zp("Constants support is not implemented in RNN yet.");pm(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new vm({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!S(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new _p(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new vm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){js((()=>{if(!this.stateful)throw new Fp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new _p("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>il([n,e]))):this.states_=[il([n,this.cell.stateSize])];else if(null==e)Gs(this.states_),null!=this.keptStates&&(Gs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>il([n,e]))):this.states_[0]=il([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new _p(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Gs(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,r=[n,s];if(!S(a.shape,r))throw new _p(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>Hs(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const s=Yb(e,n,a,this.numConstants);e=s.inputs,n=s.initialState,a=s.constants;let r=[],i=[];if(null!=n){t.initialState=n,r=r.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new vm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=a&&(t.constants=a,r=r.concat(a),this.numConstants=a.length),r[0]instanceof Im){const n=[e].concat(r),a=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return js((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let s=null==t?null:t.initialState;e=mm(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==r)throw new _p(`RNN Layer has ${r} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:a},o=Jb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,a);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return js((()=>{let t=il(e.shape);return t=Mo(t,[1,2]),t=Rf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Of(t,[1,e]):t)):this.cell.stateSize>1?[Of(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Zb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const a=sg(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Zb.className="RNN",jr(Zb);class Qb extends Nm{}class ey extends Qb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ef(this.units,"units"),this.activation=xb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=dm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cb(e.kernelRegularizer),this.recurrentRegularizer=Cb(e.recurrentRegularizer),this.biasRegularizer=Cb(e.biasRegularizer),this.kernelConstraint=Hm(e.kernelConstraint),this.recurrentConstraint=Hm(e.recurrentConstraint),this.biasConstraint=Hm(e.biasConstraint),this.dropout=Sf([1,Cf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sf([1,Cf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=gm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return js((()=>{if(2!==e.length)throw new _p(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oy({ones:()=>ll(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oy({ones:()=>ll(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;s=Mf(null!=r?_r(e,r):e,this.kernel.read()),null!=this.bias&&(s=Uf(s,this.bias.read())),null!=i&&(n=_r(n,i));let o=Ar(s,Mf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:bb(this.activation),useBias:this.useBias,kernelInitializer:hm(this.kernelInitializer),recurrentInitializer:hm(this.recurrentInitializer),biasInitializer:hm(this.biasInitializer),kernelRegularizer:Ib(this.kernelRegularizer),recurrentRegularizer:Ib(this.recurrentRegularizer),biasRegularizer:Ib(this.biasRegularizer),activityRegularizer:Ib(this.activityRegularizer),kernelConstraint:jm(this.kernelConstraint),recurrentConstraint:jm(this.recurrentConstraint),biasConstraint:jm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ey.className="SimpleRNNCell",jr(ey);class ty extends Zb{constructor(e){e.cell=new ey(e),super(e)}call(e,t){return js((()=>{null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}static fromConfig(e,t){return new e(t)}}ty.className="SimpleRNN",jr(ty);class ny extends Qb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new _p("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ef(this.units,"units"),this.activation=xb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=xb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=dm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cb(e.kernelRegularizer),this.recurrentRegularizer=Cb(e.recurrentRegularizer),this.biasRegularizer=Cb(e.biasRegularizer),this.kernelConstraint=Hm(e.kernelConstraint),this.recurrentConstraint=Hm(e.recurrentConstraint),this.biasConstraint=Hm(e.biasConstraint),this.dropout=Sf([1,Cf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sf([1,Cf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=gm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return js((()=>{if(2!==e.length)throw new _p(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oy({ones:()=>ll(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oy({ones:()=>ll(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,r=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=_r(e,s[0]));let u=Mf(e,this.kernel.read());this.useBias&&(u=Uf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=_r(a,r[0]));const c=this.recurrentKernel.read(),[h,d]=El(c,[2*this.units,this.units],c.rank-1),p=Mf(a,h),[f,m,g]=El(u,3,u.rank-1),[b,y]=El(p,2,p.rank-1);i=this.recurrentActivation.apply(Ar(f,b)),o=this.recurrentActivation.apply(Ar(m,y));const x=Mf(_r(o,a),d);l=this.activation.apply(Ar(g,x));const k=Ar(_r(i,a),_r(Ar(1,al(i)),l));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:bb(this.activation),recurrentActivation:bb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:hm(this.kernelInitializer),recurrentInitializer:hm(this.recurrentInitializer),biasInitializer:hm(this.biasInitializer),kernelRegularizer:Ib(this.kernelRegularizer),recurrentRegularizer:Ib(this.recurrentRegularizer),biasRegularizer:Ib(this.biasRegularizer),activityRegularizer:Ib(this.activityRegularizer),kernelConstraint:jm(this.kernelConstraint),recurrentConstraint:jm(this.recurrentConstraint),biasConstraint:jm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}ny.className="GRUCell",jr(ny);class ay extends Zb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ny(e),super(e)}call(e,t){return js((()=>{null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ay.className="GRU",jr(ay);class sy extends Qb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ef(this.units,"units"),this.activation=xb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=xb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=dm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=dm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=dm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Cb(e.kernelRegularizer),this.recurrentRegularizer=Cb(e.recurrentRegularizer),this.biasRegularizer=Cb(e.biasRegularizer),this.kernelConstraint=Hm(e.kernelConstraint),this.recurrentConstraint=Hm(e.recurrentConstraint),this.biasConstraint=Hm(e.biasConstraint),this.dropout=Sf([1,Cf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sf([1,Cf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=gm(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends qf{apply(t,a){const s=e.apply([n]),r=(new Xf).apply([n]),i=e.apply([2*n]);return zf(zf(s,r),i)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return js((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new _p(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oy({ones:()=>ll(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oy({ones:()=>ll(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=_r(e,r[0]));let h=Mf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=_r(a,i[0])),h=Ar(h,Mf(a,this.recurrentKernel.read())),this.useBias&&(h=Uf(h,this.bias.read()));const[d,p,f,m]=El(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Ar(_r(l,s),_r(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=_r(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:bb(this.activation),recurrentActivation:bb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:hm(this.kernelInitializer),recurrentInitializer:hm(this.recurrentInitializer),biasInitializer:hm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ib(this.kernelRegularizer),recurrentRegularizer:Ib(this.recurrentRegularizer),biasRegularizer:Ib(this.biasRegularizer),activityRegularizer:Ib(this.activityRegularizer),kernelConstraint:jm(this.kernelConstraint),recurrentConstraint:jm(this.recurrentConstraint),biasConstraint:jm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}sy.className="LSTMCell",jr(sy);class ry extends Zb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new sy(e),super(e)}call(e,t){return js((()=>{null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ry.className="LSTM",jr(ry);class iy extends Qb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return js((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const s=[];let r;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=a[i],r=0===i?[e[0]].concat(n):[r[0]].concat(n),r=o.call(r,t),s.push(r.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[r[0]].concat(n)}))}build(e){let t;pm(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{yf(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const a=[];for(const e of t.cells)a.push(sg(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return km(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,s=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}wm(t)}}function oy(e){const{ones:t,rate:n,training:a=!1,count:s=1,dropoutFunc:r}=e,i=()=>null!=r?r(t(),n):Vf(t(),n),o=()=>jf(i,t,a);return!s||s<=1?Hs(o().clone()):Array(s).fill(void 0).map(o).map((e=>Hs(e.clone())))}iy.className="StackedRNNCells",jr(iy);class ly extends Zb{constructor(e){if(e.unroll)throw new zp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new zp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new vm({ndim:5})]}call(e,t){return js((()=>{if(null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new _p("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return js((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),s=il([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){js((()=>{if(!this.stateful)throw new Fp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new _p("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>il(s))):this.states_=[il(s)];else if(null==e)Gs(this.states_),null!=this.keptStates&&(Gs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>il(s))):this.states_[0]=il(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new _p(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Gs(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=s;if(!S(n.shape,a))throw new _p(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Hs(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:s,strides:r,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Db(l,a[0],s,r[0],i[0]),h=Db(u,a[1],s,r[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ly.className="ConvRNN2D";class uy extends sy{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:s,dataFormat:r,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ef(this.filters,"filters"),this.kernelSize=Fb(n,2,"kernelSize"),this.kernelSize.forEach((e=>ef(e,"kernelSize"))),this.strides=Fb(a||1,2,"strides"),this.strides.forEach((e=>ef(e,"strides"))),this.padding=s||"valid",mf(this.padding),this.dataFormat=r||"channelsLast",ff(this.dataFormat),this.dilationRate=Fb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ef(e,"dilationRate")))}build(e){var t;e=gm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new _p(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],s=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const r=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",r,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends qf{apply(e,t){return _f([n.apply([a]),ol([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return js((()=>{if(3!==e.length)throw new _p(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],s=e[1],r=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oy({ones:()=>ll(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?_r(t[n],e):e;let l=o(a,i,0),u=o(a,i,1),c=o(a,i,2),h=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oy({ones:()=>ll(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,y,x,k]=El(this.kernel.read(),4,3),[w,v,I,S]=this.useBias?El(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,v,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,k,S,this.padding);const[C,$,N,T]=El(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,$),m=this.recurrentConv(m,N),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(Ar(l,p)),R=this.recurrentActivation.apply(Ar(u,f)),A=Ar(_r(R,r),_r(E,this.activation.apply(Ar(c,m)))),F=_r(this.recurrentActivation.apply(Ar(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)t.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(e,a[s])&&(n[a[s]]=e[a[s]])}return n}(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const s=fo(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Uf(s,n,this.dataFormat):s}recurrentConv(e,t){return fo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}uy.className="ConvLSTM2DCell",jr(uy);class cy extends ly{constructor(e){const t=new uy(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}cy.className="ConvLSTM2D",jr(cy);class hy extends Nm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return jf((()=>Vf(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}hy.className="Dropout",jr(hy);class dy extends hy{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}dy.className="SpatialDropout1D",jr(dy);class py extends Nm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ef(this.units,"units"),this.activation=xb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=dm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=dm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Hm(e.kernelConstraint),this.biasConstraint=Hm(e.biasConstraint),this.kernelRegularizer=Cb(e.kernelRegularizer),this.biasRegularizer=Cb(e.biasRegularizer),this.activityRegularizer=Cb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=gm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=gm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e),a=nf(this.activation.getClassName());let s;return null!=a?s=Mf(n,this.kernel.read(),a,this.bias?this.bias.read():null):(s=Mf(n,this.kernel.read()),null!=this.bias&&(s=Uf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:bb(this.activation),useBias:this.useBias,kernelInitializer:hm(this.kernelInitializer),biasInitializer:hm(this.biasInitializer),kernelRegularizer:Ib(this.kernelRegularizer),biasRegularizer:Ib(this.biasRegularizer),activityRegularizer:Ib(this.activityRegularizer),kernelConstraint:jm(this.kernelConstraint),biasConstraint:jm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}py.className="Dense",jr(py);class fy extends Nm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=gm(e);for(const t of e.slice(1))if(null==t)throw new _p(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],If(e,1)]}call(e,t){return js((()=>{this.invokeCallHook(e,t);let n=mm(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Bl(n,e)}return function(e){if(e.rank<=1)throw new _p(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],If(e.shape,1)];return Qi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}fy.className="Flatten",jr(fy);class my extends Nm{constructor(e){super(e),this.supportsMasking=!0,this.activation=xb(e.activation)}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e);return this.activation.apply(n)}))}getConfig(){const e={activation:bb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}my.className="Activation",jr(my);class gy extends Nm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return js((()=>{return e=mm(e),t=e,n=this.n,js((()=>{if(2!==t.shape.length)throw new _p(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Of(Rf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}gy.className="RepeatVector",jr(gy);class by extends Nm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let s=1,r=null;for(let e=0;e<a.length;++e){const t=a[e];if(this.isUnknown(t)){if(null!==r)throw new _p("Can only specifiy one unknown dimension.");r=e}else s*=t}const i=If(e);if(null!==r){if(0===s||i%s!=0)throw new _p(n);a[r]=i/s}else if(i!==s)throw new _p(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e),a=n.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return Qi(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}by.className="Reshape",jr(by);class yy extends Nm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=$f(1,e.dims.length+1);if(!S(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new vm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=gm(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Bl(mm(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}yy.className="Permute",jr(yy);class xy extends Nm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=mm(e);return Oi(sl(n,this.maskValue),-1)}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e),a=Oi(sl(n,this.maskValue),-1,!0);return _r(n,Er(a,n.dtype))}))}}xy.className="Masking",jr(xy);class ky extends Nm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Up(e.inputLength))}this.inputDim=e.inputDim,ef(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ef(this.outputDim,"outputDim"),this.embeddingsInitializer=dm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Cb(e.embeddingsRegularizer),this.activityRegularizer=Cb(e.activityRegularizer),this.embeddingsConstraint=Hm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return js((()=>this.maskZero?(e=mm(e),sl(e,Lr(e))):null))}computeOutputShape(e){if(e=gm(e),null==this.inputLength)return[...e,this.outputDim];const t=Up(this.inputLength);if(t.length!==e.length-1)throw new _p(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const s=t[a],r=e[a+1];if(null!=s&&null!=r&&s!==r)throw new _p(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=r),n++}}return[e[0],...t,this.outputDim]}call(e,t){return js((()=>{this.invokeCallHook(e,t);let n=mm(e);"int32"!==n.dtype&&(n=Ef(n,"int32"));const a=Pf(this.embeddings.read(),Qi(n,[n.size]));return Qi(a,gm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:hm(this.embeddingsInitializer),embeddingsRegularizer:Ib(this.embeddingsRegularizer),activityRegularizer:Ib(this.activityRegularizer),embeddingsConstraint:jm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ky.className="Embedding",jr(ky);class wy extends Nm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new zp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const s=e[e.length-t.length+a],r=t[a];if(null==s||null==r||s<0||r<0)n.push(null);else if(1===s)n.push(r);else if(1===r)n.push(s);else{if(s!==r)throw new _p("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[gm(e)]),e.length<2)throw new _p(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Yp(t),t.length>1)throw new _p(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Yp(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return js((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Cf(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=Rf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,s=e[0],r=e.slice(1).concat([s]);let i=Qi(a,[s].concat(If(e.slice(1))));i=Bl(i,[1,0]),i=Qi(i,r),t.push(i),n=!0}else if(e>1){const s=$f(1,e).concat([0]);t.push(Bl(a,s)),n=!0}else t.push(a)}let a=this.mergeFunction(t);const s=a.rank;if(n)if(null==s){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=Qi(Bl(Qi(a,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat($f(0,s-1));a=Bl(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Yp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return js((()=>{if(null==t)return null;if(!Array.isArray(t))throw new _p("`mask` should be an Array");if(!Array.isArray(e))throw new _p("`inputs` should be an Array");if(t.length!==e.length)throw new _p(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:No(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Xo(n,t[e]);return n}))}}class vy extends wy{constructor(e){super(e)}mergeFunction(e){return js((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ar(t,e[n]);return t}))}}vy.className="Add",jr(vy);class Iy extends wy{constructor(e){super(e)}mergeFunction(e){return js((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_r(t,e[n]);return t}))}}Iy.className="Multiply",jr(Iy);class Sy extends wy{constructor(e){super(e)}mergeFunction(e){return js((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ar(t,e[n]);return _r(1/e.length,t)}))}}Sy.className="Average",jr(Sy);class Cy extends wy{constructor(e){super(e)}mergeFunction(e){return js((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ni(t,e[n]);return t}))}}Cy.className="Maximum",jr(Cy);class $y extends wy{constructor(e){super(e)}mergeFunction(e){return js((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=tl(t,e[n]);return t}))}}$y.className="Minimum",jr($y);class Ny extends wy{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new _p("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const a=e[t].slice();a.splice(this.axis,1);let s=!1;for(const e of n)if(S(e,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new _p("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return js((()=>_f(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new _p("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[a]||null==e[a]){n[a]=null;break}n[a]+=e[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new _p("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new _p("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new _p(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return js((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(Er(ll(e[n]),"bool")):t[n].rank<e[n].rank?a.push(No(t[n],-1)):a.push(t[n]);const s=lo(a,this.axis);return zi(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ty(e,t){for(;e<0;)e+=t;return e}Ny.className="Concatenate",jr(Ny);class Ey extends wy{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){k(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new zp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new _p(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new _p(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Ty(t,e[n].shape.length))):[Ty(this.axes,n.shape.length),Ty(this.axes,a.shape.length)],this.normalize&&(n=rg(n,t[0]),a=rg(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new zp("batchDot is not implemented for tensors of 4D or higher rank yet");if(k(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),k(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new zp("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,s=t.shape.length;null==n&&(n=[a-1,s-2]);const r=n;return js((()=>{let n,i;if(a>s){n=a-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Qi(t,t.shape.concat(e))}else if(s>a){n=s-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=Qi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=r[0]===r[1]?Mo(_r(e,t),r[0]):Mo(_r(Bl(e,[1,0]),t),r[1]);else{const n=r[0]!==e.shape.length-1,a=r[1]===t.shape.length-1;i=Yo(e,t,n,a)}if(n>0){let e;e=a>s?a+s-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=Rl(i,t)}return 1===i.shape.length&&(i=No(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ty(this.axes,e.length),Ty(this.axes,t.length)],n}computeOutputShape(e){k(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new zp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Ey.className="Dot",jr(Ey);class Ry extends Nm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e);return jf((()=>Ar(Lf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Ry.className="GaussianNoise",jr(Ry);class Ay extends Nm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return js((()=>{this.invokeCallHook(e,t);const n=mm(e);return this.rate>0&&this.rate<1?jf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return _r(n,Lf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Ay.className="GaussianDropout",jr(Ay);class Fy extends Nm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||mm(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return js((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return jf((()=>{const t=mm(e),a=-1.7580993408473766;let s=Do(ml(n),this.rate);s=Ef(s,"float32");const r=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-r*a*this.rate,o=Ar(_r(t,s),_r(Ar(s,-1),a));return Ar(_r(o,r),i)}),(()=>mm(e)),t.training||!1)}return e}))}}function Dy(e,t,n,a,s,r=.001){let i;if(2===e.rank)i=ao(e,t,n,a,s,r);else if(3===e.rank)i=so(e,t,n,a,s,r);else{if(4!==e.rank)throw new zp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=ro(e,t,n,a,s,r)}return i}Fy.className="AlphaDropout",jr(Fy);class _y extends Nm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=dm(e.betaInitializer||"zeros"),this.gammaInitializer=dm(e.gammaInitializer||"ones"),this.movingMeanInitializer=dm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=dm(e.movingVarianceInitializer||"ones"),this.betaConstraint=Hm(e.betaConstraint),this.gammaConstraint=Hm(e.gammaConstraint),this.betaRegularizer=Cb(e.betaRegularizer),this.gammaRegularizer=Cb(e.gammaRegularizer)}build(e){e=gm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new _p(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new vm({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return js((()=>{const n=null!=t.training&&t.training,a=mm(e),s=a.shape,r=s.length,i=$f(0,r),o=this.axis>=0?this.axis:this.axis+r;i.splice(o,1);const l=Mp(1,r);l[o]=s[o];const u=i.slice();u.sort();const c=!S(u,$f(0,r).slice(0,r-1));if(!n)return(()=>{if(c){const e=Qi(this.movingMean.read(),l),t=Qi(this.movingVariance.read(),l),n=this.center?Qi(this.beta.read(),l):null,s=this.scale?Qi(this.gamma.read(),l):null;return Dy(a,e,t,n,s,this.epsilon)}return Dy(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,a,s=.001){return S(a.slice().sort(),$f(0,e.rank-1))?function(e,t,n,a,s=.001){return js((()=>{const r=nl(e,a),i=r.mean,o=r.variance;return[Dy(e,i,o,n,t,s),i,o]}))}(e,t,n,a,s):function(e,t,n,a,s=.001){return js((()=>{const r=nl(e,a),i=r.mean,o=r.variance,l=[];for(const t of $f(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Qi(i,l),c=Qi(o,l),h=null==t?null:Qi(t,l),d=null==n?null:Qi(n,l);return[Dy(e,u,c,d,h,s),i,o]}))}(e,t,n,a,s)}(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{js((()=>{const a=1-n,s=e.read(),r=_r(Yr(s,t),a);e.write(Yr(s,r))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:hm(this.betaInitializer),gammaInitializer:hm(this.gammaInitializer),movingMeanInitializer:hm(this.movingMeanInitializer),movingVarianceInitializer:hm(this.movingVarianceInitializer),betaRegularizer:Ib(this.betaRegularizer),gammaRegularizer:Ib(this.gammaRegularizer),betaConstraint:jm(this.betaConstraint),gammaConstraint:jm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}_y.className="BatchNormalization",jr(_y);class zy extends Nm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=dm(e.betaInitializer||"zeros"),this.gammaInitializer=dm(e.gammaInitializer||"ones"),this.betaRegularizer=Cb(e.betaRegularizer),this.gammaRegularizer=Cb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=gm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Yp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=mm(e),a=n.shape,s=a.length;return js((()=>{let{mean:e,variance:t}=nl(n,this.axis,!0);const r=Mp(1,s);for(const e of this.axis)r[e]=a[e];const i=e=>null!=e&&e.shape.length!==s?Qi(e,r):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(a[e]),c.push(1)):(u.push(1),c.push(a[e]));return e=To(e,u),t=To(t,u),null!=o&&(o=To(o,c)),null!=l&&(l=To(l,c)),Dy(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:hm(this.betaInitializer),gammaInitializer:hm(this.gammaInitializer),betaRegularizer:Ib(this.betaRegularizer),gammaRegularizer:Ib(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}zy.className="LayerNormalization",jr(zy);class Oy extends Nm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new _p(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new _p(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new _p(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new vm({ndim:4})]}computeOutputShape(e){let t,n;return e=gm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return js((()=>{return t=mm(e),n=this.padding,a=this.dataFormat,js((()=>{if(4!==t.rank)throw new _p(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new _p("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new _p(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ul(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Ly(e,t,n,a,s,r){return js((()=>{let i;ff(s),gf(r),mf(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==r&&(r="max"),e=zb(e,s);const o="same"===a?"same":"valid";return i="max"===r?Jo(e,t,n,o):eo(e,t,n,o),"channelsFirst"===s&&(i=Bl(i,[0,3,1,2])),i}))}function My(e,t,n,a,s,r){return js((()=>{let i;ff(s),gf(r),mf(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==r&&(r="max"),e=Ob(e,s);const o="same"===a?"same":"valid";return i="max"===r?Zo(e,t,n,o):to(e,t,n,o),"channelsFirst"===s&&(i=Bl(i,[0,4,1,2,3])),i}))}Oy.className="ZeroPadding2D",jr(Oy);class Py extends Nm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new _p(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ef(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new _p(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mf(this.padding),this.inputSpec=[new vm({ndim:3})]}computeOutputShape(e){const t=Db((e=gm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return js((()=>{this.invokeCallHook(e,t),e=Rf(mm(e),2);const n=this.poolingFunction(mm(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Rl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class By extends Py{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return ff(s),mf(a),Ly(e,t,n,a,s,"max")}}By.className="MaxPooling1D",jr(By);class Wy extends Py{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return ff(s),mf(a),Ly(e,t,n,a,s,"avg")}}Wy.className="AveragePooling1D",jr(Wy);class Uy extends Nm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new _p(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ef(this.poolSize,"poolSize"),ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),mf(this.padding),this.inputSpec=[new vm({ndim:4})]}computeOutputShape(e){e=gm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Db(t,this.poolSize[0],this.padding,this.strides[0]),n=Db(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return js((()=>(this.invokeCallHook(e,t),this.poolingFunction(mm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vy extends Uy{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return ff(s),mf(a),Ly(e,t,n,a,s,"max")}}Vy.className="MaxPooling2D",jr(Vy);class jy extends Uy{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return ff(s),mf(a),Ly(e,t,n,a,s,"avg")}}jy.className="AveragePooling2D",jr(jy);class Gy extends Nm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new _p(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ef(this.poolSize,"poolSize"),ef(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),mf(this.padding),this.inputSpec=[new vm({ndim:5})]}computeOutputShape(e){e=gm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Db(t,this.poolSize[0],this.padding,this.strides[0]),n=Db(n,this.poolSize[1],this.padding,this.strides[1]),a=Db(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return js((()=>(this.invokeCallHook(e,t),this.poolingFunction(mm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Hy extends Gy{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return ff(s),mf(a),My(e,t,n,a,s,"max")}}Hy.className="MaxPooling3D",jr(Hy);class qy extends Gy{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return ff(s),mf(a),My(e,t,n,a,s,"avg")}}qy.className="AveragePooling3D",jr(qy);class Ky extends Nm{constructor(e){super(e),this.inputSpec=[new vm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new zp}}class Xy extends Ky{constructor(e){super(e||{})}call(e,t){return js((()=>{const t=mm(e);return Qo(t,1)}))}}Xy.className="GlobalAveragePooling1D",jr(Xy);class Yy extends Ky{constructor(e){super(e||{})}call(e,t){return js((()=>{const t=mm(e);return Lo(t,1)}))}}Yy.className="GlobalMaxPooling1D",jr(Yy);class Jy extends Nm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ff(this.dataFormat),this.inputSpec=[new vm({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new zp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zy extends Jy{call(e,t){return js((()=>{const t=mm(e);return"channelsLast"===this.dataFormat?Qo(t,[1,2]):Qo(t,[2,3])}))}}Zy.className="GlobalAveragePooling2D",jr(Zy);class Qy extends Jy{call(e,t){return js((()=>{const t=mm(e);return"channelsLast"===this.dataFormat?Lo(t,[1,2]):Lo(t,[2,3])}))}}Qy.className="GlobalMaxPooling2D",jr(Qy);class ex extends Nm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const a=sg(t.layer,n);delete t.layer;const s={layer:a};return Object.assign(s,t),new e(s)}}class tx extends ex{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=gm(e)).length<3)throw new _p(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=gm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return js((()=>Jb(((e,n)=>[mm(this.layer.call(e,t)),[]]),e=mm(e),[],!1,null,null,!1,!0)[1]))}}tx.className="TimeDistributed",jr(tx);class nx extends ex{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=sg(n),t.goBackwards=!0!==t.goBackwards;const a={};var s;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=sg(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Zp(df,"BidirectionalMergeMode",s),e.weights)throw new zp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(a=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Wp(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const s=Yb(e,n,a,this.numConstants);if(e=s.inputs,n=s.initialState,a=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const r=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new _p("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,r.push(...n);const a=n.map((e=>new vm({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new zp("Support for constants in Bidirectional layers is not implemented yet.");const o=r[0]instanceof Im;for(const e of r)if(e instanceof Im!==o)throw new _p("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(r),a=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return js((()=>{const n=t.initialState;let a,s,r,i;if(null==n)a=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),i=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(a)&&(r=a.slice(1).concat(s.slice(1))),a=a[0],s=s[0]),this.returnSequences&&(s=yl(s,1)),"concat"===this.mergeMode?i=_f([a,s]):"sum"===this.mergeMode?i=Ar(a,s):"ave"===this.mergeMode?i=_r(.5,Ar(a,s)):"mul"===this.mergeMode?i=_r(a,s):null==this.mergeMode&&(i=[a,s]),this.returnState?null==this.mergeMode?i.concat(r):[i].concat(r):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){yf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),yf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=sg(t.layer);if(delete t.layer,null!=t.numConstants)throw new zp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}nx.className="Bidirectional",jr(nx);class ax extends Nm{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return js((()=>("float32"!==(e=mm(e)).dtype&&(e=Ef(e,"float32")),Ar(_r(e,this.scale),this.offset))))}}ax.className="Rescaling",jr(ax);const{resizeBilinear:sx,cropAndResize:rx}=Mu;class ix extends Nm{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,s,r,i,o){return js((()=>{let l,u=!1;const c=[t/r,n/i,(a+t)/r,(s+n)/i],h=[];3===e.rank?(u=!0,l=Al([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=Ps(h,[h.length,4]),p=gl(0,h.length,1,"int32"),f=rx(l,d,p,[a,s],"nearest");return Ef(u?mm(Ol(f)):f,o)}))}upsize(e,t,n,a){return js((()=>Ef(sx(e,[t,n]),a)))}call(e,t){return js((()=>{const t=mm(e),n=t.dtype,a=t.shape,s=a[a.length-3],r=a[a.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return r!==this.width&&(o=Math.floor((r-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,r,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=gm(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}ix.className="CenterCrop",jr(ix);class ox extends Nm{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=gm(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return js((()=>{let n;if("int32"!==(e=mm(e)).dtype&&(e=Ef(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new _p(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=mm(t.countWeights)}const a=Lo(e),s=el(e),r=Fo(this.numTokens,a).bufferSync().get(0),i=Do(s,0).bufferSync().get(0);if(!r||!i)throw new _p(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,a){let s=mm(e);if("int32"!==s.dtype&&(s=Ef(s,"int32")),"int"===t)return s;const r=s.shape;if(0===s.rank&&(s=No(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=No(s,-1)),s.rank>2)throw new _p(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=wo(s,void 0!==a&&"count"===t?a:[],n,i),"tfIdf"!==t)return o;if(a)return _r(o,a);throw new _p("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}ox.className="CategoryEncoding",jr(ox);const lx=new Set(["bilinear","nearest"]);class ux extends Nm{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!lx.has(e.interpolation))throw new _p(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=gm(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return js((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Mu.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Mu.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...lx]} are supported`)}))}}ux.className="Resizing",jr(ux);class cx{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}cx.className="RandomSeed";class hx extends Nm{constructor(e){super(e),this.randomGenerator=new cx(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}hx.className="BaseRandomLayer";const dx=new Set(["bilinear","nearest"]);class px extends hx{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new _p(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new _p(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new _p(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!dx.has(n))throw new _p(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=gm(e))[2];return[this.imgHeight,-1,t]}call(e,t){return js((()=>{const t=mm(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=ml([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Mu.resizeBilinear(e,s);case"nearest":return Mu.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...dx]} are supported`)}}))}}var fx,mx,gx,bx;function yx(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(vx(e)){const s=Array.isArray(e)?[]:{};a.add(e);for(const r in e){const i=yx(e[r],t,n,a);s[r]=i}return a.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function xx(e,t=wx){return kx(e,t)}function kx(e,t,n=new Set){const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(vx(a)){const s=Array.isArray(a)?[]:{};n.add(a);for(const r in a){const a=kx(e.map((e=>e[r])),t,n);s[r]=a}return n.delete(a),s}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return s.value}function wx(e){return null===e?null:vx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function vx(e){let t=!1;if(ee().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(234);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof rs)&&!(e instanceof Promise)&&!t)}function Ix(e){return yx(e,Sx)}function Sx(e){return e instanceof rs?{value:e.clone(),recurse:!1}:vx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}px.className="RandomWidth",jr(px),ee().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(fx||(fx={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(mx||(mx={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class Cx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class $x extends Cx{constructor(){super($x.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}$x.INITIAL_CAPACITY=32;class Nx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ox(this,e)}filter(e){return new _x(this,e)}map(e){return new zx(this,e)}mapAsync(e){return new Lx(this,e)}serialMapAsync(e){return new Lx(this,e).serial()}flatmap(e){return new Px(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Dx(this,e,t)}columnMajorBatch(e,t=!0,n=wx){return this.rowMajorBatch(e,t).map((e=>xx(e,n)))}concatenate(e,t){return new Bx(new Tx([this,e]),t)}take(e){return e<0||null==e?this:new Fx(this,e)}skip(e){return e<0||null==e?this:new Ax(this,e)}prefetch(e){return new Wx(this,e)}shuffle(e,t){return new Ux(this,e,t)}serial(){return new Rx(this)}}class Tx extends Nx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ix(e),done:!1}}}class Ex extends Nx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Rx extends Nx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ax extends Nx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Gs(e.value)}return this.upstream.next()}}class Fx extends Nx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Dx extends Nx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class _x extends Nx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Gs(e.value)}}}class zx extends Nx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ks(e.value),n=this.transform(e.value),a=ks(n);for(const e of t)xs(e,a)||e.dispose();return{value:n,done:!1}}}class Ox extends Nx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Lx extends Nx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ks(e.value),n=await this.transform(e.value),a=ks(n);for(const e of t)xs(e,a)||e.dispose();return{value:n,done:!1}}}class Mx extends Nx{constructor(){super(),this.outputQueue=new $x,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Px extends Mx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ks(e.value),n=this.transform(e.value),a=ks(n);this.outputQueue.pushAll(n);for(const e of t)xs(e,a)||e.dispose();return!0}}class Bx extends Nx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(bx=gx||(gx={}))[bx.FAIL=0]="FAIL",bx[bx.SHORTEST=1]="SHORTEST",bx[bx.LONGEST=2]="LONGEST";class Wx extends Nx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Cx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Ux extends Wx{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=hl.alea(n||Ua().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Vx{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return k(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),jx((async()=>(await n.iterator()).columnMajorBatch(e,t,Gx)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,jx((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,jx((async()=>(await t.iterator()).filter((t=>js((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return jx((async()=>(await t.iterator()).map((t=>js((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return jx((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return jx((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,jx((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Ex(s)).take(e),new Bx(n,a);var n,a,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,jx((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,s=hl.alea(t||Ua().toString());return jx((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,jx((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function jx(e,t=null){return new class extends Vx{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Gx(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof rs||Ga(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof rs?Al(e):Ps(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Hx(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&k("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Vx.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const qx=Zc;class Kx extends f{nextDataId(){return Kx.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new p(this,Us())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ee().get("IS_NODE")&&ma("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&O(n[0])){const s=n.map((e=>Va(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,s){this.data.set(e,{values:t,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?gc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ja(e)));return Tr(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Tr(e.shape,e.dtype,t)}makeOutput(e,t,n){return Us().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ua();return e(),{kernelMs:Ua()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Hx([e],"where");const t=this.readSync(e.dataId);return qx(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Xx(e){return(t,n,a)=>{const s=D(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}function Yx(e,t,n){return Jx(e,Xx(t),n)}function Jx(e,t,n){return({inputs:a,attrs:s,backend:r})=>{const{x:i}=a;Hx(i,e);const o=r,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Yc(l)}else u=l;const c=n||i.dtype,h=t(u,c,s);return o.makeTensorInfo(i.shape,c,h)}}Kx.nextDataId=0,qs("cpu",(()=>new Kx),1);const Zx=Yx(nt,(e=>e>=0?e:Math.exp(e)-1)),Qx={kernelName:nt,backendName:"cpu",kernelFunc:Zx};function ek(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const tk={kernelName:xt,backendName:"cpu",kernelFunc:ek};function nk(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:r}=a;Hx([s],"leakyRelu");const i=I(s.shape),o=n.data.get(s.dataId).values,l=F("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?r*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const ak={kernelName:Ct,backendName:"cpu",kernelFunc:nk};function sk(e){return(t,n,a,s,r)=>{const i=ti(t,n),o=i.length,l=W(i),u=F(r,I(i)),c=t.length,h=n.length,d=W(t),p=W(n),f=Qr(t,i),m=Qr(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=X(t,o,l),r=n.slice(-c);f.forEach((e=>r[e]=0));const i=K(r,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=K(g,h,p);u[t]=e(a[i],s[b])}return[u,i]}}const rk=sk(((e,t)=>e<0?t*e:e));function ik(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t;Hx([a,s],"prelu");const r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,[o,l]=rk(a.shape,s.shape,r,i,"float32");return n.makeTensorInfo(l,"float32",o)}const ok={kernelName:on,backendName:"cpu",kernelFunc:ik},lk=Yx(mn,(e=>Math.max(0,e))),uk={kernelName:mn,backendName:"cpu",kernelFunc:lk},ck=Yx(wn,(e=>Math.min(Math.max(0,e),6))),hk={kernelName:wn,backendName:"cpu",kernelFunc:ck},dk=Xx((e=>1/(1+Math.exp(-e)))),pk=Yx(_n,(e=>1/(1+Math.exp(-e)))),fk={kernelName:_n,backendName:"cpu",kernelFunc:pk};function mk(e,t,n,a,s){if("linear"===n)return ek({inputs:{x:t},backend:e});if("relu"===n)return lk({inputs:{x:t},backend:e});if("elu"===n)return Zx({inputs:{x:t},backend:e});if("relu6"===n)return ck({inputs:{x:t},backend:e});if("prelu"===n)return ik({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return nk({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return pk({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function gk(e){const{inputs:t,backend:n}=e,{real:a,imag:s}=t,r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",r),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const bk={kernelName:Ae,backendName:"cpu",kernelFunc:gk};function yk(e,t,n="float32"){if("complex64"===n)return gk({inputs:{real:yk(e,t,"float32"),imag:yk(e,t,"float32")},backend:e});const a=G(I(t),n);return e.makeTensorInfo(t,n,a)}function xk(e){const{inputs:t,backend:n}=e,{input:a}=t,s=n.data.get(a.dataId).complexTensorInfos.real,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const kk={kernelName:pn,backendName:"cpu",kernelFunc:xk};function wk(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){const a=Wa([0],n),[s,r]=sk(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[r,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function vk(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dtype:r}=a;if("complex64"===r){if("complex64"===s.dtype)return ek({inputs:{x:s},backend:n});const e=yk(n,s.shape,s.dtype),t=vk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=gk({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===s.dtype){const e=xk({inputs:{input:s},backend:n}),t=vk({inputs:{x:e},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(e),t}if(!_(s.dtype,r)){const e=ek({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:r}}const i=n.data.get(s.dataId).values,[o,l,u]=wk(i,s.shape,s.dtype,r);return n.makeTensorInfo(o,l,u)}const Ik={kernelName:Te,backendName:"cpu",kernelFunc:vk};function Sk(e,t,n,a){return null==n?({inputs:n,backend:s})=>{const{a:r,b:i}=n,o=s;Hx([r,i],e);const l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c="string"===r.dtype?Yc(l):l,h="string"===r.dtype?Yc(u):u,d=a||r.dtype,[p,f]=t(r.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:r,b:i}=e,o=s;if("complex64"===r.dtype||"complex64"===i.dtype){const e=vk({inputs:{x:r},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,u=o.data.get(s.dataId).values,c=vk({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(r.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),k=o.makeTensorInfo(y,"float32",b),w=gk({inputs:{real:x,imag:k},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(k),w}{const e=o.data.get(r.dataId).values,n=o.data.get(i.dataId).values,s=a||r.dtype,[l,u]=t(r.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function Ck(e){return(t,n,a,s,r,i)=>{const o=ti(t,n),l=I(o),u=o.length,c=W(o),h=F("float32",l),d=F("float32",l),p=Qr(t,o),f=Qr(n,o),m=gc(a,s),g=gc(r,i),b=t.length,y=W(t),x=n.length,k=W(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,a=t%g.length,s=e(m[2*n],m[2*n+1],g[2*a],g[2*a+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=X(t,u,c),a=n.slice(-b);p.forEach((e=>a[e]=0));const s=K(a,b,y),r=n.slice(-x);f.forEach((e=>r[e]=0));const i=K(r,x,k),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const $k=sk(((e,t)=>e+t)),Nk=Ck(((e,t,n,a)=>({real:e+n,imag:t+a}))),Tk=Sk(le,$k,Nk),Ek={kernelName:le,backendName:"cpu",kernelFunc:Tk};function Rk(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:r}=a,i=I(s.shape),o=E(r,i),l=I(o);k(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Ak={kernelName:gn,backendName:"cpu",kernelFunc:Rk};function Fk(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r}=t,{transposeA:i,transposeB:o}=a;Hx([s,r],"matMul");const l=s.shape.length,u=r.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?r.shape[u-1]:r.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?r.shape[u-2]:r.shape[u-1],f=s.shape.slice(0,-2),m=r.shape.slice(0,-2),g=I(f),b=I(m),y=ti(s.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);k(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${r.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[b,p,h]:[b,h,p],w=Rk({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=Rk({inputs:{x:r},backend:n,attrs:{shape:x}}),S=i?w.shape[1]:w.shape[2],C=i?w.shape[2]:w.shape[1],$=o?v.shape[1]:v.shape[2],N=Math.max(g,b),T=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,R=W(w.shape),A=W(v.shape),[F,D,_]=i?[R[0],1,R[1]]:[R[0],R[1],1],[z,O,L]=o?[1,A[1],A[0]]:[A[1],1,A[0]],M=C*$,P=Tr([N,C,$],w.dtype),B=P.values,U=n.blockSize;for(let e=0;e<N;e++){const t=e%g,n=e%b;for(let a=0;a<C;a+=U){const s=Math.min(a+U,C);for(let r=0;r<$;r+=U){const i=Math.min(r+U,$);for(let o=0;o<S;o+=U){const l=Math.min(o+U,S);for(let u=a;u<s;u++)for(let a=r;a<i;a++){let s=0;for(let e=o;e<l;e++)s+=T[t*F+u*D+e*_]*E[e*z+a*O+n*L];B[e*M+(u*$+a)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(y,P.dtype,P.values)}const Dk={kernelName:Ie,backendName:"cpu",kernelFunc:Fk},_k={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=Fk({inputs:{a:s,b:r},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=Tk({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=mk(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function zk(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Ok={kernelName:re,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Hx(t,"abs");let a=new Float32Array(I(t.shape));return a=zk(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},Lk=Yx(ie,(e=>Math.acos(e))),Mk={kernelName:ie,backendName:"cpu",kernelFunc:Lk},Pk=Yx(oe,(e=>Math.acosh(e))),Bk={kernelName:oe,backendName:"cpu",kernelFunc:Pk},Wk={kernelName:ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;Hx(t,"addN");const s=a.map((e=>n.data.get(e.dataId).values)),r=Tr(a[0].shape,a[0].dtype),i=r.values;for(let e=0;e<a.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}};function Uk(e,t,n,a,s){const r=t.length,i=I(t),o=W(t),l=W(s),u=F(n,I(s));for(let t=0;t<i;++t){const n=X(t,r,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];u[K(s,r,l)]=e[t]}return u}function Vk(e){const{inputs:t,attrs:n,backend:a}=e,{x:s}=t,{perm:r}=n;Hx(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[r[e]];const l=Uk(a.data.get(s.dataId).values,s.shape,s.dtype,r,o);return{dataId:a.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const jk={kernelName:ra,backendName:"cpu",kernelFunc:Vk},Gk={kernelName:ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;Hx(s,"all");const o=R(r,s.shape);let l=o;const u=Go(l,s.shape.length);let c=s;null!=u&&(c=Vk({inputs:{x:s},backend:n,attrs:{perm:u}}),l=qo(l.length,s.shape.length)),jo("all",l,c.shape.length);const[h,d]=Uo(c.shape,l),p=I(d),f=G(I(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];n=n&&a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Rk({inputs:{x:g},backend:n,attrs:{shape:Vo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Hk={kernelName:he,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;Hx(s,"any");const o=R(r,s.shape);let l=o;const u=Go(l,s.shape.length);let c=s;null!=u&&(c=Vk({inputs:{x:s},backend:n,attrs:{perm:u}}),l=qo(l.length,s.shape.length)),jo("any",l,c.shape.length);const[h,d]=Uo(c.shape,l),p=I(d),f=G(I(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];n=n||a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Rk({inputs:{x:g},backend:n,attrs:{shape:Vo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},qk={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;Hx(s,"argMax");let i=R(r,s.shape);const o=Go(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Vk({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=qo(i.length,l.shape.length)),i=[i[0]],jo("argMax",i,l.shape.length);const[c,h]=Uo(l.shape,i),d=G(I(c),"int32"),p=I(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],a=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,a=e)}d[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Kk={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;Hx(s,"argMin");let i=R(r,s.shape);const o=Go(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Vk({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=qo(i.length,l.shape.length)),i=[i[0]],jo("argMin",i,l.shape.length);const[c,h]=Uo(l.shape,i),d=G(I(c),"int32"),p=I(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],a=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,a=e)}d[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Xk=Yx(fe,(e=>Math.asin(e))),Yk={kernelName:fe,backendName:"cpu",kernelFunc:Xk},Jk=Yx(me,(e=>Math.asinh(e))),Zk={kernelName:me,backendName:"cpu",kernelFunc:Jk},Qk=Yx(ge,(e=>Math.atan(e))),ew={kernelName:ge,backendName:"cpu",kernelFunc:Qk},tw=sk(((e,t)=>Math.atan2(e,t))),nw=Sk(ye,tw),aw={kernelName:ye,backendName:"cpu",kernelFunc:nw},sw=Yx(be,(e=>Math.atanh(e))),rw={kernelName:be,backendName:"cpu",kernelFunc:sw};function iw(e,t,n,a,s,r){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Tr(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,m=t*a[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const k=b*i-d,w=Math.max(0,k),v=Math.min(s.inHeight,c+k),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,k=0;for(let n=w;n<v;n+=l){const s=m+n*a[1];for(let n=c;n<d;n+=u){const i=e[s+n*a[2]+t];"max"===r&&i>b?b=i:"avg"===r&&(y+=i,k++)}if(isNaN(b))break}g[I+n*x+t]="avg"===r?y/k:b}}}return m}function ow(e,t,n,a,s=!1,r=!1){const i=Tr(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=Tr(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const y=Math.min(a.inHeight,h+g);for(let o=0;o<a.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(a.inWidth,d+h);let k=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>k&&(k=u,w=s?r?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function lw(e,t,n,a,s,r){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,y="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Tr(s.outShape,n),k=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],v=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*a[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const C=w*i-m;let $=C;for(;$<0;)$+=u;const N=Math.min(s.inDepth,d+C),T=n+w*v;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=T+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+n*S;let v=y,I=0,C=0;for(let n=$;n<N;n+=u){const s=x+n*a[1];for(let n=d;n<m;n+=c){const i=s+n*a[2];for(let n=o;n<p;n+=h){const s=e[i+n*a[3]+t];if("max"===r&&s>v?v=s:"avg"===r&&(I+=s,C++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}k[g+t]="avg"===r?I/Math.max(C,1):v}}}}return x}const uw={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;Hx(s,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;k(Xi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pi(s.shape,r,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&S(u.inShape,u.outShape))c=ek({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=W(s.shape),a=iw(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,a.values)}return c}},cw={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;Hx(s,"avgPool3d");const c=Bi(s.shape,r,i,1,o,l,u),h=lw(n.data.get(s.dataId).values,s.shape,s.dtype,W(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},hw={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;Hx([s,r],"avgPool3DGrad");const c=Bi(r.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,k=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,I=k-1-c.padInfo.front,S=v-1-c.padInfo.left,C=w-1-c.padInfo.top,$=Tr(r.shape,"float32"),N=1/(f*m*g),T=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let a=0;a<c.inHeight;++a)for(let s=0;s<c.inWidth;++s){const r=n-I,i=a-C,o=s-S;let l=0;for(let n=0;n<k;n+=b){const a=(r+n)/h;if(!(a<0||a>=c.outDepth||Math.floor(a)!==a))for(let n=0;n<w;n+=y){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<v;n+=x){const r=(o+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(l+=T.get(e,a,s,r,t))}}}$.set(l*N,e,n,a,s,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},dw={kernelName:ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r;Hx([s,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=a,c=Pi(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,k=b-1-c.padInfo.top,w=Tr(i.shape,"float32"),v=1/(p*f),I=n.data.get(s.dataId).values,S=Tr(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const s=n-k,r=a-x;let i=0;for(let n=0;n<b;n+=m){const a=(s+n)/h;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<y;n+=g){const s=(r+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=S.get(e,a,s,t))}}w.set(i*v,e,n,a,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},pw={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,scale:r,offset:i,mean:o,variance:l}=t;k(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),k(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),k(null==r||o.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Hx([s,o,l,r,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=r?n.data.get(r.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=p.length,y=d.length,x=h.length;let w=0,v=0,I=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*p[I++]/Math.sqrt(d[S++]+u),w>=g&&(w=0),v>=x&&(v=0),I>=b&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function fw(e,t,n,a,s){const r=Ri(a,t,n),i=I(n),o=W(a);if(r){const n=Ai(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=Tr(a,s,"string"===s?Yc(e):e),u=Tr(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));u.set(l.get(...a),...n)}return"string"===s?Jc(u.values):u.values}function mw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,size:i}=a;Hx(s,"slice");const[o,l]=Fi(s,r,i);yi(s,o,l);const u=fw(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const gw={kernelName:Rn,backendName:"cpu",kernelFunc:mw},bw={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,crops:i}=a;Hx([s],"batchToSpaceND");const o=r.reduce(((e,t)=>e*t)),l=Qu(s.shape,r,o),u=ec(l.length,r.length),c=tc(s.shape,r,o),h=nc(i,r.length),d=ac(c,i,r.length),p=Rk({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Vk({inputs:{x:p},backend:n,attrs:{perm:u}}),m=Rk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=mw({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function yw(e,t,n,a,s){const r=I(a),i=G(s,n);for(let n=0;n<e.length;n++){const a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=s||(i[a]+=r>0?t[n]:1)}return i}function xw(e,t,n,a=!1){const s=e.shape[0],r=e.shape[1],i=Tr([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<r;s++){const r=e.get(o,s);if(r<0)throw new Error("Input x must be non-negative!");r>=n||(a?i.set(1,o,r):t.size>0?i.set(i.get(o,r)+t.get(o,s),o,r):i.set(i.get(o,r)+1,o,r))}return i}const kw={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i}=a,o=yw(n.data.get(s.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,o)}},ww=sk(((e,t)=>e&t)),vw={kernelName:$e,backendName:"cpu",kernelFunc:Sk($e,ww)},Iw={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,r=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,o=ti(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Sw=Xx((e=>Math.ceil(e))),Cw=Jx(Ee,Sw),$w={kernelName:Ee,backendName:"cpu",kernelFunc:Cw},Nw=Yx(Re,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Tw={kernelName:Re,backendName:"cpu",kernelFunc:Nw},Ew={kernelName:Fe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(I(t.shape)),s=n.data.get(t.dataId),r=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function Rw(e,t,n,a){const s=D(n,I(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=I(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const r="string"===n?Yc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[o+t]=r[i++]}a+=e.shape[1]}))}return s}function Aw(e){const{inputs:t,backend:n}=e,{input:a}=t,s=n.data.get(a.dataId).complexTensorInfos.imag,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const Fw={kernelName:wt,backendName:"cpu",kernelFunc:Aw};function Dw(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,r=R(s,t[0].shape)[0];Vu(t.map((e=>e.shape)),r);let i=ju(t.map((e=>e.shape)),r);if(0===I(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>I(e.shape)>0));if(1===o.length)return ek({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>xk({inputs:{input:e},backend:n}))),t=o.map((e=>Aw({inputs:{input:e},backend:n}))),a=Dw({inputs:e,backend:n,attrs:{axis:r}}),s=Dw({inputs:t,backend:n,attrs:{axis:r}}),i=gk({inputs:{real:a,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=I(e.shape.slice(r));return Rk({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=ju(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=Rw(u,i,t[0].dtype,c),d=ju(o.map((e=>e.shape)),r),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const _w={kernelName:De,backendName:"cpu",kernelFunc:Dw};function zw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a;Hx([s,r],"conv2d");const h=Ji(l),d=Wi(s.shape,r.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,k=new ts(d.outShape,s.dtype),w=W(s.shape),v=W(r.shape),I=w[0],S=x?w[1]:w[2],C=x?w[2]:1,$=x?1:w[1],N=k.strides[0],T=x?k.strides[1]:k.strides[2],E=x?k.strides[2]:1,R=x?1:k.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(r.dataId).values,D=k.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*N;for(let e=0;e<d.outHeight;++e){const a=n+e*T,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const r=e*v[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=a+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const s=i+a*C;let o=r+e*v[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*$];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,D)}const Ow={kernelName:_e,backendName:"cpu",kernelFunc:zw},Lw={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a;Hx([s,r],"conv2dBackpropFilter");const h=Ji(l),d=Wi(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,y=new ts(d.filterShape,"float32"),x=d.padInfo.left,k=d.padInfo.top,w=n.data.get(s.dataId).values,v=n.data.get(r.dataId).values,I=new ts(s.shape,s.dtype,w),S=new ts(r.shape,r.dtype,v);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((k-e)/p)),n=Math.min(d.outHeight,(d.inHeight+k-e)/p);for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((x-a)/f)),r=Math.min(d.outWidth,(d.inWidth+x-a)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-k;for(let e=s;e<r;++e){const n=a+e*f-x;l+=b?I.get(u,t,n,i)*S.get(u,c,e,o):I.get(u,i,t,n)*S.get(u,o,c,e)}}y.set(l,e,a,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Mw={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a;Hx([s,r],"conv2dBackpropInput");const h=W(r.shape),d=W(s.shape);let p=Ji(u);const f=Wi(i,r.shape,o,1,l,c,!1,p),m=new ts(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,y=n.data.get(r.dataId).values,[x,k,w]=h,{batchSize:v,filterHeight:I,filterWidth:S,inChannels:C,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,_=S-1-f.padInfo.left,z="channelsLast"===p,O=m.strides[0],L=z?m.strides[1]:m.strides[2],M=z?m.strides[2]:1,P=z?1:m.strides[1],B=d[0],U=z?d[1]:d[2],V=z?d[2]:1,j=z?1:d[1];for(let e=0;e<v;++e)for(let t=0;t<C;++t)for(let n=0;n<$;++n){const a=n-D,s=Math.max(0,Math.ceil(a/A)),r=Math.min(E,(I+a)/A);for(let i=0;i<N;++i){const o=i-_,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(S+o)/F);let c=0;for(let n=s;n<r;++n){const s=n*A-a;for(let a=l;a<u;++a){const r=B*e+U*n+V*a,i=x*(I-1-s)+k*(S-1-(a*F-o))+w*t;for(let e=0;e<T;++e)c+=b[r+j*e]*y[i+e]}}g[O*e+L*n+M*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Pw={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l}=a;Hx([s,r],"conv3d");const u=Ui(s.shape,r.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,x=g.top,k=new ts(u.outShape,s.dtype),w=n.data.get(s.dataId).values,v=n.data.get(r.dataId).values,I=k.values,S=W(s.shape),C=W(r.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*k.strides[0];for(let e=0;e<u.outDepth;++e){const a=n+e*k.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const r=e*C[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=a+e*k.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=u.inHeight)continue;const s=r+e*C[1],o=i+a*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,a=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=u.inWidth)continue;const r=s+e*C[2],i=o+t*u.inChannels;let l=r;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*v[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Bw={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,filterShape:l}=a;Hx([s,r],"conv3dBackpropFilterV2");const u=W(s.shape),c=W(r.shape),h=Ui(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new ts(h.filterShape,"float32"),x=y.values,[k,w,v,I]=y.strides,S=n.data.get(r.dataId).values,[C,$,N,T]=c,E=n.data.get(s.dataId).values,[R,A,F,D]=u,_=h.padInfo.front,z=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/d)),n=Math.min(h.outDepth,(h.inDepth+_-e)/d),a=e*k;for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*w+a;for(let a=0;a<b;++a){const l=Math.max(0,Math.ceil((z-a)/f)),u=Math.min(h.outWidth,(h.inWidth+z-a)/f),c=a*v+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*C;for(let m=t;m<n;++m){const t=(e+m*d-_)*A+h,n=m*$+b;for(let e=r;e<i;++e){const r=(s+e*p-O)*F+t,i=e*N+n;for(let e=l;e<u;++e){const t=e*T+i;g+=E[(a+e*f-z)*D+r+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ww={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{pad:i,strides:o,inputShape:l}=a;Hx([s],"conv3dBackpropInputV2");const u=W(s.shape),c=W(r.shape),h=Ui(l,r.shape,o,1,i),d=new ts(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(s.dataId).values,[x,k,w,v]=u,I=n.data.get(r.dataId).values,[S,C,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:D,inHeight:_,inWidth:z,outChannels:O,outDepth:L,outHeight:M,outWidth:P,strideDepth:B,strideHeight:U,strideWidth:V}=h,j=E-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const a=n-j,s=Math.max(0,Math.ceil(a/B)),r=Math.min(L,(E+a)/B);for(let i=0;i<_;++i){const o=i-G,l=Math.max(0,Math.ceil(o/U)),u=Math.min(M,(R+o)/U);for(let c=0;c<z;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),T=Math.min(P,(A+h)/V);let F=0;for(let n=s;n<r;++n){const s=n*B-a;for(let a=l;a<u;++a){const r=a*U-o;for(let i=d;i<T;++i){const o=x*e+k*n+w*a+v*i,l=S*(E-1-s)+C*(R-1-r)+$*(A-1-(i*V-h))+N*t;for(let e=0;e<O;++e)F+=y[o+e]*I[l+e]}}}p[f*e+m*n+g*i+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Uw=Yx(Be,(e=>Math.cos(e))),Vw={kernelName:Be,backendName:"cpu",kernelFunc:Uw},jw=Yx(We,(e=>Math.cosh(e))),Gw={kernelName:We,backendName:"cpu",kernelFunc:jw},Hw={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:r,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[c,h,d,p]=s.shape,f=r.shape[0],[m,g]=o,b=Tr([f,m,g,p],"float32"),y=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,w=W(s.shape),v=W(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],a=y[t+1],s=y[t+2],r=y[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(r-a)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let a=0;a<p;a++){const s=a+n*v[2]+t*v[1]+e*v[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?a*(d-1)+l*f:.5*(a+r)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const a=n+l*v[2]+t*v[1]+e*v[0];b.values[a]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let a=0;a<p;a++){let r=a+h*w[2]+n*w[1]+i*w[0];const u=k[r];r=a+m*w[2]+n*w[1]+i*w[0];const c=k[r];r=a+h*w[2]+s*w[1]+i*w[0];const d=k[r];r=a+m*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(k[r]-d)*y;r=a+l*v[2]+t*v[1]+e*v[0],b.values[r]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?a*(d-1)+n*f:.5*(a+r)*(d-1);if(s<0||s>d-1){for(let a=0;a<p;a++){const s=a+n*v[2]+t*v[1]+e*v[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let a=0;a<p;a++){const s=a+o*w[2]+l*w[1]+i*w[0],r=a+n*v[2]+t*v[1]+e*v[0];b.values[r]=k[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},qw={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a;Hx(s,"cumprod");const l=Go([r],s.shape.length);let u=s;null!=l&&(u=Vk({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=qo(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fs(u.dtype,"int32"),d=j(I(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const a=m(e,t-1);d[n]=i?p[a]*d[a]:p[n]*d[a]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Vk({inputs:{x:g},backend:n,attrs:{perm:Ho(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},Kw={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a;Hx(s,"cumsum");const l=Go([r],s.shape.length);let u=s;null!=l&&(u=Vk({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=qo(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fs(u.dtype,"int32"),d=G(I(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const a=m(e,t-1);d[n]=i?p[a]+d[a]:p[n]+d[a]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Vk({inputs:{x:g},backend:n,attrs:{perm:Ho(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},Xw={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i,binaryOutput:o}=a;if(1===s.shape.length){const e=yw(n.data.get(s.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,e)}if(2===s.shape.length){const e=xw(n.bufferSync(s),n.bufferSync(r),i,o);return n.makeTensorInfo(e.shape,r.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Yw={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:r,dataFormat:i}=a;k("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*r,d=u*r,p=c/(r*r),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/r),a=t%r;for(let t=0;t<d;++t){const s=Math.floor(t/r),i=(a*r+t%r)*p;for(let t=0;t<p;++t){const a=t+i+c*(s+u*(n+l*e));m[g++]=f[a]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function Jw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;Hx([s,r],"depthwiseConv2DNative");const c=W(s.shape),h=W(r.shape);let d=l;null==d&&(d=[1,1]),k(Xi(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Wi(s.shape,r.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=p,x=y.left,w=y.top,v=p.outChannels/p.inChannels,I=new ts(p.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(r.dataId).values,$=I.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<p.outHeight;++e){const a=n+e*I.strides[1],s=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const r=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=a+e*I.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*b;if(a<0||a>=p.inWidth)continue;const s=r+e*h[1],o=i+a*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<v;++e)$[l+e]+=t*C[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Zw={kernelName:qe,backendName:"cpu",kernelFunc:Jw},Qw={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a;Hx([s,r],"depthwiseConv2dNativeBackpropFilter");const h=Wi(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new ts(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,k=n.data.get(s.dataId).values,w=new ts(s.shape,s.dtype,k),v=n.data.get(r.dataId).values,I=new ts(r.shape,r.dtype,v);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let a=0;a<m;++a){const s=Math.max(0,Math.ceil((b-a)/p)),r=Math.min(h.outWidth,(h.inWidth+b-a)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<r;++e){const n=a+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,a,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},ev={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a;Hx([s,r],"depthwiseConv2DNativeBackpropInput");const h=W(s.shape),d=W(r.shape),p=Wi(c,r.shape,i,o,l,u,!0),f=new ts(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(s.dataId).values,[k,w,v]=h,I=n.data.get(r.dataId).values,[S,C,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:D,outHeight:_,outWidth:z,strideHeight:O,strideWidth:L}=p,M=T-1-p.padInfo.top,P=E-1-p.padInfo.left,B=D/R;for(let e=0;e<N;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const a=n-M,s=Math.max(0,Math.ceil(a/O)),r=Math.min(_,(T+a)/O);for(let i=0;i<F;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(z,(E+o)/L);let c=0;for(let n=s;n<r;++n){const s=n*O-a;for(let a=l;a<u;++a){const r=k*e+w*n+v*a,i=S*(T-1-s)+C*(E-1-(a*L-o))+$*t;for(let e=0;e<B;++e)c+=x[r+(t*B+e)]*I[i+e]}}m[g*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},tv={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=I(a.shape),r=n.data.get(a.dataId).values,i=Tr([s,s],a.dtype),o=i.values;for(let e=0;e<r.length;e++)o[e*s+e]=r[e];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},nv={kernelName:Je,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:r,pad:i,dilations:o}=n,l=t,u=l.data.get(a.dataId).values,c=a.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:k,strideWidth:w,filterHeight:v,filterWidth:S,dilationHeight:C,dilationWidth:$,outShape:N}=Mi(a.shape,s.shape,r,i,"NHWC",o),T=I(N),E=N.length,R=D(a.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*k-x.top;for(let r=0;r<y;++r){const i=r*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<S;++n){const p=i+n*$;if(p>=0&&p<m){const i=K([e,r,p,o],c,W(a.shape)),f=K([t,n,o],d,W(s.shape)),m=u[i]+h[f];m>l&&(l=m)}}}R[K([e,t,r,o],E,W(N))]=l}}}return{dataId:l.write(Wa(R,a.dtype),N,a.dtype),shape:N,dtype:a.dtype}}},av={kernelName:Qe,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:r}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=V(a.shape,u.data.get(a.dataId).values),h=V(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:$}=Mi(a.shape,s.shape,i,o,"NHWC",l);k(r.rank===$.length,(()=>`Error in ${Qe}, dy must have the same rank as output ${$.length}, but got ${r.rank}`));const N=V($,u.data.get(r.dataId).values),T=H(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-y.top;for(let a=0;a<b;++a){const s=a*w-y.left;for(let r=0;r<m;++r){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const a=n+t*S;if(a>=0&&a<p)for(let n=0;n<I;++n){const u=s+n*C;if(u>=0&&u<f){const s=c[e][a][u][r]+h[t][n][r];s>i&&(i=s,o=t,l=n)}}}T[o][l][r]+=N[e][t][a][r]}}}return{dataId:u.write(Wa(T,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sv={kernelName:Ze,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:r}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=V(a.shape,u.data.get(a.dataId).values),h=V(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:$}=Mi(a.shape,s.shape,i,o,"NHWC",l);k(r.rank===$.length,(()=>`Error in ${Ze}, dy must have the same rank as output ${$.length}, but got ${r.rank}`));const N=V($,u.data.get(r.dataId).values),T=H(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-y.top;for(let a=0;a<b;++a){const s=a*w-y.left;for(let r=0;r<m;++r){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<v;++t){const a=n+t*S;if(a>=0&&a<p)for(let n=0;n<I;++n){const u=s+n*C;if(u>=0&&u<f){const s=c[e][a][u][r]+h[t][n][r];s>i&&(i=s,o=a,l=u)}}}T[e][o][l][r]+=N[e][t][a][r]}}}return{dataId:u.write(Wa(T,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},rv={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s}=t,{canvas:r,options:i}=a,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=r.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const a=m[e*f+n];if("float32"===s.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===s.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===f?(t[0]=a*g,t[1]=a*g,t[2]=a*g):t[n]=a*g}const n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}r.width=p,r.height=d;const y=new ImageData(b,p,d);return h.putImageData(y,0,0),s}},iv=sk(((e,t)=>e*t)),ov=Ck(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),lv=Sk(Xt,iv,ov),uv={kernelName:Xt,backendName:"cpu",kernelFunc:lv};function cv(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;let o;Hx(s,"sum"),o="bool"===s.dtype?vk({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):ek({inputs:{x:s},backend:n});const l=o.shape.length,u=R(r,o.shape),c=Go(u,l);let h=u,d=o;null!=c&&(d=Vk({inputs:{x:o},backend:n,attrs:{perm:c}}),h=qo(h.length,l)),jo("sum",h,d.shape.length);const[p,f]=Uo(d.shape,h);let m=yk(n,p,fs(d.dtype,"int32"));const g=I(f),b=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];b[e]=n}if(i){const e=m;m=Rk({inputs:{x:m},backend:n,attrs:{shape:Vo(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const hv={kernelName:Ln,backendName:"cpu",kernelFunc:cv},dv={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,r=t,{allDims:i,summedDims:o,idDims:l}=Tc(s,r.length);Rc(i.length,l,r);const{path:u,steps:c}=Ac(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:a}=Ec(p,l[t]);let s;Fc(e)?s=r[t]:(s=Vk({inputs:{x:r[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);S(s.shape,i)||(s=Rk({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=lv({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=cv({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},pv={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:s}=t;Hx([a,s],"eluGrad");const r=new Float32Array(I(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];r[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",r)}},fv=sk(((e,t)=>e===t?1:0)),mv=Sk(rt,fv,null,"bool"),gv={kernelName:rt,backendName:"cpu",kernelFunc:mv},bv=cc,yv=hc,xv=dc,kv=pc,wv=fc,vv=mc,Iv=Yx(st,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+bv*n);return t*(1-((((vv*a+wv)*a+kv)*a+xv)*a+yv)*a*Math.exp(-n*n))})),Sv={kernelName:st,backendName:"cpu",kernelFunc:Iv},Cv=Xx((e=>Math.exp(e))),$v=Jx(it,Cv,"float32"),Nv={kernelName:it,backendName:"cpu",kernelFunc:$v};function Tv(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:r}=a,i=s.shape.length,o=s.shape.slice();let l=r;return r<0&&(k(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),Rk({inputs:{x:s},backend:n,attrs:{shape:o}})}const Ev={kernelName:ot,backendName:"cpu",kernelFunc:Tv},Rv=Xx((e=>Math.expm1(e))),Av=Jx(lt,Rv),Fv={kernelName:lt,backendName:"cpu",kernelFunc:Av},Dv=sk(((e,t)=>e/t)),_v=Sk(et,Dv),zv={kernelName:et,backendName:"cpu",kernelFunc:_v},Ov=sk(((e,t)=>e-t)),Lv=Ck(((e,t,n,a)=>({real:e-n,imag:t-a}))),Mv=Sk(Qn,Ov,Lv),Pv={kernelName:Qn,backendName:"cpu",kernelFunc:Mv};function Bv(e,t,n){const a=e.shape,s=a[0],r=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,r],c=I(u),h=F("float32",c),d=F("float32",c);for(let e=0;e<s;e++){const a=mw({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,r]}}),s=mw({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,r]}}),i=gk({inputs:{real:a,imag:s},backend:n}),{real:u,imag:c}=Wv(i,t,n),p=gc(u,c);for(let t=0;t<r;t++){const n=kc(p,t);h[e*r+t]=n.real,d[e*r+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=gk({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Wv(e,t,n){const a=I(e.shape),s=n.data.get(e.dataId),r=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=a)&o-1){const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let r=0,i=0;for(let a=0;a<t;a++){const o=Ic(s*a,t,n),l=kc(e,a);r+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(r/=t,i/=t),wc(a,r,i,s)}return a}(gc(r,i),a,t);return bc(e)}{const s=Uv(r,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),r=n.makeTensorInfo([],"float32",Ba(a,"float32")),i=ek({inputs:{x:r},backend:n}),l=zv.kernelFunc({inputs:{a:e,b:r},backend:n}),u=zv.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o}function Uv(e,t,n,a,s){if(1===n)return{real:e,imag:t};const r=gc(e,t),i=n/2,o=yc(r),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=gk({inputs:{real:h,imag:d},backend:s}),f=xc(r),m=f.real,g=f.imag,b=[m.length],y=s.makeTensorInfo(b,"float32",m),x=s.makeTensorInfo(b,"float32",g),k=gk({inputs:{real:y,imag:x},backend:s}),w=Uv(l,u,i,a,s),v=w.real,I=w.imag,S=[v.length],C=s.makeTensorInfo(S,"float32",v),$=s.makeTensorInfo(S,"float32",I),N=gk({inputs:{real:C,imag:$},backend:s}),T=Uv(m,g,i,a,s),E=T.real,R=T.imag,A=[E.length],F=s.makeTensorInfo(A,"float32",E),D=s.makeTensorInfo(A,"float32",R),_=gk({inputs:{real:F,imag:D},backend:s}),z=vc(n,a),O=[z.real.length],L=s.makeTensorInfo(O,"float32",z.real),M=s.makeTensorInfo(O,"float32",z.imag),P=gk({inputs:{real:L,imag:M},backend:s}),B=lv({inputs:{a:P,b:_},backend:s}),W=Tk({inputs:{a:N,b:B},backend:s}),U=Mv({inputs:{a:N,b:B},backend:s}),V=xk({inputs:{input:W},backend:s}),j=xk({inputs:{input:U},backend:s}),G=Aw({inputs:{input:W},backend:s}),H=Aw({inputs:{input:U},backend:s}),q=Dw({inputs:[V,j],backend:s,attrs:{axis:0}}),K=Dw({inputs:[G,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Vv={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=I(a.shape),r=a.shape[a.shape.length-1],i=Rk({inputs:{x:a},backend:n,attrs:{shape:[s/r,r]}}),o=Bv(i,!1,n),l=Rk({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function jv(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:r}=n,i=r||M(s),o=D(i,I(a));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(a,i,o)}const Gv={kernelName:ct,backendName:"cpu",kernelFunc:jv},Hv={kernelName:ht,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,r=F(a.dtype,I(a.shape)),[i,o,l,u]=a.shape,c=s.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const a=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+a+s;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+s]),r[o]=h}}}}return{dataId:s.write(r,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},qv=Xx((e=>Math.floor(e))),Kv=Jx(dt,qv),Xv={kernelName:dt,backendName:"cpu",kernelFunc:Kv},Yv=sk(((e,t)=>Math.floor(e/t))),Jv=Sk(pt,Yv,null,"int32"),Zv={kernelName:pt,backendName:"cpu",kernelFunc:Jv},Qv={kernelName:pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=zw({inputs:{x:s,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=Rk({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Tk({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Tk({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=Rk({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=mk(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=mk(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},eI={kernelName:fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=Jw({inputs:{x:s,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=Tk({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=mk(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function tI(e,t,n,a,s,r,i,o,l){const u=Tr([a,r],n);for(let n=0;n<a;n++){const a=[];let c=0;for(let t=0;t<s;t++){const r=e[n*s+t];c+=r*i[t],a.push(r)}if(c<0||c>=l/r)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<r;e++)u.values[n*r+e]=t.get(...t.indexToLoc(c*r+e))}return u}const nI={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,r=I(a.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=sc(a,s);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const d=tI(n.data.get(s.dataId).values,n.bufferSync(a),a.dtype,u,o,c,h,a.shape,r);return n.makeTensorInfo(l,a.dtype,d.values)}};function aI(e,t,n){const a=Tr(n,e.dtype);for(let n=0;n<a.size;++n){const s=a.indexToLoc(n).slice(),r=s[0],i=s[2],o=t.locToIndex([r,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}const sI={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:r}=t,{axis:i,batchDims:o}=a;Hx([s,r],"gatherV2");const l=R(i,s.shape)[0],u=n.data.get(r.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];k(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=I(r.shape),p=Xc(s,r,l,h),f=Rk({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Rk({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(m),y=aI(n.bufferSync(f),b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}},rI=sk(((e,t)=>e>t?1:0)),iI=Sk(bt,rI,null,"bool"),oI={kernelName:bt,backendName:"cpu",kernelFunc:iI},lI=sk(((e,t)=>e>=t?1:0)),uI=Sk(yt,lI,null,"bool"),cI={kernelName:yt,backendName:"cpu",kernelFunc:uI},hI={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=I(a.shape),r=a.shape[a.shape.length-1],i=Rk({inputs:{x:a},backend:n,attrs:{shape:[s/r,r]}}),o=Bv(i,!0,n),l=Rk({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},dI=Yx(vt,(e=>Number.isFinite(e)?1:0),"bool"),pI={kernelName:vt,backendName:"cpu",kernelFunc:dI},fI=Yx(It,(e=>Math.abs(e)===1/0?1:0),"bool"),mI={kernelName:It,backendName:"cpu",kernelFunc:fI},gI=Yx(St,(e=>Number.isNaN(e)?1:0),"bool"),bI={kernelName:St,backendName:"cpu",kernelFunc:gI},yI=sk(((e,t)=>e<t?1:0)),xI=Sk($t,yI,null,"bool"),kI={kernelName:$t,backendName:"cpu",kernelFunc:xI},wI=sk(((e,t)=>e<=t?1:0)),vI=Sk(Nt,wI,null,"bool"),II={kernelName:Nt,backendName:"cpu",kernelFunc:vI};function SI(e,t,n){const a=(t-e)/(n-1),s=G(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}const CI={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,num:r}=n,i=SI(a,s,r);return t.makeTensorInfo([i.length],"float32",i)}},$I=Xx((e=>Math.log(e))),NI=Jx(Et,$I),TI={kernelName:Et,backendName:"cpu",kernelFunc:NI},EI=Yx(Rt,(e=>Math.log1p(e))),RI={kernelName:Rt,backendName:"cpu",kernelFunc:EI},AI=sk(((e,t)=>e&&t)),FI=Sk(At,AI,null,"bool"),DI={kernelName:At,backendName:"cpu",kernelFunc:FI},_I=Yx(Ft,(e=>e?0:1),"bool"),zI={kernelName:Ft,backendName:"cpu",kernelFunc:_I},OI=sk(((e,t)=>e||t)),LI=Sk(Dt,OI,null,"bool"),MI={kernelName:Dt,backendName:"cpu",kernelFunc:LI},PI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:r,bias:i,alpha:o,beta:l}=a;Hx(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=I(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-r);const a=e-t+Math.min(t+r,c);let s=0;for(;n<=a;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},BI={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,y:r,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a;Hx(i,"LRNGrad");const h=I(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(r.dataId).values,g=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),a=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<a;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<a;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function WI(e,t,n,a){const s=F(a,I(n));for(let n=0;n<s.length;++n){const a=n*t;let r=e[a];for(let n=0;n<t;++n){const t=e[a+n];(Number.isNaN(t)||t>r)&&(r=t)}s[n]=r}return s}function UI(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:r,keepDims:i}=a,o=n;let l=s.shape;const u=l.length,c=R(r,l);let h=c;const d=Go(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Uk(p,l,s.dtype,d,e),h=qo(h.length,u),l=e}Hx(s,"max"),jo("max",h,u);const[f,m]=Uo(l,h),g=WI(p,I(m),f,s.dtype),b=o.write(g,f,s.dtype);let y=f;return i&&(y=Vo(f,c)),{dataId:b,shape:y,dtype:s.dtype}}const VI={kernelName:Ot,backendName:"cpu",kernelFunc:UI},jI=sk(((e,t)=>Math.max(e,t))),GI=Sk(Lt,jI),HI={kernelName:Lt,backendName:"cpu",kernelFunc:GI},qI={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;Hx(s,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;k(Xi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pi(s.shape,r,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&S(u.inShape,u.outShape))c=ek({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=W(s.shape),a=iw(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,a.values)}return c}},KI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;Hx(s,"maxPool3d");const c=Bi(s.shape,r,i,1,o,l,u),h=lw(n.data.get(s.dataId).values,s.shape,s.dtype,W(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},XI={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;Hx([s,r],"maxPool3DGrad");const c=Bi(r.shape,i,o,1,l,u),h=function(e,t){const n=Tr(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*a-d;let x=y;for(;x<0;)x+=i;const k=Math.min(t.inDepth,u+y);for(let a=0;a<t.outHeight;++a){const u=a*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*r-f;let v=p;for(;v<0;)v+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<k;t+=i){const n=t-y;for(let a=d;a<w;a+=o){const s=a-u;for(let r=v;r<I;r+=l){const i=r-p,o=e.get(m,t,a,r,g);o>=S&&(S=o,C=n*c*h+s*c+i)}}}n.set(C,m,b,a,s,g)}}}return n}(n.bufferSync(r),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,k=c.effectiveFilterWidth,w=y-1-c.padInfo.front,v=k-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Tr(r.shape,"float32"),C=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let a=0;a<c.inHeight;++a)for(let s=0;s<c.inWidth;++s){const r=n-w,i=a-I,o=s-v;let l=0;for(let n=0;n<y;n+=m){const a=(r+n)/d;if(!(a<0||a>=c.outDepth||Math.floor(a)!==a))for(let s=0;s<x;s+=g){const r=(i+s)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let i=0;i<k;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*k-1-h.get(e,a,r,u,t)===n*x*k+s*k+i?1:0;0!==d&&(l+=C.get(e,a,r,u,t)*d)}}}S.set(l,e,n,a,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},YI={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r,output:i}=t,o=r;Hx([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=a,d=Pi(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Tr(d.outShape,o.dtype,ow(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,k=d.effectiveFilterWidth,w=k-1-d.padInfo.left,v=x-1-d.padInfo.top,I=Tr(o.shape,"float32"),S=n.data.get(s.dataId).values,C=Tr(s.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const s=n-v,r=a-w;let i=0;for(let n=0;n<x;n+=b){const a=(s+n)/m;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let s=0;s<k;s+=y){const o=(r+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*k-1-f.get(e,a,o,t)===n*k+s?1:0;0!==l&&(i+=C.get(e,a,o,t)*l)}}I.set(i,e,n,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},JI={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:r,pad:i,includeBatchInIndex:o}=t,l=n;Hx(a,"MaxPoolWithArgmax");const u=l.data.get(a.dataId).values,c=Pi(a.shape,s,r,[1,1],i),[h,d]=function(e,t,n,a,s){const r=iw(e,0,n,W(t),s,"max"),i=ow(e,t,n,s,!0,a);return[r.values,i.values]}(u,a.shape,a.dtype,o,c),p=l.write(h,c.outShape,a.dtype),f=l.write(d,c.outShape,a.dtype);return[{dataId:p,shape:c.outShape,dtype:a.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},ZI={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=R(r,s.shape),l=I(Uo(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=vk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=_v({inputs:{a:h,b:c},backend:n});u.push(d);const p=cv({inputs:{x:d},backend:n,attrs:{axis:r,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},QI={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;Hx(s,"min");const o=R(r,s.shape);let l=o;const u=Go(l,s.shape.length);let c=s;null!=u&&(c=Vk({inputs:{x:s},backend:n,attrs:{perm:u}}),l=qo(l.length,s.shape.length)),jo("min",l,c.shape.length);const[h,d]=Uo(c.shape,l),p=I(d),f=G(I(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Rk({inputs:{x:g},backend:n,attrs:{shape:Vo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},eS=sk(((e,t)=>Math.min(e,t))),tS=Sk(Gt,eS),nS={kernelName:Gt,backendName:"cpu",kernelFunc:tS},aS={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:r,mode:i}=a;Hx(s,"mirrorPad");const o=r.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=r.map((e=>e[0])),u=r.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=W(s.shape),f=I(o),m=o.length,g=W(o),b=F(s.dtype,f);for(let e=0;e<f;e++){let t=X(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=K(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},sS=sk(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),rS=Sk(qt,sS),iS={kernelName:qt,backendName:"cpu",kernelFunc:rS};function oS(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:r}=a,i=s.shape.length;let o=r;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=R([o],s.shape),u=UI({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Vo(u.shape,l),h=Rk({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Mv({inputs:{a:s,b:h},backend:n}),p=$v({inputs:{x:d},backend:n}),f=cv({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=Rk({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_v({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const lS={kernelName:Bn,backendName:"cpu",kernelFunc:oS},uS={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:r,seed:i,normalized:o}=a;Hx(s,"multinomial");const l=o?s:oS({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,r],p=G(I(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const a=hl.alea(i.toString()),s=e*r;for(let e=0;e<r;++e){const t=a();p[s+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){p[s+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function cS(e,t,n){const a=Ba(-1,n);return iv([],t,a,e,n)}const hS={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;Hx(a,"neg");const s=n.data.get(a.dataId).values,[r,i]=cS(s,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,r)}},dS=pu,pS={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;Hx(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,{selectedIndices:h}=dS(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},fS=fu,mS={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;Hx(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=fS(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},gS=mu,bS={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;Hx(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=gS(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},yS=sk(((e,t)=>e!==t?1:0)),xS=Sk(Jt,yS,null,"bool"),kS={kernelName:Jt,backendName:"cpu",kernelFunc:xS},wS={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{dtype:r,depth:i,onValue:o,offValue:l}=a;Hx(s,"oneHot");const u=I(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],r,c)}};function vS(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=xk({inputs:{input:a},backend:n}),t=vS({inputs:{x:e},backend:n}),s=Aw({inputs:{input:a},backend:n}),r=vS({inputs:{x:s},backend:n}),i=gk({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}return jv({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const IS={kernelName:ua,backendName:"cpu",kernelFunc:vS},SS={kernelName:tn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=xk({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a}),r=Aw({inputs:{input:s},backend:a}),i=vS({inputs:{x:r},backend:a}),o=gk({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}return jv({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function CS(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return Tv({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const r=t[0].shape,i=t[0].dtype;t.forEach((e=>{w(r,e.shape,"All tensors passed to stack must have matching shapes"),k(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Dw({inputs:t.map((e=>{const t=Tv({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const $S={kernelName:an,backendName:"cpu",kernelFunc:CS},NS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:r,constantValue:i}=a;Hx(s,"pad");const o=r.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=r.map((e=>e[0])),u=n.data.get(s.dataId).values,c=I(s.shape),h=s.shape.length,d=W(s.shape),p=I(o),f=o.length,m=W(o),g=F(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[K(X(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},TS=sk(((e,t)=>Math.pow(e,t))),ES=Sk(rn,TS),RS={kernelName:rn,backendName:"cpu",kernelFunc:ES};function AS(e,t,n,a){const[s,r]=Uo(e,a),i=fs(t,"int32"),o=G(I(s),i),l=I(r);for(let e=0;e<o.length;++e){const t=e*l;let a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:s,outDtype:i}}const FS={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;Hx(s,"prod");const o=s.shape.length,l=R(r,s.shape),u=Go(l,o);let c=l,h=s;const d=[];null!=u&&(h=Vk({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=qo(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=AS(h.shape,h.dtype,p,c);let b=m;return i&&(b=Vo(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function DS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function _S(e,t,n,a,s,r,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const s=X(a,t.length,W(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(r,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,a){const s=[];let r=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],s=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let a=0;a<e.length;++a){let i=e[a],l=e[a]+1;for(let e=0;e<n.length;++e){const a=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-a[i];for(let e=i;e<l;++e)o[s].push(a[e+1]+t)}i=a[i],l=a[l]}l!==i&&(s.push([i,l]),r+=l-i)}return{outSplits:o,valueSlices:s,numValues:r}}(r,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=D("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(u),p=function(e,t,n,a,s){const r=t.slice();r[0]=s;const i=D(n,I(r)),o=e.length;return function(e,t,n,a,s,r){const i=DS(t,2)[1],o=DS(r,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,a,0===o?0:o/t[0],i,r),[i,r]}(n,a,s,c,h);return[d,p[0],p[1]]}const zS={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:s,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:o}=a,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=_S(l,u,c,r.shape,r.dtype,h,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,r.dtype,p);return m.concat([g])}},OS=2147483647;function LS(e,t,n,a,s,r,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=D("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?a[0]:a[t],i=u?r[0]:r[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>OS)throw new Error(`Requires ((limit - start) / delta) <= ${OS}`);d[t+1]=d[t]+c}const p=D(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let a=o?e[0]:e[t];const s=u?r[0]:r[t];for(let e=0;e<n;++e)p[f++]=a,a+=s}return[d,p]}const MS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:s,deltas:r}=t,i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,[u,c]=LS(i,a.shape,a.dtype,o,s.shape,l,r.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],a.dtype,c)]}};var PS=Gu;class BS{constructor(e,t,n,a,s,r,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=s,this.defaultValue=r,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=qu(u),this.raggedRank=Ku(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===PS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===PS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case PS.VALUE_ROWIDS:return BS.getMaxWidthValueRowID(t);case PS.ROW_SPLITS:return BS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${PS[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],s=0;for(let r=1;r<t;++r){const t=e[r];t!==a&&(a=t,s=Math.max(r-n,s),n=r)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return US(e,n)}calculateOutputSize(e){const t=this.valuesShape;Xu(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Hu(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),s=[];let r=0;for(let e=0;e<a;++e,r+=t)s.push(r);for(let t=a;t<e;++t)s.push(-1);return k(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,a){const s=e.length,r=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(a,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)r.push(l),l+=n;for(let e=0;e<s-o;++e)r.push(-1)}if(s>0&&r.length!==e[s-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(e,t,n,a){const s=e.length,r=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];r.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<a?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}r.push(l)}if(r.length!==e.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(e,t,n,a){const s=this.getRowPartitionTensor(e),r=this.getRowPartitionTypeByDimension(e);switch(r){case PS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,a);case PS.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,a);default:throw new Error(`Unsupported partition type: ${PS[r]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case PS.FIRST_DIM_SIZE:return e[0];case PS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case PS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${PS[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const a=US(t,!1),s=D(this.valuesDType,I(a));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)r=this.calculateOutputIndex(e-1,r,n[e],t[e]);this.setOutput(this.raggedRank,r,s,a)}return[a,s]}setOutput(e,t,n,a){if(0===n.length)return;const s=this.values,r=n;let i=a.slice();i=i.slice(e+1);const o=I(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;js((()=>{const t=Qi(u,e),n=io(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let a=e<l?t[e]:-1;if(a!==d){if(h<d){const e=s.subarray(c*o);WS(r.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;a=Math.floor(e/o)}if(a>d)if(1===this.defaultValue.length)r.subarray(d*o,a*o).fill(this.defaultValue[0]),d=a;else for(;a>d;)WS(r.slice(d*o),u,o),++d;a<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function WS(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function US(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function VS(e,t,n,a,s,r,i,o,l,u){return new BS(e,t,n,a,s,r,i,o,l,u).compute()}const jS={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:s,values:r,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=VS(u,s.shape,c,r.shape,r.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,r.dtype,m)}};function GS(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return G(0,a);const s=G(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const HS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,dtype:r,step:i}=n,o=GS(a,s,i,r);return t.makeTensorInfo([o.length],r,o)}},qS=Yx(fn,(e=>1/e)),KS={kernelName:fn,backendName:"cpu",kernelFunc:qS},XS={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a;Hx(s,"resizeBilinear");const l=W(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(I([h,u,c,f])),b=[r&&u>1?d-1:d,r&&c>1?p-1:p],y=[r&&u>1?u-1:u,r&&c>1?c-1:c];let x=0;const k=b[0]/y[0],w=b[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?k*(t+.5)-.5:k*t;const a=Math.max(0,Math.floor(n)),s=n-a,r=Math.min(d-1,Math.ceil(n)),o=e*l[0]+a*l[1],u=e*l[0]+r*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+r*l[2],b=u+r*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],r=t+(m[d+e]-t)*a,i=r+(n+(m[b+e]-n)*a-r)*s;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},YS={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a;Hx([r,s],"resizeBilinearGrad");const o=W(s.shape),[l,u,c,h]=s.shape,[,d,p]=r.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(r.dataId).values;let k=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,a=Math.floor(n),s=Math.min(Math.ceil(n),u-1),r=t+a*o[1],i=t+s*o[1],l=n-a,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),a=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=r+n*o[2],m=r+a*o[2],g=i+n*o[2],b=i+a*o[2],w=d*u,v=d*s,I=l*u,S=l*s;for(let e=0;e<h;e++){const t=x[k++];f[p+e]+=t*w,f[m+e]+=t*v,f[g+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},JS={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a;Hx(s,"resizeNearestNeighbor");const l=W(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),b=[r&&u>1?d-1:d,r&&c>1?p-1:p],y=[r&&u>1?u-1:u,r&&c>1?c-1:c],x=b[0]/y[0],k=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let a=Math.min(d-1,r?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const s=t+a*l[1];for(let e=0;e<c;e++){const t=i?k*(e+.5):k*e;let n=Math.min(p-1,r?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=s+n*l[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},ZS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a;Hx([r,s],"resizeNearestNeighborGrad");const o=W(s.shape),l=W(r.shape),[u,c,h,d]=s.shape,[,p,f]=r.shape,m=new Float32Array(u*c*h*d),g=n.data.get(r.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],k=b[1]/y[1],w=1/x,v=1/k,I=2*Math.ceil(w)+2,S=2*Math.ceil(v)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],a=Math.floor(e*w),s=Math.floor(a-I/2);for(let a=0;a<h;a++){const r=n+a*o[2],u=Math.floor(a*v),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){const u=r+s;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],r=t*k;a===Math.min(h-1,i?Math.round(r):Math.floor(r))&&(o+=g[s+n])}}m[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},QS={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:r}=a;Hx(s,"reverse");const i=s.shape.length,o=R(r,s.shape);if(0===i)return ek({inputs:{x:s},backend:n});const l=new ts(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},eC={kernelName:ha,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:r,center:i}=t,o=n,l=F(a.dtype,I(a.shape)),[u,c,h,d]=a.shape,[p,f]=Zu(i,c,h),m=Math.sin(s),g=Math.cos(s),b=o.data.get(a.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let a=0;a<h;a++){const s=a*d;for(let i=0;i<d;i++){const o=[u,e,a,i],y=o[2],x=o[1];let k=(y-p)*g-(x-f)*m,w=(y-p)*m+(x-f)*g;k=Math.round(k+p),w=Math.round(w+f);let v=r;"number"!=typeof r&&(v=3===i?255:r[i]),k>=0&&k<h&&w>=0&&w<c&&(v=b[t+w*(h*d)+k*d+i]),l[t+n+s+i]=v}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},tC=Yx(In,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),nC={kernelName:In,backendName:"cpu",kernelFunc:tC},aC=Xx((e=>1/Math.sqrt(e))),sC=Jx(Sn,aC),rC={kernelName:Sn,backendName:"cpu",kernelFunc:sC};function iC(e,t,n,a,s,r,i,o,l,u){const c=[a/s,s],h=e.values,d=t.values;if(0===a)return Tr(n,t.dtype);const p=l instanceof ts?l:Tr(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<r;e++){const r=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];r.push(n),l+=n*o[t]}if(l<0||l>=a/s)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const oC={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:r}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=oc(0,s,i),d=iC(n.bufferSync(s),n.bufferSync(r),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function lC(e,t){let n=0,a=e.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),e[s]<t?n=s+1:a=s;return a}function uC(e,t){let n=0,a=e.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),e[s]<=t?n=s+1:a=s;return a}const cC={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:r}=t,{side:i}=a,o=function(e,t,n,a,s,r){const i=D("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*a,(o+1)*a),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===r?lC(n,t[e+l]):uC(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(r.dataId).values,s.shape[0],s.shape[1],r.shape[1],i);return n.makeTensorInfo(r.shape,"int32",o)}},hC={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:r}=t;Hx([a,s,r],"select");const i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,c=fs(s.dtype,r.dtype),h=G(I(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:I(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},dC=lc,pC=uc,fC=Yx(En,(e=>e>=0?pC*e:dC*(Math.exp(e)-1))),mC={kernelName:En,backendName:"cpu",kernelFunc:fC},gC=Yx(Dn,(e=>e<0?-1:e>0?1:0)),bC={kernelName:Dn,backendName:"cpu",kernelFunc:gC},yC=Yx(An,(e=>Math.sin(e))),xC={kernelName:An,backendName:"cpu",kernelFunc:yC},kC=Yx(Fn,(e=>Math.sinh(e))),wC={kernelName:Fn,backendName:"cpu",kernelFunc:kC},vC=Math.log(1.1920928955078125e-7)+2,IC=Yx(zn,(e=>{const t=e>-vC,n=e<vC,a=Math.exp(e);let s;return s=n?a:t?e:Math.log(1+a),s})),SC={kernelName:zn,backendName:"cpu",kernelFunc:IC},CC={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,paddings:i}=a;Hx([s],"spaceToBatchND");const o=I(r),l=[[0,0]];l.push(...i);for(let e=1+r.length;e<s.shape.length;++e)l.push([0,0]);const u=NS.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Qu(u.shape,r,o,!1),h=ec(c.length,r.length,!1),d=tc(u.shape,r,o,!1),p=Rk({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Vk({inputs:{x:p},backend:n,attrs:{perm:h}}),m=Rk({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function $C(e,t,n,a,s,r,i){const o=t[0],l=r[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(zc(o));return[D(n,0),[0,h],D(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Oc(t,n));if(n>=l)throw new Error(Lc(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=a;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],r=D(n,t*h),d=D(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)r[i*h+n]=e[t*h+n];d[i]=a[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];r[t*h+0]=e;for(let e=1;e<h;++e)r[t*h+e]=0;d[t]=i}return[r,[t,h],d,u,c]}}const NC={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:s,denseShape:r,defaultValue:i}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${r.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=$C(o,a.shape,a.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function TC(e,t,n,a,s){const r=I(a),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Mc(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Pc(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(r/u);if(u*e!==r)throw new Error(Wc(a,l));l[c]=e}if(I(l)!==r)throw new Error(Uc(a,l));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=D(n,i*o);for(let t=0;t<i;++t){let n=0;for(let a=0;a<h;++a)n+=e[t*h+a]*d[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const EC={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:s,newShape:r}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(r.dataId).values),[u,c,h]=TC(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}};function RC(e,t,n,a,s,r=!1,i=0){const o=a.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=D(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Gc(g,c));g>m&&d.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=a[t];if(n<0||n>=l[0])throw new Error(Hc(t,a[t],l[0]));for(let t=0;t<u;t++)d[g*u+t]+=e[n*u+t]}if(r)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]}const AC={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${r.shape}`);if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,[u,c]=RC(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(c,a.dtype,u)}},FC={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${r.shape}`);if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,[u,c]=RC(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(c,a.dtype,u)}},DC={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:r,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=oc(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(r.dtype){case"bool":m=iC(f,n.bufferSync(r),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":m=iC(f,n.bufferSync(r),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":m=iC(f,n.bufferSync(r),o,d,c,u,l,h,ja(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${r.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},_C={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:r,axis:i}=a,o=R(i,s.shape)[0],l=_c(s,r,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const a=mw({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}},zC=Xx((e=>Math.sqrt(e))),OC=Yx(On,(e=>Math.sqrt(e))),LC={kernelName:On,backendName:"cpu",kernelFunc:OC},MC={kernelName:qn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t;Hx(n,"square");const s=a.data.get(n.dataId).values,r=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];r[e]=t*t}return{dataId:a.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},PC=sk(((e,t)=>{const n=e-t;return n*n})),BC=Sk(Hn,PC),WC={kernelName:Hn,backendName:"cpu",kernelFunc:BC},UC=Xx(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:s}=t;return e.replace(new RegExp(n,a?"g":""),s)})),VC={kernelName:Kn,backendName:"cpu",kernelFunc:Jx(Kn,UC)},jC=Yx(ca,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),GC={kernelName:ca,backendName:"cpu",kernelFunc:jC};function HC(e,t,n,a){const s=Tr(e,t.dtype);for(let e=0;e<s.size;e++){const r=s.indexToLoc(e),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[e]*n[e]+a[e];s.set(t.get(...i),...r)}return s}const qC={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=a;Hx(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:x,strides:w}=Di(s.shape,r,i,o,l,u,c,h,d);let v;if(m)v=Rk({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||b){k(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ki(y,x,w),t=mw({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});v=Rk({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=HC(p,n.bufferSync(s),w,y);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class KC{constructor(e,t,n,a,s,r){this.separator=Va(e),this.nGramWidths=t,this.leftPad=Va(n),this.rightPad=Va(a),this.padWidth=s,this.preserveShort=r}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,s,r){for(let i=0;i<s;++i){const o=this.getPadWidth(r),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=r-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[a+i]=new Uint8Array(d);const p=n[a+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<a;++s){let a=t[s]>=e;if(a=a&&t[s]<=n,!a)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,r=D("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)r[e]=0;return[e,r]}r[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),r[e]=r[e-1]+a}const i=new Array(r[s]);for(let n=0;n<s;++n){const a=t[n];let s=r[n];if(this.nGramWidths.forEach((r=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,r);this.createNGrams(e,a,i,s,l,r),s+=l})),this.preserveShort&&s===r[n]){const r=t[n+1]-t[n];if(0===r)continue;const o=r+2*this.padWidth,l=1;this.createNGrams(e,a,i,s,l,o)}}return[i,r]}}function XC(e,t,n,a,s,r,i,o){return new KC(n,a,s,r,i,o).compute(e,t)}const YC={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:s,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=XC(d,p,s,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function JC(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let r=e.indexOf(s);for(;-1!==r;){const t=e.subarray(0,r);n&&0===t.length||a.push(t),r=(e=e.subarray(r+1)).indexOf(s)}return void(n&&0===e.length||a.push(e))}let s=0;for(let r=0;r<e.length+1;r++)if(r===e.length||-1!==t.indexOf(e[r])){const t=e.subarray(s,r);n&&0===t.length||a.push(t),s=r+1}}function ZC(e,t,n){const a=e.length,s=[];let r=0,i=0;const o=new Array(a);for(let l=0;l<a;++l){const a=s.length;JC(e[l],t,n,s);const u=s.length-a;o[l]=u,r+=u,i=Math.max(i,u)}const l=D("int32",2*r),u=new Array(r),c=[a,i];let h=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const QC={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:s}=a,{input:r,delimiter:i}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=ZC(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function e$(e,t){const n=D("int32",e.length);for(let a=0;a<e.length;++a)n[a]=Pa(e[a]).modulo(t).getLowBitsUnsigned();return n}const t$={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:s}=a,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=e$(n.data.get(r.dataId).values,s);return n.makeTensorInfo(r.shape,"int32",i)}},n$=Yx(ea,(e=>Math.tan(e))),a$={kernelName:ea,backendName:"cpu",kernelFunc:n$},s$=Yx(ta,(e=>Math.tanh(e))),r$={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:s,updates:r}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=oc(0,s,a.shape),h=n.bufferSync(s),d=n.bufferSync(r),p=n.bufferSync(a),f=iC(h,d,a.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function i$(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const a=Tr(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const r=e.locToIndex(s);a.values[t]=e.values[r]}return a}const o$={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:r}=a;Hx(s,"tile");const i=i$(n.bufferSync(s),r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},l$=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function u$(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const s=a-n+1,r=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(r-s/2);u$(e,t,Math.max(n,Math.floor(t-r*o/s+l)),Math.min(a,Math.floor(t+(s-r)*o/s+l)))}const s=e[t];let r=n,i=a;for(x(e,n,t),l$(e[a],s)>0&&x(e,n,a);r<i;){for(x(e,r,i),r++,i--;l$(e[r],s)<0;)r+=1;for(;l$(e[i],s)>0;)i-=1}0===l$(e[n],s)?x(e,n,i):(i+=1,x(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function c$(e,t,n,a,s){const r=t[t.length-1],[i,o]=[e.length/r,r],l=F(n,i*a),u=F("int32",i*a);for(let t=0;t<i;t++){const n=t*o,r=e.subarray(n,n+o);let i=new Array(r.length);r.forEach(((e,t)=>i[t]={value:e,index:t})),a<i.length&&(u$(i,a),i=i.slice(0,a)),s&&i.sort(l$);const c=t*a,h=l.subarray(c,c+a),d=u.subarray(c,c+a);for(let e=0;e<a;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=a,[Tr(c,n,l),Tr(c,"int32",u)]}const h$={kernelName:aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:r,sorted:i}=a;Hx(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=c$(o,s.shape,s.dtype,r,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},d$={kernelName:sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:r}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],b=W(s.shape),y=b[0],x=b[1],k=b[2],w=W(g),v=w[0],S=w[1],C=w[2],$=F(s.dtype,I(g));$.fill(l);const N=a.data.get(s.dataId).values,T=a.data.get(r.dataId).values;for(let e=0;e<c;++e){const t=1===r.shape[0]?T:T.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let s=0;s<p;++s){let r;const u=t[6]*a+t[7]*n+1;if(0===u)continue;const c=(t[0]*a+t[1]*n+t[2])/u,p=(t[3]*a+t[4]*n+t[5])/u,f=p$(c,d,o),m=p$(p,h,o);switch(i){case"nearest":r=m$(N,h,d,y,x,k,e,m,f,s,l);break;case"bilinear":r=g$(N,h,d,y,x,k,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}$[e*v+n*S+a*C+s]=r}return a.makeTensorInfo(g,s.dtype,$)}return{dataId:a.write($,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function p$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return b(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return b(0,n,t-1)}(e,t);case"nearest":return function(e,t){return b(0,e,t-1)}(e,t);default:return e}}function f$(e,t,n,a,s,r,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*a+o*s+l*r+u]:c}function m$(e,t,n,a,s,r,i,o,l,u,c){return f$(e,t,n,a,s,r,i,Math.round(o),Math.round(l),u,c)}function g$(e,t,n,a,s,r,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*f$(e,t,n,a,s,r,i,h,d,u,c)+(l-d)*f$(e,t,n,a,s,r,i,h,f,u,c))+(o-h)*((f-l)*f$(e,t,n,a,s,r,i,p,d,u,c)+(l-d)*f$(e,t,n,a,s,r,i,p,f,u,c))}function b$(e,t,n,a){const s=R(t,n)[0],r=[1,n[0],1];for(let e=0;e<s;e++)r[0]*=n[e];r[1]=n[s];for(let e=s+1;e<n.length;e++)r[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),l=new ts(r,a,e),u=[],c=1===r[0]&&1===r[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<r[0];n++)for(let a=0;a<r[2];a++)e.push(l.get(n,t,a));n=e.join(",")}const a=i.get(n);if(null!=a)o[t]=a;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const h=r.slice();h[1]=i.size;const d=new ts(h,a);u.forEach(((e,t)=>{for(let n=0;n<r[0];n++)for(let a=0;a<r[2];a++)d.set(l.get(n,e,a),n,t,a)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const y$={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:s}=n,{x:r}=t;Hx(r,"unique");const i=a.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:u}=b$(i,s,r.shape,r.dtype);return[a.makeTensorInfo(l,r.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},x$={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:s}=t;let{axis:r}=a;r<0&&(r+=s.shape.length);const i=s.shape.length,o=s.shape[r],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==r&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[r]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[r]=e;const t=mw({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=Rk({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},k$={kernelName:la,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:r}=t,{numSegments:i}=a;Hx(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-r.shape.length;let c=r;for(let e=0;e<u;++e){const t=Tv({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Ba(e,"int32"),a=n.makeTensorInfo([],"int32",t),r=mv({inputs:{a,b:c},backend:n}),i=vk({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=lv({inputs:{a:i,b:s},backend:n}),h=cv({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(a),l.push(r),l.push(i),l.push(u),l.push(h)}const h=CS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},w$=[_k,Ok,Mk,Bk,Ek,Wk,Gk,Hk,qk,Kk,Yk,Zk,ew,aw,rw,uw,cw,hw,dw,Dk,pw,bw,kw,vw,Iw,Ik,$w,Tw,bk,Ew,_w,Ow,Lw,Mw,Pw,Bw,Ww,Vw,Gw,Hw,qw,Kw,Xw,Yw,Zw,Qw,ev,tv,nv,av,sv,rv,dv,Qx,pv,gv,Sv,Nv,Ev,Fv,Vv,Gv,Hv,Xv,Zv,Qv,eI,nI,sI,oI,cI,tk,hI,Fw,pI,mI,bI,ak,kI,II,CI,TI,RI,DI,zI,MI,PI,BI,VI,HI,qI,KI,XI,YI,JI,ZI,QI,nS,aS,iS,uS,uv,hS,pS,mS,bS,kS,wS,SS,$S,NS,RS,ok,FS,zS,MS,jS,HS,kk,zv,KS,uk,hk,Ak,XS,YS,JS,ZS,QS,eC,nC,rC,oC,cC,hC,mC,fk,bC,xC,wC,gw,lS,SC,CC,NC,EC,AC,FC,DC,_C,LC,MC,WC,VC,GC,qC,YC,QC,t$,Pv,hv,a$,{kernelName:ta,backendName:"cpu",kernelFunc:s$},r$,o$,h$,d$,jk,y$,x$,k$,IS];for(const e of w$)va(e);const v$={},I$={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function S$(e,t){if(!(e in v$)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(ee().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete v$[e]}),!1),ee().getBool("SOFTWARE_WEBGL_ENABLED")&&(I$.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",I$)||n.getContext("experimental-webgl",I$):n.getContext("webgl2",I$)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;v$[e]=n}const n=v$[e];return null==n||n.isContextLost()?(delete v$[e],S$(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),v$[e])}var C$,$$,N$;function T$(e,t){return[t,e]}function E$(e){const t=I(e);return $(Math.ceil(t/4))}function R$(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function A$(e,t){const n=e;let a,s,r,i,o,l,u,c,h,d;return 2===ee().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,r=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(a=e.RGBA,s=e.RGBA,r=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function F$(e,t){const n=t();return ee().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function D$(e){return!!(ee().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function _$(e,t){return V$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(C$||(C$={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}($$||($$={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(N$||(N$={}));const z$=/ERROR: [0-9]+:([0-9]+):/g;function O$(e,t){const n=z$.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],s=e.split("\n"),r=s.length.toString().length+2,i=s.map(((e,t)=>N((t+1).toString(),r)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,a-1),u=i.slice(a-1,a),c=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${N(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function L$(e,t){if(F$(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function M$(e,t,n,a,s,r,i){const o=e.getAttribLocation(t,n);return-1!==o&&(F$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),F$(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,r,i))),F$(e,(()=>e.enableVertexAttribArray(o))),!0)}function P$(e,t,n,a){F$(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),F$(e,(()=>e.activeTexture(e.TEXTURE0+n))),F$(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),F$(e,(()=>e.uniform1i(n,a)))}function B$(e,t,n){F$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),F$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function W$(e,t){F$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),F$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function U$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function V$(e,t,n){const a=F$(e,(()=>t()));if(null==a)throw new Error(n);return a}function j$(e,t=2){return I(e.slice(0,e.length-t))}function G$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function H$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[j$(e),...G$(e)]),t}function q$(e){return e%2==0}function K$(e,t){if(S(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(q$(n)&&q$(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&q$(e[0])&&q$(t[0])}let X$,Y$;function J$(e,t){return null!=e.getExtension(t)}function Z$(e){try{if(null!=S$(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Q$(e){const t=A$(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),s}function eN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&k("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const tN=ee();function nN(){let e,t,n,a,s,r,i,o,l,u;return 2===ee().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",r="outputColor",i="out vec4 outputColor;",o=ee().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",r="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:r,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function aN(e,t,n="index"){const a=W(t);return a.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function sN(e,t,n="index"){const a=W(t);return a.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function rN(e){const t=W(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}tN.registerFlag("HAS_WEBGL",(()=>tN.getNumber("WEBGL_VERSION")>0)),tN.registerFlag("WEBGL_VERSION",(()=>Z$(2)?2:Z$(1)?1:0)),tN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),tN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===tN.get("WEBGL_VERSION"))),tN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),tN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),tN.registerFlag("WEBGL_PACK",(()=>tN.getBool("HAS_WEBGL"))),tN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_CLIP",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_REDUCE",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_CONV_IM2COL",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>tN.getBool("WEBGL_PACK"))),tN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==X$){const t=S$(e);X$=t.getParameter(t.MAX_TEXTURE_SIZE)}return X$}(tN.getNumber("WEBGL_VERSION")))),tN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Y$){const t=S$(e);Y$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Y$)}(tN.getNumber("WEBGL_VERSION")))),tN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=tN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=S$(e);return t=J$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:J$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),tN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>tN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ts())),tN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=S$(e);if(1===e){if(!J$(t,"OES_texture_float"))return!1}else if(!J$(t,"EXT_color_buffer_float"))return!1;return Q$(t)}(tN.getNumber("WEBGL_VERSION")))),tN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!tN.getBool("WEBGL_FORCE_F16_TEXTURES")&&tN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),tN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=S$(e);if(1!==e){if(J$(t,"EXT_color_buffer_float"))return Q$(t);const e="EXT_color_buffer_half_float";if(J$(t,e)){const n=t.getExtension(e);return function(e,t){const n=A$(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),r}(t,n)}return!1}return!!J$(t,"OES_texture_float")&&!!J$(t,"WEBGL_color_buffer_float")&&Q$(t)}(tN.getNumber("WEBGL_VERSION")))),tN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=tN.getNumber("WEBGL_VERSION"))&&null!=S$(e).fenceSync;var e})),tN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>tN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),tN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),tN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ts()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),tN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),tN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),tN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),tN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),tN.registerFlag("WEBGL_EXP_CONV",(()=>!1)),tN.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>tN.getBool("IS_TEST"))),tN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),tN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),tN.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),tN.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const iN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:oN}=a;function lN(e,t,n){const a=[];if(e.forEach((e=>{const t=I(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=yN(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=a.join("\n"),r=e.map((e=>function(e,t,n=!1,a){let s="";s+=n?cN(e,a):uN(e,a);const r=e.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",r=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=oN(e.shapeInfo.logicalShape,t.logicalShape),l=bN(i),u=i-r;let c;const h=["x","y","z","w","u","v"];c=0===r?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&r>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===I(e.shapeInfo.logicalShape),m=1===I(t.logicalShape);if(1!==r||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=r-2,t=r-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${a}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",r=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&S(i,r))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=bN(l),c=oN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${a}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=nN(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${hN}\n    ${dN}\n    ${pN}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(S(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),r=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),r=s*Math.ceil(e[e.length-2]/2);let i=r,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return S(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${sN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const a=aN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${sN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=aN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=aN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=aN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=fN),[h,l,c,s,u,r,n.userCode].join("\n")}function uN(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[s,r]=e.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=mN(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${gN(e)}\n      }\n    `;const s=e.shapeInfo.texShape,r=s[0],i=s[1];if(1===i&&1===r)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=mN(n);return 1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===r?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape;if(null!=r&&S(n,r)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=A(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${uN(xN(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${kN(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${gN(e)}\n      }\n    `;const u=r[0],c=r[1],h=mN(a);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=A(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${uN(xN(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${kN(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${i}, 1)));\n        ${gN(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===r&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=mN(a);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=n[3],i=n[2]*r,o=n[1]*i,{newShape:l,keptDims:u}=A(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${uN(xN(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${kN(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${r}, 1)));\n        ${gN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(p===r&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const b=mN(a);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],r=t[3]*s,i=t[2]*r,o=t[1]*i,{newShape:l,keptDims:u}=A(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${uN(xN(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${kN(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${r}, ${s})) +\n          depth3;\n        ${gN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${r}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${r} +\n          depth2 * ${s} + depth3 + ${mN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:r}=A(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${uN(xN(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${kN(t,r)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${gN(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${mN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function cN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${nN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,r=nN();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,i=r[0],o=r[1],l=nN();if(null!=r&&S(n,r))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const a=[1,2],r=["b","row","col"];return`\n        ${cN(xN(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${kN(r,a)});\n        }\n      `}const o=nN();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=nN();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const r=e.shapeInfo.logicalShape,i=r.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=r[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${a}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const hN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function mN(e){return`offset${e}`}function gN(e){const t=e.name,n=I(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function bN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yN(e,t,n){const{newShape:a,keptDims:s}=A(t),r=t.length,i=e&&3===r&&1===t[0],o=i?t.slice(1):a,l=!e&&r>1&&!S(t,n)&&a.length<r||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function xN(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function kN(e,t){return t.map((t=>e[t])).join(", ")}function wN(e,t,n){const a=[],s=[];let r,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===ee().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const r={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${s}Shape`,c),r.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),a.push(r)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const a of t.customUniforms)s.push(e.getUniformLocation(n,a.name,c));return{variablesLocations:a,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}}function vN(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,s=t[n],r=s.shape;if(!S(a,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${r} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!S(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function IN(e){return ee().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class SN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=C$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=nN();this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?sN(["r","c","d"],e):aN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class CN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=C$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=nN();this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?sN(["r","c","d"],e):aN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class $N{constructor(e){this.variableNames=["A"],this.outTexUsage=$$.DOWNLOAD;const t=nN();this.outputShape=e,this.userCode=`\n      ${iN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class NN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$$.DOWNLOAD;const t=nN();this.outputShape=e,this.userCode=`\n      ${iN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const TN={R:0,G:1,B:2,A:3};class EN{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=nN();this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let r="";for(let e=0;e<n.length;e++){const t=n[e];r+=`\n          if(offset == ${e}) {\n            result = values[${TN[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${r}\n        }\n        ${a.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class RN{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=nN();this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length);let a="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const r=2*t+s;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${s};\n        }\n    `}}function AN(e,t,n,a,s,r){!function(e,t){const n=ee().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return V$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return F$(e,(()=>e.bindTexture(o,i))),F$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),F$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),F$(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),F$(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ee().getNumber("WEBGL_VERSION")?F$(e,(()=>e.texImage2D(o,0,a,t,n,0,s,r,null))):F$(e,(()=>e.texStorage2D(o,1,a,t,n))),F$(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function FN(e){return e.internalFormatFloat}function DN(e){return e.internalFormatHalfFloat}function _N(e){return e.downloadTextureFormat}function zN(e){return e.internalFormatPackedFloat}function ON(e){return e.internalFormatPackedHalfFloat}class LN{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ee().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){v$[e]=t}(t,e)):this.gl=S$(t),e=this.gl,2===ee().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>F$(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>F$(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>F$(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>F$(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>F$(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>F$(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>F$(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>F$(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ee().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=_$(this.gl,e),J$(this.gl,t))this.textureHalfFloatExtension=_$(this.gl,t);else if(ee().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),J$(this.gl,a))this.colorBufferHalfFloatExtension=_$(this.gl,a);else if(ee().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",J$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!J$(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=function(e){return function(e,t){const n=V$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return F$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),F$(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=V$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return F$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),F$(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return V$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=A$(this.gl,this.textureHalfFloatExtension)}get debug(){return ee().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;F$(e,(()=>e.finish())),F$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),F$(e,(()=>e.deleteFramebuffer(this.framebuffer))),F$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),F$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),F$(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=T$(t,n);return AN(e,s,r,FN(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=T$(t,n);return AN(e,s,r,DN(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=T$(t,n);return AN(e,s,r,_N(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){F$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ee().getNumber("WEBGL_VERSION")?F$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):F$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ee().getNumber("WEBGL_VERSION")?F$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):F$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),F$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,s,r){let i,o,l;F$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=r.internalFormatPackedFloat),i.set(s),2===ee().getNumber("WEBGL_VERSION")?F$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):F$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i))),F$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=R$(t,n);return AN(e,s,r,ON(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,r]=R$(t,n);return AN(e,s,r,zN(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(W$(this.gl,this.framebuffer),this.outputTexture=null),F$(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[s,r]=T$(t,n),i=new Uint8Array(t*n*4);return F$(e,(()=>e.readPixels(0,0,s,r,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,s,r){return function(e,t,n,a,s,r,i){const o=e,l=new Float32Array(function(e,t){const[n,a]=R$(e,t);return n*a*4}(r,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,s=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,s),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();F$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return F$(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),F$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),F$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ee().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(s,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=s}else ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return F$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=nN();return function(e,t){const n=V$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(F$(e,(()=>e.shaderSource(n,t))),F$(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return V$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);F$(t,(()=>t.attachShader(n,this.vertexShader))),F$(t,(()=>t.attachShader(n,e))),function(e,t){if(F$(e,(()=>e.linkProgram(t))),!ee().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&L$(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;F$(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){F$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),M$(e,t,"clipSpacePos",n,3,20,0)&&M$(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(F$(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&L$(this.gl,this.program),F$(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return V$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),F$(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),P$(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,s]=R$(t,n);this.setOutputMatrixTextureDriver(e,a,s)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&L$(this.gl,this.program),U$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}F$(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),F$(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=_$(this.gl,2===ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await T((()=>this.disposed||this.isQueryAvailable(e,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ee().platform&&(n=ee().platform.setTimeoutCustom.bind(ee().platform)),T((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),B$(this.gl,e,this.framebuffer),this.debug&&U$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(B$(this.gl,this.outputTexture,this.framebuffer),this.debug&&U$(this.gl)):W$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;B$(a,e,this.framebuffer),this.debug&&U$(a),this.outputTexture=e,F$(a,(()=>a.viewport(0,0,t,n))),F$(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),F$(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:MN,XI:PN,Nk:BN,f6:WN,ct:UN,YG:VN,hH:jN,z3:GN,sG:HN,uM:qN,vS:KN,qB:XN,GG:YN,rq:JN,lg:ZN,WR:QN,cu:eT,GE:tT,px:nT,jC:aT,He:sT,hE:rT,BF:iT,Dk:oT,cl:lT,_B:uT,ub:cT,_f:hT,Ku:dT,qy:pT,Zy:fT,bu:mT,zv:gT,dH:bT,HS:yT,yH:xT,l3:kT,z9:wT,x6:vT,_m:IT,eW:ST,GK:CT,SP:$T,yr:NT,dl:TT,Dw:ET,xT:RT,_X:AT,wz:FT}=s;function DT(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function _T(e,t){return 1===t?[e]:DT(e,t)}class zT{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=IN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=_T("rc",this.rank),t=bN(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let s=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class OT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var a,s;this.userCode=`\n      ${a=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=a[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${a[e+1]})`;return s}(e.map(((e,t)=>t)),t);return a.map(((t,s)=>`int ${e[s]} = ${n} / ${a[s]}; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a[s]}`:`index -= ${e[s]} * ${a[s]}`};`)).join("")}(["r","c","d"],"inputShape"):aN(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class LT{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=PT(t,n),s=BT(e,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const r=MT(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return a===N$.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===N$.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===N$.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===N$.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===N$.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=PT(n,a),r=BT(t,s,a);r in this.freeTextures||(this.freeTextures[r]=[]);const i=MT(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=ee().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[r].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[r],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function MT(e,t,n,a,s){const r=function(e,t){switch(e){case N$.PACKED_2X2_FLOAT32:return zN(t);case N$.PACKED_2X2_FLOAT16:return ON(t);case N$.UNPACKED_FLOAT32:return FN(t);case N$.UNPACKED_FLOAT16:return DN(t);case N$.PACKED_4X1_UNSIGNED_BYTE:return _N(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let i;if(s){const[t,n]=R$(e[0],e[1]);i=t*n}else{const[t,n]=T$(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,r);return i*o}function PT(e,t){if(e===$$.UPLOAD)return N$.PACKED_2X2_FLOAT32;if(e===$$.RENDER||null==e)return function(e){return ee().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?N$.PACKED_2X2_FLOAT32:N$.UNPACKED_FLOAT32:e?N$.PACKED_2X2_FLOAT16:N$.UNPACKED_FLOAT16}(t);if(e===$$.DOWNLOAD||e===$$.PIXELS)return N$.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function BT(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class WT{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const UT="if (isnan(x)) return x;",VT="return abs(x);",jT=UT+"\n  return (x < 0.0) ? 0.0 : x;\n",GT=UT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",HT="return x;";class qT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class KT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length);const t=e.length,n=_T("rc",t),a=bN(t),s=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),r=n.slice(-2),i=t<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const XT=Zc,YT={},JT=ee().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class ZT extends f{nextDataId(){return ZT.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ee().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof LN)t=e;else{const n=S$(ee().getNumber("WEBGL_VERSION"),e);t=new LN(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=S$(ee().getNumber("WEBGL_VERSION"));t=new LN(e),this.binaryCache=((n=ee().getNumber("WEBGL_VERSION"))in YT||(YT[n]={}),YT[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new LT(this.gpgpu),this.numMBBeforeWarning=null==ee().global.screen?1024:ee().global.screen.height*ee().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new p(this,Us())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,s,r){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,s]},o.texShape=[a,s];const l=H$(t),u=new EN(l,!1,r),c=this.runWebGLProgram(u,[i],n,[[a,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((ee().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ee().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:$$.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,s){if(ee().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:$$.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:r,shape:i,isPacked:o}=t;if(null!=r){let t;t=o?new qT(i,HT):new WT(i,HT);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Ua()),c="complex64"===a?gc(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Ua()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:r,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new qT(a,HT):new WT(a,HT);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(ee().getBool("DEBUG")&&!ee().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ee().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==r&&ee().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...E$(a))}if(this.pendingRead.set(e,[]),"complex64"!==r&&await this.gpgpu.createAndWaitForFence(),"complex64"===r){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=gc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=I(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;F$(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Us().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:s,slice:r,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=r){let n;n=o?new qT(s,HT):new WT(s,HT);const a=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),r=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),r}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Us().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ja(e)));return Tr(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Tr(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!D$(n)){if(ee().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=I(t);if(ee().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...E$(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),r}const r=ee().getBool("WEBGL_PACK")&&!0===a,i=r?H$(t):t,o=r?new NN(i):new $N(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Ha(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),r=Ha(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:r[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ua(),endMs:null}}endTimer(e){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ua(),e)}async getQueryTime(e){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:s,isPacked:r,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,s,r)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=JT){return ee().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&I(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ma("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return XT(e.shape,t)}packedUnaryOp(e,t,n){const a=new qT(e.shape,t),s=this.compileAndRun(a,[e],n);return Us().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=bT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ee().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,VT,e.dtype);const t=new WT(e.shape,VT),n=this.compileAndRun(t,[e]);return Us().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&O(n[0])){const s=n.map((e=>Va(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Us().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new KT(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new zT(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[j$(e.shape),...G$(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[j$(t),...G$(t)],r=new OT(s,n),i=[n],o=this.runWebGLProgram(r,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:s,dtype:r}=n;null!=t&&k(I(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=H$(s);let o;o=a?new CN(i):new SN(i);const l=[null!=t?t:E$(i)];return{dtype:r,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:r,dataId:e}],r,l,!0,t).dataId}}runWebGLProgram(e,t,n,a,s=!1,r){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===C$.DENSE){const t=null!=r?r:E$(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===I(i.shape))return o.values=F(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&I(t.shape)<=ee().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!K$(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const r=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=yN(e.packedInputs,t.shape,r);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=W(o);h=`${e[0]===r[1]}_${e[e.length-1]===r[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&S(t.shape,r),f=1===I(t.shape),m=Qr(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&S(r,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${r[0]>1}_${r[1]>1}`;a+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let r=e.constructor.name;return r+="_"+a+"_"+s+`${ee().getNumber("WEBGL_VERSION")}`,r}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,a){const s=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),r=s.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=lN(s,i,t),l=function(e,t){const n=V$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(F$(e,(()=>e.shaderSource(n,t))),F$(e,(()=>e.compileShader(n))),ee().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw O$(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return ee().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i},wN(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ee().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,s){t.program.enableShapeUniforms||(vN(t.inShapeInfos,n),vN([t.outShapeInfo],[a]));const r=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):e.setOutputMatrixTexture(r.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ee().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<n.length;++a){const s=n[a],{uniform:r,offset:i,shape:o,texShape:l}=t.variablesLocations[a];if(o){const{uniformShape:n}=yN(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=r)if(s.isUniform)if(I(s.shape)<2)e.gl.uniform1f(r,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,r,a)}const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=W(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const a=t.program.customUniforms[n],r=t.customUniformLocations[n],i=s[n];if("float"===a.type)e.gl.uniform1fv(r,i);else if("vec2"===a.type)e.gl.uniform2fv(r,i);else if("vec3"===a.type)e.gl.uniform3fv(r,i);else if("vec4"===a.type)e.gl.uniform4fv(r,i);else if("int"===a.type)e.gl.uniform1iv(r,i);else if("ivec2"===a.type)e.gl.uniform2iv(r,i);else if("ivec3"===a.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==a.type)throw Error(`uniform type ${a.type} is not supported yet.`);e.gl.uniform4iv(r,i)}}e.executeProgram()}(this.gpgpu,d,u,c,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ee().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ua();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ee().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ee().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=js((()=>{if(!ee().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ee().getBool("DEBUG");ee().set("DEBUG",!1);const t=this.abs(Pr(1e-8)).dataSync()[0];if(ee().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:r,usage:i,isPacked:o}=t;if(null!=r)return;const l=null!=this.activeTimers;let u;l&&(u=Ua());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=ee().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=ee().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&ee().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?y(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=A(e);e=t.newShape}let s=I(e),r=null;e.length<=1&&s<=n?r=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?r=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?r=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?r=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?r=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(r=[e[0],e[1]*e[2]*e[3]]);const i=null!=r&&Math.max(...r)>a&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(null==r||i)if(t){const t=j$(e);let n=2,a=2;e.length&&([n,a]=G$(e)),s=t*(n/2)*(a/2),r=$(s).map((e=>2*e))}else r=$(s);return r}(n,o),t.texShape=c),null!=s){const e=H$(n);let r,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=R$(c[0],c[1])),r=o?new RN(e,d):new EN(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?$$.PIXELS:$$.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],b=!0,y=this.runWebGLProgram(r,[f],a,g,b),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,ee().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Ua()-u)}else{const e=this.acquireTexture(c,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*z(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Uu(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw O$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:s,outShapeLocation:r,outShapeStridesLocation:i,outTexShapeLocation:o}=wN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=s,e.outShapeLocation=r,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:s,width:r,channels:i}=e,o=Us().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(a,t,n,s,r,i);return Us().makeTensorFromDataId(l,t,n,o)}}ZT.nextDataId=0,Es()&&qs("webgl",(()=>new ZT),2);const QT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class eE{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ti(t,n),this.enableShapeUniforms=IN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const tE="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class nE{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ti(t,n);const s=this.outputShape.length;this.enableShapeUniforms=IN(s);let r="";if(a)if(0===s||1===I(this.outputShape))r="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(r=`\n          ${bN(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?r+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":r+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=_T("coords",s);this.enableShapeUniforms?r+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:r+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${r}\n\n        setOutput(result);\n      }\n    `}}function aE(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const sE={kernelName:xt,backendName:"webgl",kernelFunc:aE};function rE(e){const{inputs:t,backend:n}=e,{real:a,imag:s}=t,r=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(r.dataId),o=aE({inputs:{x:a},backend:n}),l=aE({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const iE={kernelName:Ae,backendName:"webgl",kernelFunc:rE},oE="return (a < 0.) ? b * a : a;",lE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",uE={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:r}=a,i=n.makeTensorInfo([],"float32",Ba(r,"float32")),o=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nE(lE,s.shape,i.shape):new eE(oE,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},cE="return (a < 0.) ? b * a : a;",hE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",dE={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,r=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nE(hE,a.shape,s.shape):new eE(cE,a.shape,s.shape);return n.runWebGLProgram(r,[a,s],"float32")}},pE="if (isnan(x)) return x;";function fE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:r})=>{const{x:i}=s,o=r,l=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new qT(i.shape,t):new WT(i.shape,e),o.runWebGLProgram(u,[i],l)}}function mE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:r}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(a&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[a,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},r={dataId:a.dataId,dtype:a.dtype,shape:u.shape},i=new eE(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,r],fs(n.dtype,a.dtype))})),r=rE({inputs:{real:a,imag:s},backend:c});return c.disposeIntermediateTensorInfo(a),c.disposeIntermediateTensorInfo(s),r}const h=r||fs(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Yc(e):e,a="string"===l.dtype?Yc(t):t,[r,i]=s(l.shape,u.shape,n,a,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=r,o}let d;return d=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new nE(t,l.shape,u.shape,n):new eE(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function gE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":jT;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":GT;if("prelu"===e)return t?hE:cE;if("leakyrelu"===e)return t?lE:oE;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class bE{constructor(e,t,n,a=!1,s=!1,r=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=IN(this.outputShape.length);const u=a?e[1]:e[2],c=Math.ceil(u/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class yE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ti(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const xE="return a * b;";function kE(e){const{inputs:t,backend:n}=e,{a,b:s}=t,r=fs(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new yE("return areal * breal - aimag * bimag;",a.shape,s.shape),i=new yE("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(r,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=rE({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[i,o]=iT(a.shape,s.shape,e.values,t.values,r),l=n.makeTensorInfo(o,r);return n.texData.get(l.dataId).values=i,l}let i;return i=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nE(xE,a.shape,s.shape):new eE(xE,a.shape,s.shape),n.runWebGLProgram(i,[a,s],r)}const wE={kernelName:Xt,backendName:"webgl",kernelFunc:kE};function vE(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:r}=a,i=n,o=I(s.shape),l=E(r,o),u=I(l);k(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||K$(s.shape,l)||null!==c.texture&&K$(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const a=[j$(e.shape),...G$(e.shape)],s={dtype:e.dtype,shape:a,dataId:e.dataId},r=[j$(t),...G$(t)],i=new OT(r,a),o=[a],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const IE={kernelName:gn,backendName:"webgl",kernelFunc:vE};class SE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:r}=e;this.outputShape=[a,r];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${C(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class CE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:r}=e;this.outputShape=[a,r];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function $E(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Ju(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let r=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new SE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new SE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new CE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=r,r=a.runWebGLProgram(c,[r],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return r}class NE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const a=bN(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class TE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=bN(this.rank),s=DT("rc",this.rank),r=new Array(this.rank);for(let e=0;e<t.length;e++)r[t[e]]=s[e];const i=`vec2(${r.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${r.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function EE(e,t,n){const a=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TE(e.shape,t):new NE(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function RE(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a;return function(e,t,n,a){const s=t,r=e.shape.length,i=R(s,e.shape);let o=i;const l=Go(o,r),u=null!=l;let c=e;u&&(c=EE(e,l,a),o=qo(o.length,r)),jo("sum",o,r);const[h,d]=Uo(c.shape,o);let p=h;n&&(p=Vo(h,i));const f=I(d),m=vE({inputs:{x:c},attrs:{shape:[I(e.shape)/f,f]},backend:a}),g=$E(m,ms(e.dtype),"sum",a),b=vE({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(c),b}(s,r,i,n)}const AE={kernelName:Ln,backendName:"webgl",kernelFunc:RE};function FE(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{perm:r}=a,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[r[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=AT(e,s.shape,s.dtype,r,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=EE(s,r,i);return u}const DE={kernelName:ra,backendName:"webgl",kernelFunc:FE};function _E({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=a?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=I(m),y=I(g),x=ti(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);k(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const w=n?[b,h,p]:[b,p,h],v=a?[y,f,d]:[y,d,f],S=vE({inputs:{x:e},backend:s,attrs:{shape:w}}),C=vE({inputs:{x:t},backend:s,attrs:{shape:v}}),$=[S,C],N=Math.max(b,y),T=n?S.shape[1]:S.shape[2],E=null!=r,R=null!=i,A="leakyrelu"===l,F=null!=l?gE(l,!0):null;let D;if((1===p||1===f)&&T>1e3&&!1===(E||R||A||null!=F)){let e=S,t=C;n&&(e=FE({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),a&&(t=FE({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const r=1===f;let i=e;1!==f&&(i=vE({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),$.push(i));const o=1===f?2:1;let l=t;r&&(l=vE({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),$.push(l));const u=kE({inputs:{a:i,b:l},backend:s});D=RE({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=fs(e.dtype,t.dtype),u=new bE(w,v,[N,p,f],n,a,E,F,R,A),c=[S,C];if(null!=r&&c.push(r),R&&c.push(i),A){const e=s.makeTensorInfo([],"float32",Ba(o,"float32"));c.push(e),$.push(e)}D=s.runWebGLProgram(u,c,l)}const _=vE({inputs:{x:D},backend:s,attrs:{shape:x}});$.push(D);for(const e of $)s.disposeIntermediateTensorInfo(e);return _}const zE={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=a;return _E({a:s,b:r,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},OE="return abs(x);",LE={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=bT(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qT(a.shape,OE):new WT(a.shape,OE),n.runWebGLProgram(s,[a],a.dtype)}},ME=fE({opSnippet:UT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),PE={kernelName:ie,backendName:"webgl",kernelFunc:ME},BE=fE({opSnippet:UT+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),WE={kernelName:oe,backendName:"webgl",kernelFunc:BE},UE="return a + b;",VE=mE({opSnippet:UE,packedOpSnippet:UE,supportsComplex:!0,cpuKernelImpl:MN}),jE={kernelName:le,backendName:"webgl",kernelFunc:VE};class GE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class HE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const qE={kernelName:ue,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return aE({inputs:{x:s[0]},backend:a});if(s.length>ee().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),r=e({inputs:s.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const r=s.map((e=>e.dtype)).reduce(((e,t)=>fs(e,t))),i=s.map((e=>e.shape)),o=ee().getBool("WEBGL_PACK")?new HE(s[0].shape,i):new GE(s[0].shape,i);return a.runWebGLProgram(o,s,r)}},KE={kernelName:ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=R(r,s.shape);let u=l;const c=Go(u,o);let h=s;null!=c&&(h=FE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=qo(u.length,o)),jo("all",u,o);const[d,p]=Uo(h.shape,u),f=vE({inputs:{x:h},backend:n,attrs:{shape:[-1,I(p)]}}),m=$E(f,f.dtype,"all",n);let g;return g=vE(i?{inputs:{x:m},backend:n,attrs:{shape:Vo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},XE={kernelName:he,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=R(r,s.shape);let u=l;const c=Go(u,o);let h=s;null!=c&&(h=FE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=qo(u.length,o)),jo("any",u,o);const[d,p]=Uo(h.shape,u),f=vE({inputs:{x:h},backend:n,attrs:{shape:[-1,I(p)]}}),m=$E(f,f.dtype,"any",n);let g;return g=vE(i?{inputs:{x:m},backend:n,attrs:{shape:Vo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class YE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:s,outSize:r}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,r];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class JE{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],r=Math.ceil(s/t);this.outputShape=e.slice(0,-1),r>1&&this.outputShape.push(r),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=bN(o),u=_T("coords",o);let c,h;if(1===r){h=o+1;const e=bN(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=_T("sourceLocR",h-1).concat("inIdx.r"),g=_T("sourceLocG",h-1).concat("inIdx.g"),b=_T("sourceLocB",h-1).concat("inIdx.b"),y=_T("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ZE(e,t,n,a=null){let s=t.shape[0],r=t.shape[1];null!=a&&(s=a.shape[0],r=a.shape[1]);const i=Ju(r),o={windowSize:i,inSize:r,batchSize:s,outSize:Math.ceil(r/i)},l=new YE(o,n,null==a),u=[t];null!=a&&u.push(a);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=ZE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function QE(e,t,n,a=null){const s=null!=a?a.shape:t.shape,r=Ju(s[s.length-1]),i=new JE(s,r,n,null==a),o=null==a?[t]:[t,a],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const a=QE(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function eR(e,t,n,a){const s=[n];if(jo("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!ee().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],r=e.texData.get(t.dataId);let i=t;null!==r&&r.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Uo(i.shape,s),u=I(l),c=vE({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=ZE(e,c,a);n.push(h);const d=vE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return QE(e,t,a)}const tR={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;let i=R(r,s.shape);const o=Go(i,s.shape.length);let l=s;const u=[];null!=o&&(l=FE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=qo(i.length,l.shape.length)),jo("argMax",[i[0]],l.shape.length);const c=eR(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},nR={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r}=a;let i=R(r,s.shape);const o=Go(i,s.shape.length);let l=s;const u=[];null!=o&&(l=FE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=qo(i.length,l.shape.length)),jo("argMin",[i[0]],l.shape.length);const c=eR(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},aR=fE({opSnippet:UT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),sR={kernelName:fe,backendName:"webgl",kernelFunc:aR},rR=fE({opSnippet:UT+"return log(x + sqrt(x * x + 1.0));"}),iR={kernelName:me,backendName:"webgl",kernelFunc:rR},oR=fE({opSnippet:UT+"\n  return atan(x);\n"}),lR={kernelName:ge,backendName:"webgl",kernelFunc:oR},uR=mE({opSnippet:QT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+tE+"\n  return result;\n"}),cR={kernelName:ye,backendName:"webgl",kernelFunc:uR},hR=fE({opSnippet:UT+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),dR={kernelName:be,backendName:"webgl",kernelFunc:hR};class pR{constructor(e,t,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const x=4*Math.floor(r/4),k=r%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class fR{constructor(e,t,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / max(count, 1.0)");const w=4*Math.floor(r/4),v=r%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${k});\n      }\n    `}}const mR={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;eN(s,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;k(Xi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pi(s.shape,r,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&S(u.inShape,u.outShape))return aE({inputs:{x:s},backend:n});const c=new pR(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},gR={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,c=Bi(s.shape,r,i,[1,1,1],o,l,u),h=new fR(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class bR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xR={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,h=Bi(i.shape,o,l,[1,1,1],u,c),d=new yR(h);return n.runWebGLProgram(d,[s],i.dtype)}},kR={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r;eN([s,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=a,c=Pi(i.shape,o,l,1,u),h=new bR(c);return n.runWebGLProgram(h,[s],i.dtype)}},wR={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:r}=t,{transposeA:i,transposeB:o}=a;return _E({a:s,b:r,transposeA:i,transposeB:o,backend:n})}};class vR{constructor(e,t,n,a,s,r){this.outputShape=[],this.variableNames=["x","mean","variance"],ti(e,t),ti(e,n);let i="0.0";null!=a&&(ti(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ti(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${r}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class IR{constructor(e,t,n,a,s,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ti(e,t),ti(e,n);let i="vec4(0.0)";null!=a&&(ti(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ti(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${r}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const SR={kernelName:ft,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:r,offset:i,scale:o}=e;k(s.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),k(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),k(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[a,s,r];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=ee().getBool("WEBGL_PACK_NORMALIZATION")?new IR(a.shape,s.shape,r.shape,c,h,l):new vR(a.shape,s.shape,r.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class CR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=bN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return $R.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${$R[t]} = start[${t}] + coords.${$R[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const $R=["x","y","z","w","u","v"];class NR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=bN(this.rank),n=_T("coords",this.rank),a=_T("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,r=`getChannel(getSource(${a.join()}), ${s})`,i=`\n      result.x = ${r};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${r};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${r};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${r};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function TR(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,size:i}=a,[o,l]=Fi(s,r,i);if(yi(s,o,l),0===I(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=yT(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Ri(s.shape,o,l);if(u||!c){const e=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NR(l):new CR(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),r=a.makeTensorInfo(n,e.dtype),i=a.texData.get(r.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Ai(t,W(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),r}(s,o,l,n)}const ER={kernelName:Rn,backendName:"webgl",kernelFunc:TR},RR={kernelName:Se,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,crops:i}=a;k(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),l=Qu(s.shape,r,o),u=ec(l.length,r.length),c=tc(s.shape,r,o),h=nc(i,r.length),d=ac(c,i,r.length),p=[],f=vE({inputs:{x:s},backend:n,attrs:{shape:l}}),m=FE({inputs:{x:f},backend:n,attrs:{perm:u}}),g=vE({inputs:{x:m},backend:n,attrs:{shape:c}}),b=TR({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},AR={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i}=a,o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=PN(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}},FR={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a,b:s}=t,r=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=ee().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,s])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(s.dataId).values,[r,i]=WN(a.shape,s.shape,e,t,a.dtype),o=n.makeTensorInfo(i,a.dtype);return n.texData.get(o.dataId).values=r,o}let o;return o=r?new nE("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,s.shape,!1):new eE("\n  return float(int(a.r) & int(b.r));\n",a.shape,s.shape),n.runWebGLProgram(o,[a,s],a.dtype)}},DR={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,r=n.readSync(a.dataId),i=n.readSync(s.dataId),o=ti(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},_R=mE({opSnippet:"return float(a != b);",cpuKernelImpl:lT,dtype:"bool"}),zR={kernelName:Jt,backendName:"webgl",kernelFunc:_R};function OR(e){const{inputs:t,backend:n}=e,{input:a}=t;return aE({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const LR={kernelName:pn,backendName:"webgl",kernelFunc:OR},MR={kernelName:Te,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:r}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return aE({inputs:{x:r},backend:a});const t=il(r.shape),n=e({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),s=rE({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===r.dtype){const t=OR({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!_(r.dtype,i)){const e=aE({inputs:{x:r},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([r])){const e=a.texData.get(r.dataId).values,[t,n,s]=UN(e,r.shape,r.dtype,i);return a.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new WT(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(r,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",F("bool",1)),t=_R({inputs:{a:r,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}},PR="return ceil(x);",BR=fE({opSnippet:PR,packedOpSnippet:PR,cpuKernelImpl:VN}),WR={kernelName:Ee,backendName:"webgl",kernelFunc:BR};class UR{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class VR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const jR={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:r,clipValueMax:i}=a;let o;o=ee().getBool("WEBGL_PACK_CLIP")?new VR(s.shape):new UR(s.shape);const l=[[r],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class GR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function HR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const qR={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=n.texData.get(a.dataId),r=new GR(a.shape),i=[HR(a,s.complexTensorInfos.real),HR(a,s.complexTensorInfos.imag)];return n.runWebGLProgram(r,i,i[0].dtype)}};class KR{constructor(e){this.outputShape=[],this.outputShape=ju(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}const a=t.length,s=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class XR{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ju(e,t);const n=this.outputShape,a=n.length,s=bN(a),r=_T("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${YR(i,l,t)}),\n            vec2(${YR(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${YR(i,l,p)}),\n          vec2(${YR(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${r}), 0., 0., 0.);\n\n        ${r[a-1]} = ${r[a-1]} + 1;\n        if (${r[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${r});\n        }\n\n        ${r[a-2]} = ${r[a-2]} + 1;\n        if (${r[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${r});\n        }\n\n        ${r[a-1]} = ${r[a-1]} - 1;\n        if (${r[a-2]} < ${n[a-2]} &&\n            ${r[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${r});\n        }\n        setOutput(result);\n      }\n    `}}function YR(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function JR(e){const{inputs:t,backend:n}=e,{input:a}=t;return aE({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const ZR={kernelName:wt,backendName:"webgl",kernelFunc:JR};function QR(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>OR({inputs:{input:e},backend:n}))),s=e.map((e=>JR({inputs:{input:e},backend:n}))),r=QR(a,t,n),i=QR(s,t,n),o=rE({inputs:{real:r,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map((e=>{const a=I(e.shape.slice(t));return vE({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),r=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=ju(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=jN(r,i,a,o),u=ju(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,a,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const r=e.filter((e=>I(e.shape)>0)),i=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(1===r.length){const t=i?new WT(e[0].shape,HT):new qT(e[0].shape,HT);return n.runWebGLProgram(t,e,a)}const o=ee().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>o){const e=[];for(let a=0;a<r.length;a+=o){const s=r.slice(a,a+o);e.push(QR(s,t,n))}const a=QR(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new XR(r.map((e=>e.shape)),t);return n.runWebGLProgram(e,r,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=ju(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>vE({inputs:{x:e},attrs:{shape:[-1,I(e.shape.slice(t))]},backend:n}))),outShape:a}}(r,t,n),c=new KR(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=vE({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function eA(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,r=R(s,t[0].shape)[0];Vu(t.map((e=>e.shape)),r);const i=ju(t.map((e=>e.shape)),r);if(0===I(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>I(e.shape)>0));return 1===o.length?aE({inputs:{x:o[0]},backend:n}):QR(o,r,n)}const tA={kernelName:De,backendName:"webgl",kernelFunc:eA};class nA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",k="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${k}\n        setOutput(result);\n      }\n    `}}class aA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${r}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=IN(this.outputShape.length);const r=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(r%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=r%2==0?y(o):o;o%2==0&&r%2==1||o%2!=0&&r%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(r%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class rA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=IN(this.outputShape.length);const{dataFormat:n}=t,a=nN(),s="channelsLast"===n,r=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${r}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}}function iA(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function oA({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=a.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=r){const e=iA(r.shape,p);null!=e&&(r=vE({inputs:{x:r},backend:a,attrs:{shape:e}}),g.push(r))}if(null!=s){const e=iA(s.shape,p);null!=e&&(s=vE({inputs:{x:s},backend:a,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&S(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,k(K$(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=vE({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const b=_E({a:h,b:p,backend:a,transposeA:!1,transposeB:f,bias:s,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),y=a.texData.get(b.dataId);k(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=n.outShape,m=aE({inputs:{x:b},backend:a}),m.shape=n.outShape,g.push(b)}else{const l=n.outHeight*n.outWidth,u=vE({inputs:{x:e},backend:a,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=vE({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=_E({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:f,backend:a,bias:s,activation:o,preluActivationWeights:r,leakyreluAlpha:i});m=vE({inputs:{x:h},backend:a,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)a.disposeIntermediateTensorInfo(e);return m}function lA({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,b=[n.batchSize,m,g],y=[];if(null!=r){const e=iA(r.shape,f);null!=e&&(r=vE({inputs:{x:r},backend:a,attrs:{shape:e}}),y.push(r))}if(null!=s){const e=iA(s.shape,f);null!=e&&(s=vE({inputs:{x:s},backend:a,attrs:{shape:e}}),y.push(s))}const x=vE({inputs:{x:t},backend:a,attrs:{shape:[1,m,I(t.shape)/m]}});y.push(x);const k=new rA(b,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],v=a.runWebGLProgram(k,[e],"float32",w),S=vE({inputs:{x:v},backend:a,attrs:{shape:b}});y.push(v),y.push(S);const C=null!=s,$=null!=r,N="leakyrelu"===o,T=o?gE(o,!0):null,E=new bE(f?S.shape:x.shape,f?x.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,C,T,$,N),R=f?[S,x]:[x,S];if(s&&R.push(s),$&&R.push(r),N){const e=a.makeTensorInfo([],"float32",Ba(i,"float32"));R.push(e),y.push(e)}const A=a.runWebGLProgram(E,R,"float32"),F=vE({inputs:{x:A},backend:a,attrs:{shape:n.outShape}});y.push(A);for(const e of y)a.disposeIntermediateTensorInfo(e);return F}const uA={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a,h=Ji(l),d=Wi(s.shape,r.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ee().getBool("WEBGL_EXP_CONV")){const e=new sA(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,r],"float32",t)}else if(ee().getBool("WEBGL_CONV_IM2COL"))p=lA({x:s,filter:r,convInfo:d,backend:n});else{const e=new nA(d);p=n.runWebGLProgram(e,[s,r],"float32")}else p=oA({x:s,filter:r,convInfo:d,backend:n});const f=vE({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class cA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,s=e.padInfo.left,r="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${r?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,r="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=r?1:2,u=r?2:3,c=r?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,s=e.padInfo.front,r=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${r};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fA={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a,h=Ji(l),d=Wi(s.shape,c,i,1,o,u,!1,h),p=new cA(d);return n.runWebGLProgram(p,[s,r],"float32")}};class mA{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=IN(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const gA={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a,h=Ji(u),d=Wi(i,r.shape,o,1,l,c,!1,h);if(ee().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new mA(d);return n.runWebGLProgram(t,[s,r],"float32",e)}{const e=new hA(d);return n.runWebGLProgram(e,[s,r],"float32")}}},bA={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l}=a,u=Ui(s.shape,r.shape,i,l,o),c=new aA(u);return n.runWebGLProgram(c,[s,r],"float32")}},yA={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,pad:o,filterShape:l}=a,u=Ui(s.shape,l,i,1,o),c=new dA(u);return n.runWebGLProgram(c,[s,r],"float32")}},xA={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{pad:i,strides:o,inputShape:l}=a,u=Ui(l,r.shape,o,1,i),c=new pA(u);return n.runWebGLProgram(c,[s,r],"float32")}},kA=fE({opSnippet:pE+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${tE}\n  return result;\n`}),wA={kernelName:Be,backendName:"webgl",kernelFunc:kA},vA=fE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),IA={kernelName:We,backendName:"webgl",kernelFunc:vA};class SA{constructor(e,t,n,a,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===a?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,k]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${r}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const CA={kernelName:je,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:r,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,c=new SA(s.shape,r.shape,o,l,u);return n.runWebGLProgram(c,[s,r,i],"float32")}};var $A;!function(e){e.Prod="*",e.Sum="+"}($A||($A={}));class NA{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,r=this.op===$A.Prod?"1.0":"0.0",i=n?r:`getX(${TA(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=a?"end != "+(o-1):"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${bN(s)} coords = getOutputCoords();\n        int end = ${EA(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${EA(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${TA(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function TA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function EA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function RA(e,t,n,a,s,r){const i=t.shape.length,o=Go([a],i);let l=t;null!=o&&(l=FE({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=qo(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const c=l.shape[u];let h=aE({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const a=new NA(e,l.shape,!1,r),s=[[t]],i=h;h=n.runWebGLProgram(a,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new NA(e,l.shape,s,r),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){const e=FE({inputs:{x:h},backend:n,attrs:{perm:Ho(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const AA={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a;return RA($A.Prod,s,n,r,i,o)}},FA={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,exclusive:i,reverse:o}=a;return RA($A.Sum,s,n,r,i,o)}},DA={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:r}=t,{size:i,binaryOutput:o}=a;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(r.dataId),a=PN(e,t,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,a)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(r),a=BN(e,t,i,o);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class _A{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const zA={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:r,dataFormat:i}=a,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*r,u=("NHWC"===i?s.shape[2]:s.shape[3])*r,c=("NHWC"===i?s.shape[3]:s.shape[1])/(r*r),h=new _A("NHWC"===i?[o,l,u,c]:[o,c,l,u],r,i);return n.runWebGLProgram(h,[s],s.dtype)}};class OA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=IN(this.outputShape.length);const r=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${r}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class LA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=IN(this.outputShape.length);const r=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?y(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${r};\n        int q = d2 - d1 * ${r};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const MA={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;let c=l;null==c&&(c=[1,1]),k(Xi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Wi(s.shape,r.shape,i,c,o,u,!0);let d;d=ee().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new LA(h):new OA(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,r],"float32",p)}};class PA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,s=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${r} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,r=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const WA={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a,h=Wi(s.shape,c,i,o,l,u,!0),d=new PA(h);return n.runWebGLProgram(d,[s,r],"float32")}},UA={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a,h=Wi(c,r.shape,i,o,l,u,!0),d=new BA(h);return n.runWebGLProgram(d,[s,r],"float32")}};class VA{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const jA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],r=I(a.shape),i=vE({inputs:{x:a},backend:n,attrs:{shape:[r]}}),o=new VA(r),l=n.runWebGLProgram(o,[i],i.dtype),u=vE({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class GA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:s,strideWidth:r,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=a;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${r});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const HA={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r}=t,{strides:i,pad:o,dilations:l}=a,u=Mi(s.shape,r.shape,i,o,"NHWC",l);let c;const h=new GA(u);c=n.runWebGLProgram(h,[s,r],"float32");const d=vE({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},qA={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,r=t,{allDims:i,summedDims:o,idDims:l}=Tc(s,r.length);Rc(i.length,l,r);const{path:u,steps:c}=Ac(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:a}=Ec(p,l[t]);let s;Fc(e)?s=r[t]:(s=FE({inputs:{x:r[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);S(s.shape,i)||(s=vE({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=kE({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=RE({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},KA=fE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),XA={kernelName:nt,backendName:"webgl",kernelFunc:KA},YA={kernelName:at,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,r=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nE("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new eE("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(r,[a,s],a.dtype)}},JA=mE({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:GN}),ZA={kernelName:rt,backendName:"webgl",kernelFunc:JA},QA=fE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${cc};\n  float a1 = ${hc};\n  float a2 = ${dc};\n  float a3 = ${pc};\n  float a4 = ${fc};\n  float a5 = ${mc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),eF={kernelName:st,backendName:"webgl",kernelFunc:QA},tF=fE({opSnippet:pE+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:HN,dtype:"float32"}),nF={kernelName:it,backendName:"webgl",kernelFunc:tF};function aF(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:r}=t,i=r.shape.length,o=r.shape.slice();let l=s;return s<0&&(k(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),vE({inputs:{x:r},backend:a,attrs:{shape:o}})}const sF={kernelName:ot,backendName:"webgl",kernelFunc:aF},rF="return exp(x) - 1.0;",iF=fE({opSnippet:rF,packedOpSnippet:rF,cpuKernelImpl:qN}),oF={kernelName:lt,backendName:"webgl",kernelFunc:iF};class lF{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=n?`${a}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${r};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function uF(e,t,n){const a=n.texData.get(e.dataId),s=I(e.shape),r=e.shape[e.shape.length-1],i=vE({inputs:{x:e},backend:n,attrs:{shape:[s/r,r]}}),o=i.shape,l=new lF("real",o,t),u=new lF("imag",o,t),c=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=rE({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=vE({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const cF={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return uF(a,!1,n)}};class hF{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function dF(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:r}=n;if(r=r||M(s),"string"===r){const e=D(r,I(a));return e.fill(s),t.makeTensorInfo(a,r,e)}{const e=new hF(a,s),n=[[s]];return t.runWebGLProgram(e,[],r,n)}}const pF={kernelName:ct,backendName:"webgl",kernelFunc:dF};class fF{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const mF={kernelName:ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,s=new fF(n.shape);return a.runWebGLProgram(s,[n],n.dtype)}},gF="return floor(x);",bF=fE({opSnippet:gF,packedOpSnippet:gF,cpuKernelImpl:KN}),yF={kernelName:dt,backendName:"webgl",kernelFunc:bF},xF=mE({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),kF={kernelName:pt,backendName:"webgl",kernelFunc:xF};class wF{constructor(e){this.variableNames=["A"];const t=nN(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class vF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=nN(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const IF={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:r}=a,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,r];if(o||i){const e=ee().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=SF&&e===CF||(CF=e,SF=document.createElement("canvas").getContext("2d",{willReadFrequently:CF})),SF.canvas.width=l,SF.canvas.height=u,SF.drawImage(s,0,0,l,u),s=SF.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=$$.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ee().getBool("WEBGL_PACK")?new vF(h):new wF(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let SF,CF=ee().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const $F={kernelName:pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=Ji(c),g=Wi(s.shape,r.shape,l,h,u,d,!1,m);let b;const y=[],x=null!=i,k=null!=o,w="leakyrelu"===p,v=()=>{const e=[s,r],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=vE({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(i,c)),k&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Ba(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&ee().getBool("WEBGL_EXP_CONV")){const e=p?gE(p,!0):null,t=new sA(g,x,e,k,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=v();b=n.runWebGLProgram(t,s,"float32",a)}else if(ee().getBool("WEBGL_CONV_IM2COL"))b=lA({x:s,filter:r,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?gE(p,!1):null,t=new nA(g,x,e,k,w),a=v();b=n.runWebGLProgram(t,a,"float32")}else b=oA({x:s,filter:r,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=vE({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},NF={kernelName:fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=c;null==m&&(m=[1,1]),k(Xi(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Wi(s.shape,r.shape,l,m,u,h,!0),b=ee().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?gE(d,b):null,x=[s,r],w=null!=i,v=null!=o,I="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),I){const e=n.makeTensorInfo([],"float32",Ba(p,"float32"));x.push(e),f.push(e)}let S;S=b?new LA(g,w,y,v,I):new OA(g,w,y,v,I);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=n.runWebGLProgram(S,x,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class TF{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const s=bN(n.length);let r="\n    int index;";for(let e=0;e<this.sliceDim;e++)r+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${r}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const EF={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,r=s.shape,i=r[r.length-1],o=I(a.shape),[l,u,c,h]=sc(a,s),d=vE({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=vE({inputs:{x:a},backend:n,attrs:{shape:[I(a.shape)/c,c]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=XN(e,t,a.dtype,u,i,c,h,a.shape,o);return n.makeTensorInfo(l,a.dtype,r.values)}const f=new TF(i,h,[u,c],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=vE({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class RF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=bN(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push(`${t[a]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}function AF(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:r}=t,{axis:i,batchDims:o}=a,l=R(i,s.shape)[0];if(ee().get("DEBUG")){const e=n.readSync(r.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const a=e[n];k(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}const u=Xc(s,r,l,o),c=I(r.shape),h=[],d=vE({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=vE({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=YN(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const m=new RF(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const b=vE({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const FF={kernelName:mt,backendName:"webgl",kernelFunc:AF},DF=mE({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:JN,dtype:"bool"}),_F={kernelName:bt,backendName:"webgl",kernelFunc:DF},zF=mE({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:ZN}),OF={kernelName:yt,backendName:"webgl",kernelFunc:zF},LF={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return uF(a,!0,n)}},MF=fE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),PF={kernelName:vt,backendName:"webgl",kernelFunc:MF},BF=fE({opSnippet:"return float(isinf(x));",dtype:"bool"}),WF={kernelName:It,backendName:"webgl",kernelFunc:BF},UF=fE({opSnippet:"return float(isnan(x));",dtype:"bool"}),VF={kernelName:St,backendName:"webgl",kernelFunc:UF},jF=mE({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:QN,dtype:"bool"}),GF={kernelName:$t,backendName:"webgl",kernelFunc:jF},HF=mE({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:eT,dtype:"bool"}),qF={kernelName:Nt,backendName:"webgl",kernelFunc:HF},KF={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,num:r}=n,i=tT(a,s,r);return t.makeTensorInfo([i.length],"float32",i)}},XF=fE({opSnippet:pE+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:nT}),YF={kernelName:Et,backendName:"webgl",kernelFunc:XF},JF=fE({opSnippet:pE+"\n  return log(1.0 + x);\n"}),ZF={kernelName:Rt,backendName:"webgl",kernelFunc:JF},QF=mE({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),eD={kernelName:At,backendName:"webgl",kernelFunc:QF},tD=fE({opSnippet:"return float(!(x >= 1.0));"}),nD={kernelName:Ft,backendName:"webgl",kernelFunc:tD},aD=mE({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),sD={kernelName:Dt,backendName:"webgl",kernelFunc:aD};class rD{constructor(e,t,n,a,s){this.variableNames=["x"],this.outputShape=[];const r=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${r}; j <= ${r}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class iD{constructor(e,t,n,a,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${r};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${r}; j <= ${r}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const oD={kernelName:_t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:r,bias:i,alpha:o,beta:l}=a,u=ee().getBool("WEBGL_PACK_NORMALIZATION")?new iD(s.shape,r,i,o,l):new rD(s.shape,r,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class lD{constructor(e,t,n,a,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const uD={kernelName:zt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s,y:r,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a,h=new lD(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,r,i],s.dtype)}};function cD(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:r,keepDims:i}=a,o=s.shape.length,l=R(r,s.shape);let u=l;const c=Go(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const a=AT(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=a}else p=EE(s,c,n);u=qo(u.length,o)}jo("max",u,o);const[f,m]=Uo(p.shape,u);let g,b=f;if(i&&(b=Vo(f,l)),d){const e=n.texData.get(p.dataId).values,t=aT(e,I(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const s=I(t),r=vE({inputs:{x:e},attrs:{shape:[I(e.shape)/s,s]},backend:a}),i=$E(r,e.dtype,"max",a),o=vE({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const hD={kernelName:Ot,backendName:"webgl",kernelFunc:cD},dD=mE({opSnippet:QT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+tE+"\n  return result;\n",cpuKernelImpl:sT}),pD={kernelName:Lt,backendName:"webgl",kernelFunc:dD},fD={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;eN(s,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=a;k(Xi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pi(s.shape,r,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&S(u.inShape,u.outShape))return aE({inputs:{x:s},backend:n});const c=new pR(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},mD={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,c=Bi(s.shape,r,i,[1,1,1],o,u,l),h=new fR(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class gD{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,s=e.effectiveFilterHeight,r=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=r-1-e.padInfo.left,l=s*r-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${r} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bD{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,s=e.dilationDepth,r=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${r}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yD={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r}=t,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,h=Bi(i.shape,o,l,[1,1,1],u,c),d=new fR(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new bD(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},xD={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:r,output:i}=t,o=r;eN([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=a,d=Pi(o.shape,l,u,1,c,h),p=new pR(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new gD(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},kD={kernelName:Ut,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:r,pad:i,includeBatchInIndex:o}=t,l=n;k(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const u=[1,1];k(Xi(r,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`));const c=Pi(a.shape,s,r,u,i),[h,d]=function(e,t,n,a){let s=new pR(n,"max",!1);const r=a.runWebGLProgram(s,[e],"float32");return s=new pR(n,"max",!0,!0,t),[r,a.runWebGLProgram(s,[e],"float32")]}(a,o,c,l);return[h,d]}},wD={kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:r}=t,i=n,o=a.shape.length,l=R(r,a.shape);let u=l;const c=Go(u,o),h=null!=c,d=i.shouldExecuteOnCPU([a]),p=[];let f=a;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const n=AT(e,a.shape,a.dtype,c,t);f=i.makeTensorInfo(t,a.dtype),i.texData.get(f.dataId).values=n}else f=EE(a,c,i);p.push(f),u=qo(u.length,o)}jo("sum",u,o);const[m,g]=Uo(f.shape,u);let b=m;s&&(b=Vo(m,l));const y=function(e,t,n,a){const s=I(t),r=vE({inputs:{x:e},attrs:{shape:[I(e.shape)/s,s]},backend:a}),i=$E(r,"float32","mean",a),o=vE({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}(f,g,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},vD={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=R(r,s.shape);let u=l;const c=Go(u,o);let h=s;null!=c&&(h=FE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=qo(u.length,s.shape.length)),jo("min",u,o);const[d,p]=Uo(h.shape,u),f=vE({inputs:{x:h},backend:n,attrs:{shape:[-1,I(p)]}}),m=$E(f,f.dtype,"min",n);let g;return g=vE(i?{inputs:{x:m},backend:n,attrs:{shape:Vo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},ID=mE({opSnippet:QT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+tE+"\n  return result;\n",cpuKernelImpl:rT}),SD={kernelName:Gt,backendName:"webgl",kernelFunc:ID};class CD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=bN(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${s} start = ${s}(${r});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${r};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class $D{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=bN(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=_T("rc",a),l=_T("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===a){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${r});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const ND={kernelName:Ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:s,mode:r}=n,i=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $D(a.shape,s,r):new CD(a.shape,s,r);return t.runWebGLProgram(i,[a],a.dtype)}},TD=mE({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+tE+"\n  return result;\n"}),ED={kernelName:qt,backendName:"webgl",kernelFunc:TD};class RD{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const AD=mE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),FD={kernelName:et,backendName:"webgl",kernelFunc:AD},DD="return a - b;",_D=mE({opSnippet:DD,packedOpSnippet:DD,supportsComplex:!0,cpuKernelImpl:TT}),zD={kernelName:Qn,backendName:"webgl",kernelFunc:_D};function OD(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:r}=a,i=R([r],s.shape),o=cD({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Vo(o.shape,i),u=vE({inputs:{x:o},backend:n,attrs:{shape:l}}),c=_D({inputs:{a:s,b:u},backend:n}),h=tF({inputs:{x:c},backend:n}),d=RE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=vE({inputs:{x:d},backend:n,attrs:{shape:l}}),f=AD({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const LD={kernelName:Bn,backendName:"webgl",kernelFunc:OD},MD={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:r,seed:i,normalized:o}=a,l=o?s:OD({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new RD(u,c,r),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},PD=UT+"\n  return -x;\n",BD={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,s]=oT(e.values,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,t)}let s;return s=ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new qT(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new WT(a.shape,PD),n.runWebGLProgram(s,[a],a.dtype)}},WD=pu,UD={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){ma("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(s.dataId),c=n.readSync(r.dataId),{selectedIndices:h}=WD(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},VD=fu,jD={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){ma("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,c=n.readSync(s.dataId),h=n.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=VD(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},GD=mu,HD={kernelName:en,backendName:"webgl",kernelFunc:function(e){ma("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,c=n.readSync(s.dataId),h=n.readSync(r.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=GD(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class qD{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const KD={kernelName:nn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{dtype:r,depth:i,onValue:o,offValue:l}=a,u=I(s.shape),c=new qD(u,i,o,l),h=vE({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],r);n.disposeIntermediateTensorInfo(h);const p=vE({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function XD(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=OR({inputs:{input:a},backend:n}),t=XD({inputs:{x:e},backend:n}),s=JR({inputs:{input:a},backend:n}),r=XD({inputs:{x:s},backend:n}),i=rE({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}return dF({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const YD={kernelName:ua,backendName:"webgl",kernelFunc:XD},JD={kernelName:tn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=OR({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a}),r=JR({inputs:{input:s},backend:a}),i=XD({inputs:{x:r},backend:a}),o=rE({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),o}return dF({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a})}},ZD={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return aF({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const r=t[0].shape,i=t[0].dtype;t.forEach((e=>{w(r,e.shape,"All tensors passed to stack must have matching shapes"),k(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=eA({inputs:t.map((e=>{const t=aF({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class QD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=bN(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${s} start = ${s}(${r});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${r};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class e_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,s=bN(a),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=_T("rc",a),l=_T("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===a?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===a?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${r});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const t_=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:r,constantValue:i}=a;if(0===I(s.shape)){const e=r.map(((e,t)=>e[0]+s.shape[t]+e[1]));return dF({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new e_(s.shape,r,i):new QD(s.shape,r,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},n_={kernelName:sn,backendName:"webgl",kernelFunc:t_},a_=mE({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+tE+"\n  return result;\n"}),s_={kernelName:rn,backendName:"webgl",kernelFunc:a_},r_={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:r,keepDims:i}=a,o=s.shape.length,l=[],u=R(r,s.shape);let c=u;const h=Go(c,o);let d,p=s;if(null!=h&&(p=FE({inputs:{x:s},backend:n,attrs:{perm:h}}),c=qo(c.length,o),l.push(p)),jo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:s}=uT(p.shape,p.dtype,e,c);d=n.makeTensorInfo(a,s,t)}else{const[e,t]=Uo(p.shape,c),a=I(t),r=vE({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),i=$E(r,ms(s.dtype),"prod",n);d=vE({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(r),l.push(i)}if(i){l.push(d);const e=Vo(d.shape,u);d=vE({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},i_={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:s,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:o}=a,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(r.dataId),h=n.readSync(i.dataId),[d,p,f]=cT(l,u,c,r.shape,r.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,r.dtype,p);return m.concat([g])}},o_={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:s,deltas:r}=t,i=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(r.dataId),[u,c]=hT(i,a.shape,a.dtype,o,s.shape,l,r.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],a.dtype,c)]}},l_={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:s,values:r,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(s.dataId),c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=dT(u,s.shape,c,r.shape,r.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,r.dtype,m)}},u_=e=>{const{backend:t,attrs:n}=e,{start:a,stop:s,step:r,dtype:i}=n,o=pT(a,s,r,i);return t.makeTensorInfo([o.length],i,o)},c_={kernelName:dn,backendName:"webgl",kernelFunc:u_},h_=fE({opSnippet:"return 1.0 / x;"}),d_={kernelName:fn,backendName:"webgl",kernelFunc:h_},p_=fE({opSnippet:UT+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),f_={kernelName:mn,backendName:"webgl",kernelFunc:p_},m_=fE({opSnippet:UT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),g_={kernelName:wn,backendName:"webgl",kernelFunc:m_};class b_{constructor(e,t,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class y_{constructor(e,t,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const x_={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a,[l,u]=o,c=ee().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new y_(s.shape,l,u,r,i):new b_(s.shape,l,u,r,i);return n.runWebGLProgram(c,[s],"float32")}};class k_{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,s]=t,[,r,i]=e,o=[n&&r>1?a-1:a,n&&i>1?s-1:s],l=[n&&r>1?r-1:r,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const w_={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a,o=new k_(r.shape,s.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}};class v_{constructor(e,t,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class I_{constructor(e,t,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const S_={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:r,halfPixelCenters:i,size:o}=a,[l,u]=o,c=ee().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new I_(s.shape,l,u,r,i):new v_(s.shape,l,u,r,i);return n.runWebGLProgram(c,[s],s.dtype)}};class C_{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,s]=t,[,r,i]=e,o=[n&&r>1?a-1:a,n&&i>1?s-1:s],l=[n&&r>1?r-1:r,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const $_={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:r}=t,{alignCorners:i}=a,o=new C_(r.shape,s.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}};class N_{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),s=bN(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class T_{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=_T("rc",n),s=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,r=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=bN(n);function o(n){const a=e.map(((a,s)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(s,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${r}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const E_={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:r}=a,i=s.shape.length,o=R(r,s.shape);if(0===i)return aE({inputs:{x:s},backend:n});const l=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new T_(s.shape,o):new N_(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class R_{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const A_={kernelName:ha,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:r,center:i}=t,o=n,l=new R_(a.shape,r),[u,c]=Zu(i,a.shape[1],a.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[a],a.dtype,h)}},F_=fE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),D_={kernelName:In,backendName:"webgl",kernelFunc:F_},__=fE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:fT}),z_={kernelName:Sn,backendName:"webgl",kernelFunc:__};class O_{constructor(e,t,n,a,s,r,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const l=bN(s.length),u=bN(r.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class L_{constructor(e,t,n,a,s,r,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const l=bN(s.length),u=bN(r.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const M_={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:r}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=oc(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=vE({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=vE({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=ee().getBool("WEBGL_PACK")?new L_(l,o,p.shape.length,f.shape.length,c,d):new O_(l,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=vE({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class P_{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,r=2===ee().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${r}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const B_={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:r}=t,{side:i}=a,o=new P_(s.shape[0],s.shape[1],r.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,r],"int32",l)}};class W_{constructor(e,t,n){let a,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&r.push(`${n[a]}`);a=r.join(),s=i.join()}const r=bN(n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const U_={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:r}=t,i=new W_(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[a,s,r],fs(s.dtype,r.dtype))}},V_=fE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${lc};\n  float scale = ${uc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),j_={kernelName:En,backendName:"webgl",kernelFunc:V_},G_=fE({opSnippet:pE+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:gT}),H_={kernelName:_n,backendName:"webgl",kernelFunc:G_},q_=fE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),K_={kernelName:Dn,backendName:"webgl",kernelFunc:q_},X_=fE({opSnippet:pE+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${tE}\n  return result;\n`}),Y_={kernelName:An,backendName:"webgl",kernelFunc:X_},J_=fE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Z_={kernelName:Fn,backendName:"webgl",kernelFunc:J_},Q_=fE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),ez={kernelName:zn,backendName:"webgl",kernelFunc:Q_},tz={kernelName:Mn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:r,paddings:i}=a;k(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+r.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=t_({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Qu(c.shape,r,o,!1),d=ec(h.length,r.length,!1),p=tc(c.shape,r,o,!1),f=vE({inputs:{x:c},backend:n,attrs:{shape:h}}),m=FE({inputs:{x:f},backend:n,attrs:{perm:d}}),g=vE({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},nz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:s,denseShape:r,defaultValue:i}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${r.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=n.readSync(r.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=xT(o,a.shape,a.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},az={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:s,newShape:r}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(r.dataId)),[u,c,h]=kT(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}},sz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${r.shape}`);const i=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(r.dataId),[u,c]=wT(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(c,a.dtype,u)}},rz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${r.shape}`);const i=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(r.dataId),[u,c]=wT(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(c,a.dtype,u)}},iz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:r,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=oc(0,s,o),p=!1;if("string"===r.dtype){const e=n.bufferSync(s),t=n.bufferSync(r),a=ja(n.readSync(i.dataId)[0]),f=mT(e,t,o,d,c,u,l,h,a,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new O_(u,l,s.shape.length,r.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[r,s,i],r.dtype),g=vE({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},oz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:r,axis:i}=a,o=R(i,s.shape)[0],l=_c(s,r,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const a=TR({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},lz="return sqrt(x);",uz=fE({opSnippet:lz,packedOpSnippet:lz,cpuKernelImpl:vT}),cz={kernelName:On,backendName:"webgl",kernelFunc:uz},hz={kernelName:qn,backendName:"webgl",kernelFunc:fE({opSnippet:"return x * x;"})},dz="return (a - b) * (a - b);",pz=mE({opSnippet:dz,packedOpSnippet:dz}),fz={kernelName:Hn,backendName:"webgl",kernelFunc:pz},mz={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const r=Yc(n.readSync(s.dataId)),i=IT(r,"string",a);return n.makeTensorInfo(s.shape,"string",i)}},gz={kernelName:ca,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,s=UT+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,r=new WT(a.shape,s);return n.runWebGLProgram(r,[a],a.dtype)}};class bz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,s=bN(n.length),r=bN(n.length);let i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const yz={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:x,strides:w}=Di(s.shape,r,i,o,l,u,c,h,d);let v;if(m)v=vE({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||b){k(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ki(y,x,w),t=TR({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});v=vE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Tr(s.shape,s.dtype,e),a=ST(p,t,w,y);v=n.makeTensorInfo(f,s.dtype,a.values)}else{const e=new bz(y,w,p);v=n.runWebGLProgram(e,[s],s.dtype)}const I=vE({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),I}},xz={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:s,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=CT(d,p,s,r,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},kz={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:s}=a,{input:r,delimiter:i}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=$T(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},wz={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:s}=a,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(r.dataId),o=NT(i,s);return n.makeTensorInfo(r.shape,"int32",o)}},vz=fE({opSnippet:"return tan(x);"}),Iz={kernelName:ea,backendName:"webgl",kernelFunc:vz},Sz=fE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Cz={kernelName:ta,backendName:"webgl",kernelFunc:Sz},$z={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:s,indices:r,updates:i}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=oc(0,r,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,r.dtype);const p=vE({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=vE({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=vE({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new O_(l,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(g,[f,p,m],m.dtype),y=vE({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),y}};class Nz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const a=bN(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Tz(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:r}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>ja(e))):e,a=Tr(s.shape,s.dtype,t),i=ET(a,r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new Nz(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const Ez={kernelName:na,backendName:"webgl",kernelFunc:Tz};class Rz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Az{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Fz(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Dz(e){let t=1;for(;t<e;)t*=2;return t}const _z={kernelName:aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:r,sorted:i}=a,o=ee().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ee().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||r>l){const e=n.readSync(s.dataId),[t,a]=RT(e,u,s.dtype,r,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===r)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,dF({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=I(u)/c,m=vE({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&Fz(n,p);const g=Dz(r),b=Dz(c);let y=null;const x=()=>null===y?[m,m]:[m,y],k=(e,t,a)=>{const s=x(),r=new Rz(a),i=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(r,s,"int32",i),Fz(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)k(t,n,[f,b])}for(let e=b;e>g;e/=2){const t=x(),a=new Az([f,e/2]),s=[[c],[null===y?1:0],[g]],r=y;y=n.runWebGLProgram(a,t,"int32",s),Fz(n,r);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)k(o,e,y.shape)}let w=y;y=TR({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,r]}}),Fz(n,w);let v=AF({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Fz(n,m);const S=u.slice(0,-1);S.push(r),w=y,y=vE({inputs:{x:y},attrs:{shape:S},backend:n}),Fz(n,w);const C=v;return v=vE({inputs:{x:v},attrs:{shape:S},backend:n}),Fz(n,C),[v,y]}};class zz{constructor(e,t,n,a,s,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const i="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Oz={kernelName:sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,transforms:r}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new zz(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,r],"float32")}},Lz={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:s}=n,{x:r}=t;eN(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=a.readSync(r.dataId),{outputValues:o,outputShape:l,indices:u}=FT(i,s,r.shape,r.dtype);return[a.makeTensorInfo(l,r.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},Mz={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:s}=t;let{axis:r}=a;r<0&&(r+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[r],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==r&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[r]=e;const t=TR({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),a=vE({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=a,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Pz{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,s=e.inSize,r=e.numSegments,i=r*Math.ceil(s/n);this.outputShape=[a,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${r})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${r})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Bz={kernelName:la,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:r}=t,{numSegments:i}=a,o=s.shape.length,l=[];let u=0;const c=Go([u],o);let h=s;null!=c&&(h=FE({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=qo(1,o)[0]);const d=Kc(h.shape,u,i),p=I([h.shape[u]]),f=vE({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=ms(s.dtype),g=(e,t,a,s,r)=>{const i=e.shape[0],o=e.shape[1],u=qc(o,r),c=new Pz({windowSize:u,inSize:o,batchSize:i,numSegments:r},t),h=n.compileAndRun(c,[e,a],s);if(l.push(h),h.shape[1]===r)return h;const d=u_({backend:n,attrs:{start:0,stop:r,step:1,dtype:"float32"}}),p=Tz({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,s,r)},b=vE({inputs:{x:g(f,"unsortedSegmentSum",r,m,i)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const e=Ho(c);y=FE({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Wz=[zE,LE,PE,WE,jE,qE,KE,XE,tR,nR,sR,iR,lR,cR,dR,mR,gR,xR,kR,wR,SR,RR,AR,FR,DR,MR,WR,jR,iE,qR,tA,uA,fA,gA,bA,yA,xA,wA,IA,CA,AA,FA,DA,zA,MA,WA,UA,jA,HA,qA,XA,YA,ZA,eF,nF,sF,oF,cF,pF,mF,yF,kF,IF,$F,NF,EF,FF,_F,OF,sE,LF,ZR,PF,WF,VF,uE,GF,qF,KF,YF,ZF,eD,nD,sD,oD,uD,hD,pD,fD,mD,yD,xD,kD,wD,vD,SD,ND,ED,MD,wE,BD,UD,jD,HD,zR,KD,JD,ZD,n_,s_,dE,r_,i_,o_,l_,c_,LR,FD,d_,f_,g_,IE,x_,w_,S_,$_,E_,A_,D_,z_,M_,B_,U_,j_,H_,K_,Y_,Z_,ER,LD,ez,tz,nz,az,sz,rz,iz,oz,cz,hz,fz,mz,gz,yz,xz,kz,wz,zD,AE,Iz,Cz,$z,Ez,_z,Oz,DE,Lz,Mz,Bz,YD];for(const e of Wz)va(e);function Uz(e){return Uz="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Uz(e)}function Vz(){Vz=function(){return t};var e,t={},n=Object.prototype,a=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",l=r.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,a){var r=t&&t.prototype instanceof b?t:b,i=Object.create(r.prototype),o=new R(a||[]);return s(i,"_invoke",{value:$(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var d="suspendedStart",p="suspendedYield",f="executing",m="completed",g={};function b(){}function y(){}function x(){}var k={};u(k,i,(function(){return this}));var w=Object.getPrototypeOf,v=w&&w(w(A([])));v&&v!==n&&a.call(v,i)&&(k=v);var I=x.prototype=b.prototype=Object.create(k);function S(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function C(e,t){function n(s,r,i,o){var l=h(e[s],e,r);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==Uz(c)&&a.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var r;s(this,"_invoke",{value:function(e,a){function s(){return new t((function(t,s){n(e,a,t,s)}))}return r=r?r.then(s,s):s()}})}function $(t,n,a){var s=d;return function(r,i){if(s===f)throw Error("Generator is already running");if(s===m){if("throw"===r)throw i;return{value:e,done:!0}}for(a.method=r,a.arg=i;;){var o=a.delegate;if(o){var l=N(o,a);if(l){if(l===g)continue;return l}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if(s===d)throw s=m,a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);s=f;var u=h(t,n,a);if("normal"===u.type){if(s=a.done?m:p,u.arg===g)continue;return{value:u.arg,done:a.done}}"throw"===u.type&&(s=m,a.method="throw",a.arg=u.arg)}}}function N(t,n){var a=n.method,s=t.iterator[a];if(s===e)return n.delegate=null,"throw"===a&&t.iterator.return&&(n.method="return",n.arg=e,N(t,n),"throw"===n.method)||"return"!==a&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+a+"' method")),g;var r=h(s,t.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,g;var i=r.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function A(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,r=function n(){for(;++s<t.length;)if(a.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return r.next=r}}throw new TypeError(Uz(t)+" is not iterable")}return y.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:y,configurable:!0}),y.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},S(C.prototype),u(C.prototype,o,(function(){return this})),t.AsyncIterator=C,t.async=function(e,n,a,s,r){void 0===r&&(r=Promise);var i=new C(c(e,n,a,s),r);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},S(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},t.values=A,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(E),!t)for(var n in this)"t"===n.charAt(0)&&a.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(a,s){return o.type="throw",o.arg=t,n.next=a,s&&(n.method="next",n.arg=e),!!s}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=a.call(i,"catchLoc"),u=a.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&a.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var r=s;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var i=r?r.completion:{};return i.type=e,i.arg=t,r?(this.method="next",this.next=r.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var s=a.arg;E(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,a){return this.delegate={iterator:A(t),resultName:n,nextLoc:a},"next"===this.method&&(this.arg=e),g}},t}function jz(e,t,n,a,s,r,i){try{var o=e[r](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,s)}function Gz(e){return function(){var t=this,n=arguments;return new Promise((function(a,s){var r=e.apply(t,n);function i(e){jz(r,a,s,i,o,"next",e)}function o(e){jz(r,a,s,i,o,"throw",e)}i(void 0)}))}}var Hz={},qz=null;function Kz(){return Xz.apply(this,arguments)}function Xz(){return(Xz=Gz(Vz().mark((function e(){var t,n;return Vz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=chrome.runtime.getURL("fqdn_embeddings.json"),e.next=4,fetch(t);case 4:return n=e.sent,e.next=7,n.json();case 7:Hz=e.sent,console.log("FQDN Embeddings loaded successfully."),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),console.error("Error loading FQDN embeddings:",e.t0);case 14:case"end":return e.stop()}}),e,null,[[0,11]])})))).apply(this,arguments)}function Yz(){return(Yz=Gz(Vz().mark((function e(t){return Vz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Hz){e.next=3;break}return e.next=3,Kz();case 3:return e.abrupt("return",Hz[t]);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Jz(){return Zz.apply(this,arguments)}function Zz(){return(Zz=Gz(Vz().mark((function e(){return Vz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Zg(chrome.runtime.getURL("classifier/model.json"));case 3:return qz=e.sent,console.log("Model loaded successfully."),e.next=7,qz.save("indexeddb://model");case 7:console.log("Model saved to IndexedDB"),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.error("Error loading the model:",e.t0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])})))).apply(this,arguments)}function Qz(){return(Qz=Gz(Vz().mark((function e(t){var n,a,s;return Vz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,qz){e.next=6;break}return console.warn("Model not loaded yet. Loading now..."),e.next=5,Zg("indexeddb://model");case 5:qz=e.sent;case 6:return n=_l([t]),a=qz.predict(n),s=a.dataSync()[0],n.dispose(),a.dispose(),e.abrupt("return",s);case 14:return e.prev=14,e.t0=e.catch(0),console.error("Error making prediction:",e.t0),e.abrupt("return",null);case 18:case"end":return e.stop()}}),e,null,[[0,14]])})))).apply(this,arguments)}chrome.runtime.onMessage.addListener((function(e,t,n){if("getEmbedding"===e.type)(function(e){return Yz.apply(this,arguments)})(e.char).then((function(e){n({success:!0,embedding:e})}));else{if("getPrediction"===e.type)return function(e){return Qz.apply(this,arguments)}(e.features).then((function(e){n({success:!0,prediction:e})})),!0;if("parse"===e.type){var a=function(e,t={}){return function(e,t,n,a,s){const i=function(e){return void 0===e?l:function({allowIcannDomains:e=!0,allowPrivateDomains:t=!1,detectIp:n=!0,extractHostname:a=!0,mixedInputs:s=!0,validHosts:r=null,validateHostname:i=!0}){return{allowIcannDomains:e,allowPrivateDomains:t,detectIp:n,extractHostname:a,mixedInputs:s,validHosts:r,validateHostname:i}}(e)}(a);return"string"!=typeof e?s:(i.extractHostname?i.mixedInputs?s.hostname=r(e,o(e)):s.hostname=r(e,!1):s.hostname=e,0===t||null===s.hostname||i.detectIp&&(s.isIp=function(e){if(e.length<3)return!1;let t=e.startsWith("[")?1:0,n=e.length;if("]"===e[n-1]&&(n-=1),n-t>39)return!1;let a=!1;for(;t<n;t+=1){const n=e.charCodeAt(t);if(58===n)a=!0;else if(!(n>=48&&n<=57||n>=97&&n<=102||n>=65&&n<=90))return!1}return a}(u=s.hostname)||function(e){if(e.length<7)return!1;if(e.length>15)return!1;let t=0;for(let n=0;n<e.length;n+=1){const a=e.charCodeAt(n);if(46===a)t+=1;else if(a<48||a>57)return!1}return 3===t&&46!==e.charCodeAt(0)&&46!==e.charCodeAt(e.length-1)}(u),s.isIp)?s:i.validateHostname&&i.extractHostname&&!o(s.hostname)?(s.hostname=null,s):(n(s.hostname,i,s),2===t||null===s.publicSuffix||(s.domain=function(e,t,n){if(null!==n.validHosts){const e=n.validHosts;for(const n of e)if(function(e,t){return!!e.endsWith(t)&&(e.length===t.length||"."===e[e.length-t.length-1])}(t,n))return n}let a=0;if(t.startsWith("."))for(;a<t.length&&"."===t[a];)a+=1;return e.length===t.length-a?null:function(e,t){const n=e.length-t.length-2,a=e.lastIndexOf(".",n);return-1===a?e:e.slice(a+1)}(t,e)}(s.publicSuffix,s.hostname,i),3===t||null===s.domain||(s.subdomain=function(e,t){return t.length===e.length?"":e.slice(0,-t.length-1)}(s.hostname,s.domain),4===t||(s.domainWithoutSuffix=(c=s.domain,h=s.publicSuffix,c.slice(0,-h.length-1))))),s));var u,c,h}(e,5,d,t,{domain:null,domainWithoutSuffix:null,hostname:null,isIcann:null,isIp:null,isPrivate:null,publicSuffix:null,subdomain:null})}(e.url).domain;n({success:!0,parsed:a})}else n({success:!1,message:"Unknown request type"})}return!0})),chrome.runtime.onMessage.addListener((function(e,t,n){if("reload"===e.action)return chrome.tabs.query({active:!0,currentWindow:!0},(function(e){e.length>0&&(chrome.tabs.reload(e[0].id),n({success:!0}))})),!0})),Gz(Vz().mark((function e(){return Vz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Kz();case 2:return e.next=4,Jz();case 4:case"end":return e.stop()}}),e)})))()})()})();